Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ks/call  Ks/call  name    
 38.37  13788.42 13788.42 2431838197     0.00     0.00  SatProblem::getNsc2(int*, int)
 31.17  24989.61 11201.18 11752316369     0.00     0.00  SatProblem::isSatCnj(int*, int)
  9.52  28411.01  3421.40 17919238265     0.00     0.00  std::_List_iterator<int>::operator++(int)
  3.79  29772.81  1361.81 10496591007     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  3.37  30982.30  1209.48 22731455804     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  3.25  32148.49  1166.19  2554165     0.00     0.00  SampleSAT::randomWalk()
  2.73  33130.15   981.66 12882887747     0.00     0.00  std::list<int, std::allocator<int> >::end()
  0.94  33468.36   338.21 4038632130     0.00     0.00  SatProblem::getFixedClausei(int)
  0.79  33752.64   284.27 8087480920     0.00     0.00  SatProblem::getClVecSize()
  0.78  34033.99   281.36 4107415153     0.00     0.00  SatProblem::getClVec(int)
  0.76  34306.42   272.43 21118832738     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.70  34556.96   250.53 2386296740     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.68  34800.28   243.32 5460240489     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  0.56  35002.36   202.08  2552866     0.00     0.00  SampleSAT::greedyWalk()
  0.40  35147.77   145.41 9757221926     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.39  35286.84   139.07 38696667     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.30  35395.53   108.69    10000     0.00     0.00  SatProblem::initParams()
  0.25  35484.00    88.47     2637     0.00     0.00  SatProblem::getNumVariables()
  0.24  35569.86    85.86                             SatProblem::isSat(int*)
  0.24  35654.54    84.68                             std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.17  35715.43    60.89                             std::vector<int, std::allocator<int> >::vector()
  0.14  35765.78    50.34  9826239     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.10  35803.43    37.66  2554165     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.10  35839.09    35.66 2465578691     0.00     0.00  SatProblem::getVar(int)
  0.04  35852.07    12.97 2386296740     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.02  35860.75     8.69 4772614548     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.02  35867.51     6.76    10000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.02  35873.35     5.83 2386296740     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.02  35879.03     5.68    10000     0.00     0.00  SatProblem::cpClVector()
  0.01  35883.82     4.79                             __gnu_cxx::new_allocator<int>::new_allocator()
  0.01  35888.18     4.36 2386296740     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.01  35892.25     4.08        1     0.00    35.59  SampleSAT::cdlearn(int)
  0.01  35896.22     3.97 477636716     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.01  35899.46     3.23 4772604012     0.00     0.00  std::allocator<int>::~allocator()
  0.01  35902.64     3.19        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.01  35905.18     2.54 4772593480     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.01  35907.65     2.47        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.01  35910.06     2.40 477636716     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.01  35912.32     2.27 2386296740     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.01  35914.42     2.10                             __gnu_cxx::new_allocator<int>::destroy(int*)
  0.01  35916.51     2.09 2386296740     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.01  35918.50     1.99 477636716     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00  35920.07     1.57 50880608     0.00     0.00  Random::genrand()
  0.00  35921.57     1.49 2386296740     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00  35923.04     1.48        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00  35924.50     1.45                             __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00  35925.92     1.42    10532     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00  35927.25     1.33                             std::allocator<int>::~allocator()
  0.00  35928.24     0.99                             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00  35929.17     0.94 2386296740     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00  35930.03     0.86 22483483     0.00     0.00  SatProblem::getCnjSize(int)
  0.00  35930.88     0.84 2386307272     0.00     0.00  operator new(unsigned int, void*)
  0.00  35931.68     0.81                             SatProblem::getCnfij(int, int)
  0.00  35932.39     0.71        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00  35933.10     0.70 10216346     0.00     0.00  SampleSAT::walk()
  0.00  35933.69     0.59 553459233     0.00     0.00  SatProblem::getTheta(int)
  0.00  35934.25     0.56                             __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00  35934.68     0.43    10000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00  35935.05     0.37 477647248     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00  35935.38     0.33 52660000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00  35935.71     0.33 42107327     0.00     0.00  SatProblem::getNumSat()
  0.00  35935.97     0.26    10000     0.00     0.00  SampleSAT::init_model()
  0.00  35936.20     0.23  5109315     0.00     0.00  SampleSAT::simAnnealing()
  0.00  35936.39     0.20    10536     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00  35936.55     0.15 14820988     0.00     0.00  SatProblem::getCnj(int, int)
  0.00  35936.67     0.12 14820988     0.00     0.00  SatProblem::getCnf(int)
  0.00  35936.78     0.12                             operator delete(void*, void*)
  0.00  35936.87     0.09 50880608     0.00     0.00  SatProblem::getGrand()
  0.00  35936.94     0.07 38686131     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00  35937.00     0.06 38696667     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.00  35937.06     0.06        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  35937.08     0.03  9826239     0.00     0.00  SatProblem::addNumSat(int)
  0.00  35937.11     0.03        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00  35937.13     0.01                             SatProblem::getRealProb(int)
  0.00  35937.14     0.01  5109315     0.00     0.00  SampleSAT::getTemp()
  0.00  35937.15     0.01        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00  35937.16     0.01        1     0.00     0.00  SatProblem::~SatProblem()
  0.00  35937.17     0.01        1     0.00    35.60  SampleSAT::learn(int*, char*, int)
  0.00  35937.18     0.01        1     0.00     0.00  SampleSAT::readdata(char*, int)
  0.00  35937.19     0.01                             SatProblem::getClause(int)
  0.00  35937.19     0.00   263300     0.00     0.00  std::abs(double)
  0.00  35937.19     0.00    21068     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00  35937.19     0.00    21064     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00  35937.19     0.00    10540     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  35937.19     0.00    10536     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00  35937.19     0.00    10536     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00  35937.19     0.00    10536     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00  35937.19     0.00    10536     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00  35937.19     0.00    10532     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00  35937.19     0.00    10532     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00  35937.19     0.00    10532     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00  35937.19     0.00    10532     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00  35937.19     0.00    10532     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00  35937.19     0.00    10532     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00  35937.19     0.00    10532     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00    10532     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00    10000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.00  35937.19     0.00      406     0.00     0.00  Timer::time()
  0.00  35937.19     0.00      100     0.00     0.00  SatProblem::updateTheta(double*)
  0.00  35937.19     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00  35937.19     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00  35937.19     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00  35937.19     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00  35937.19     0.00        9     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00  35937.19     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00  35937.19     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00  35937.19     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00  35937.19     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00  35937.19     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  35937.19     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00  35937.19     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  35937.19     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  35937.19     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  35937.19     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  35937.19     0.00        4     0.00     0.00  Timer::Timer()
  0.00  35937.19     0.00        4     0.00     0.00  Timer::~Timer()
  0.00  35937.19     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00  35937.19     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00  35937.19     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00  35937.19     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00  35937.19     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00  35937.19     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00  35937.19     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00  35937.19     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00  35937.19     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00  35937.19     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00  35937.19     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00  35937.19     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00  35937.19     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  35937.19     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00  35937.19     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00  35937.19     0.00        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00  35937.19     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00  35937.19     0.00        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00  35937.19     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00  35937.19     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00  35937.19     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00  35937.19     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  35937.19     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  35937.19     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  35937.19     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  35937.19     0.00        1     0.00     0.00  SatProblem::getNumClauses()
  0.00  35937.19     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00  35937.19     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00  35937.19     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00  35937.19     0.00        1     0.00     0.00  SliceSampling::printUnitTime()
  0.00  35937.19     0.00        1     0.00     0.00  SliceSampling::init()
  0.00  35937.19     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00  35937.19     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00  35937.19     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00  35937.19     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00  35937.19     0.00        1     0.00     0.00  Random::Random()
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00  35937.19     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 35937.19 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.3    0.00 35691.55                 main [1]
                0.01 35594.99       1/1           SampleSAT::learn(int*, char*, int) [2]
               88.41    0.00    2635/2637        SatProblem::getNumVariables() [28]
                0.00    4.71       1/1           SatProblem::SatProblem(unsigned long, bool) [42]
                0.01    3.32       1/1           SatProblem::parseCnfFile(char*) [47]
                0.00    0.03       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
                0.00    0.03       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [85]
                0.03    0.00       1/1           SatProblem::parseSliFile(char*) [88]
                0.01    0.00       1/1           SatProblem::~SatProblem() [91]
                0.00    0.00       4/406         Timer::time() [111]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [117]
                0.00    0.00       1/4           Timer::Timer() [127]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [161]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [155]
                0.00    0.00       1/1           printlParameters(learnparams*) [154]
                0.00    0.00       1/1           SliceSampling::printUnitTime() [162]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [164]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [173]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [165]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [175]
                0.00    0.00       1/4           Timer::~Timer() [128]
-----------------------------------------------
                0.01 35594.99       1/1           main [1]
[2]     99.0    0.01 35594.99       1         SampleSAT::learn(int*, char*, int) [2]
                4.08 35590.90       1/1           SampleSAT::cdlearn(int) [3]
                0.01    0.00       1/1           SampleSAT::readdata(char*, int) [92]
                0.00    0.00    2633/553459233     SatProblem::getTheta(int) [71]
                0.00    0.00       2/406         Timer::time() [111]
                0.00    0.00       1/1           SampleSAT::lallocate(int) [174]
                0.00    0.00       1/9           Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                4.08 35590.90       1/1           SampleSAT::learn(int*, char*, int) [2]
[3]     99.0    4.08 35590.90       1         SampleSAT::cdlearn(int) [3]
                0.43 35589.88   10000/10000       SampleSAT::solve(SatProblem*, int*) [4]
                0.59    0.00 553456600/553459233     SatProblem::getTheta(int) [71]
                0.00    0.00   10000/50880608     SatProblem::getGrand() [61]
                0.00    0.00   10000/10000       double const& std::max<double>(double const&, double const&) [110]
                0.00    0.00     400/406         Timer::time() [111]
                0.00    0.00     100/100         SatProblem::updateTheta(double*) [112]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                0.43 35589.88   10000/10000       SampleSAT::cdlearn(int) [3]
[4]     99.0    0.43 35589.88   10000         SampleSAT::solve(SatProblem*, int*) [4]
                0.70 33538.84 10216346/10216346     SampleSAT::walk() [5]
                6.76 1136.96   10000/10000       SatProblem::initSatCheck(int*) [17]
              108.69  790.74   10000/10000       SatProblem::initParams() [18]
                5.68    0.00   10000/10000       SatProblem::cpClVector() [37]
                0.26    1.24   10000/10000       SampleSAT::init_model() [63]
-----------------------------------------------
                0.70 33538.84 10216346/10216346     SampleSAT::solve(SatProblem*, int*) [4]
[5]     93.3    0.70 33538.84 10216346         SampleSAT::walk() [5]
              202.08 25789.10 2552866/2552866     SampleSAT::greedyWalk() [6]
             1166.19 4082.34 2554165/2554165     SampleSAT::randomWalk() [9]
                0.23 2298.24 5109315/5109315     SampleSAT::simAnnealing() [13]
                0.03    0.47 15323377/50880608     SatProblem::getGrand() [61]
                0.16    0.00 20042585/42107327     SatProblem::getNumSat() [75]
-----------------------------------------------
              202.08 25789.10 2552866/2552866     SampleSAT::walk() [5]
[6]     72.3  202.08 25789.10 2552866         SampleSAT::greedyWalk() [6]
             13759.46 10779.38 2426728882/2431838197     SatProblem::getNsc2(int*, int) [7]
               13.08 1201.97 2552866/9826239     SatProblem::afterFlip(int*, int) [10]
               35.09    0.00 2426728882/2465578691     SatProblem::getVar(int) [33]
                0.11    0.00 14401262/42107327     SatProblem::getNumSat() [75]
                0.01    0.00 2552866/9826239     SatProblem::addNumSat(int) [87]
-----------------------------------------------
               28.97   22.70 5109315/2431838197     SampleSAT::simAnnealing() [13]
             13759.46 10779.38 2426728882/2431838197     SampleSAT::greedyWalk() [6]
[7]     68.4 13788.42 10802.08 2431838197         SatProblem::getNsc2(int*, int) [7]
             6055.78    0.00 6353747403/11752316369     SatProblem::isSatCnj(int*, int) [8]
             2426.30    0.00 12707494806/17919238265     std::_List_iterator<int>::operator++(int) [11]
              797.17    0.00 14982331198/22731455804     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
              681.77    0.00 5254978410/10496591007     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [14]
              400.42   78.03 5254978410/12882887747     std::list<int, std::allocator<int> >::end() [16]
              144.97   53.70 9727352788/9757221926     std::list<int, std::allocator<int> >::begin() [25]
              163.92    0.00 12707494806/21118832738     std::_List_iterator<int>::operator*() const [23]
-----------------------------------------------
              958.89    0.00 1006074493/11752316369     SatProblem::getNsc1(int*, int) [12]
             1136.96    0.00 1192900000/11752316369     SatProblem::initSatCheck(int*) [17]
             3049.55    0.00 3199594473/11752316369     SatProblem::afterFlip(int*, int) [10]
             6055.78    0.00 6353747403/11752316369     SatProblem::getNsc2(int*, int) [7]
[8]     31.2 11201.18    0.00 11752316369         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
             1166.19 4082.34 2554165/2554165     SampleSAT::walk() [5]
[9]     14.6 1166.19 4082.34 2554165         SampleSAT::randomWalk() [9]
               37.66 3139.58 2554165/2554165     SatProblem::getNsc1(int*, int) [12]
              338.21    0.00 4038632130/4038632130     SatProblem::getFixedClausei(int) [20]
              284.27    0.00 8087480920/8087480920     SatProblem::getClVecSize() [21]
              281.36    0.00 4107415153/4107415153     SatProblem::getClVec(int) [22]
                0.86    0.00 22483483/22483483     SatProblem::getCnjSize(int) [68]
                0.15    0.12 14820988/14820988     SatProblem::getCnj(int, int) [76]
                0.11    0.00 7410494/2465578691     SatProblem::getVar(int) [33]
                0.02    0.00 2554165/42107327     SatProblem::getNumSat() [75]
                0.01    0.00 2554165/9826239     SatProblem::addNumSat(int) [87]
-----------------------------------------------
               13.08 1201.97 2552866/9826239     SampleSAT::greedyWalk() [6]
               13.09 1202.58 2554165/9826239     SatProblem::getNsc1(int*, int) [12]
               24.18 2221.95 4719208/9826239     SampleSAT::simAnnealing() [13]
[10]    13.0   50.34 4626.51 9826239         SatProblem::afterFlip(int*, int) [10]
             3049.55    0.00 3199594473/11752316369     SatProblem::isSatCnj(int*, int) [8]
              610.91    0.00 3199594473/17919238265     std::_List_iterator<int>::operator++(int) [11]
              417.66    0.00 3219246951/10496591007     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [14]
              245.30   47.80 3219246951/12882887747     std::list<int, std::allocator<int> >::end() [16]
              172.33    0.00 3238899429/22731455804     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
               82.55    0.00 6399188946/21118832738     std::_List_iterator<int>::operator*() const [23]
                0.29    0.11 19652478/9757221926     std::list<int, std::allocator<int> >::begin() [25]
-----------------------------------------------
              384.19    0.00 2012148986/17919238265     SatProblem::getNsc1(int*, int) [12]
              610.91    0.00 3199594473/17919238265     SatProblem::afterFlip(int*, int) [10]
             2426.30    0.00 12707494806/17919238265     SatProblem::getNsc2(int*, int) [7]
[11]     9.5 3421.40    0.00 17919238265         std::_List_iterator<int>::operator++(int) [11]
-----------------------------------------------
               37.66 3139.58 2554165/2554165     SampleSAT::randomWalk() [9]
[12]     8.8   37.66 3139.58 2554165         SatProblem::getNsc1(int*, int) [12]
               13.09 1202.58 2554165/9826239     SatProblem::afterFlip(int*, int) [10]
              958.89    0.00 1006074493/11752316369     SatProblem::isSatCnj(int*, int) [8]
              384.19    0.00 2012148986/17919238265     std::_List_iterator<int>::operator++(int) [11]
              262.38    0.00 2022365646/10496591007     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [14]
              154.10   30.03 2022365646/12882887747     std::list<int, std::allocator<int> >::end() [16]
              108.15    0.00 2032582306/22731455804     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
               25.96    0.00 2012148986/21118832738     std::_List_iterator<int>::operator*() const [23]
                0.15    0.06 10216660/9757221926     std::list<int, std::allocator<int> >::begin() [25]
-----------------------------------------------
                0.23 2298.24 5109315/5109315     SampleSAT::walk() [5]
[13]     6.4    0.23 2298.24 5109315         SampleSAT::simAnnealing() [13]
               24.18 2221.95 4719208/9826239     SatProblem::afterFlip(int*, int) [10]
               28.97   22.70 5109315/2431838197     SatProblem::getNsc2(int*, int) [7]
                0.02    0.29 9217231/50880608     SatProblem::getGrand() [61]
                0.07    0.00 5109315/2465578691     SatProblem::getVar(int) [33]
                0.04    0.00 5109315/42107327     SatProblem::getNumSat() [75]
                0.01    0.00 4719208/9826239     SatProblem::addNumSat(int) [87]
                0.01    0.00 5109315/5109315     SampleSAT::getTemp() [90]
-----------------------------------------------
              262.38    0.00 2022365646/10496591007     SatProblem::getNsc1(int*, int) [12]
              417.66    0.00 3219246951/10496591007     SatProblem::afterFlip(int*, int) [10]
              681.77    0.00 5254978410/10496591007     SatProblem::getNsc2(int*, int) [7]
[14]     3.8 1361.81    0.00 10496591007         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [14]
-----------------------------------------------
                0.03    0.00  496740/22731455804     SatProblem::parseCnfFile(char*) [47]
              108.15    0.00 2032582306/22731455804     SatProblem::getNsc1(int*, int) [12]
              131.80    0.00 2477146131/22731455804     SatProblem::initParams() [18]
              172.33    0.00 3238899429/22731455804     SatProblem::afterFlip(int*, int) [10]
              797.17    0.00 14982331198/22731455804     SatProblem::getNsc2(int*, int) [7]
[15]     3.4 1209.48    0.00 22731455804         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
-----------------------------------------------
              154.10   30.03 2022365646/12882887747     SatProblem::getNsc1(int*, int) [12]
              181.83   35.44 2386296740/12882887747     std::list<int, std::allocator<int> >::push_back(int const&) [19]
              245.30   47.80 3219246951/12882887747     SatProblem::afterFlip(int*, int) [10]
              400.42   78.03 5254978410/12882887747     SatProblem::getNsc2(int*, int) [7]
[16]     3.3  981.66  191.30 12882887747         std::list<int, std::allocator<int> >::end() [16]
              191.30    0.00 4292953155/5460240489     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [24]
-----------------------------------------------
                6.76 1136.96   10000/10000       SampleSAT::solve(SatProblem*, int*) [4]
[17]     3.2    6.76 1136.96   10000         SatProblem::initSatCheck(int*) [17]
             1136.96    0.00 1192900000/11752316369     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
              108.69  790.74   10000/10000       SampleSAT::solve(SatProblem*, int*) [4]
[18]     2.5  108.69  790.74   10000         SatProblem::initParams() [18]
              250.48  255.26 2385800000/2386296740     std::list<int, std::allocator<int> >::push_back(int const&) [19]
                0.07  152.80 38686131/38686131     std::list<int, std::allocator<int> >::clear() [26]
              131.80    0.00 2477146131/22731455804     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
                0.33    0.00 52660000/52660000     std::list<int, std::allocator<int> >::empty() const [74]
-----------------------------------------------
                0.05    0.05  496740/2386296740     SatProblem::parseCnfFile(char*) [47]
              250.48  255.26 2385800000/2386296740     SatProblem::initParams() [18]
[19]     1.4  250.53  255.31 2386296740         std::list<int, std::allocator<int> >::push_back(int const&) [19]
              181.83   35.44 2386296740/12882887747     std::list<int, std::allocator<int> >::end() [16]
                5.83   32.21 2386296740/2386296740     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [32]
-----------------------------------------------
              338.21    0.00 4038632130/4038632130     SampleSAT::randomWalk() [9]
[20]     0.9  338.21    0.00 4038632130         SatProblem::getFixedClausei(int) [20]
-----------------------------------------------
              284.27    0.00 8087480920/8087480920     SampleSAT::randomWalk() [9]
[21]     0.8  284.27    0.00 8087480920         SatProblem::getClVecSize() [21]
-----------------------------------------------
              281.36    0.00 4107415153/4107415153     SampleSAT::randomWalk() [9]
[22]     0.8  281.36    0.00 4107415153         SatProblem::getClVec(int) [22]
-----------------------------------------------
               25.96    0.00 2012148986/21118832738     SatProblem::getNsc1(int*, int) [12]
               82.55    0.00 6399188946/21118832738     SatProblem::afterFlip(int*, int) [10]
              163.92    0.00 12707494806/21118832738     SatProblem::getNsc2(int*, int) [7]
[23]     0.8  272.43    0.00 21118832738         std::_List_iterator<int>::operator*() const [23]
-----------------------------------------------
               52.02    0.00 1167287334/5460240489     std::list<int, std::allocator<int> >::begin() [25]
              191.30    0.00 4292953155/5460240489     std::list<int, std::allocator<int> >::end() [16]
[24]     0.7  243.32    0.00 5460240489         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [24]
-----------------------------------------------
                0.15    0.06 10216660/9757221926     SatProblem::getNsc1(int*, int) [12]
                0.29    0.11 19652478/9757221926     SatProblem::afterFlip(int*, int) [10]
              144.97   53.70 9727352788/9757221926     SatProblem::getNsc2(int*, int) [7]
[25]     0.6  145.41   53.87 9757221926         std::list<int, std::allocator<int> >::begin() [25]
               52.02    0.00 1167287334/5460240489     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [24]
                0.06    1.79 38686131/38686135     std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
-----------------------------------------------
                0.07  152.80 38686131/38686131     SatProblem::initParams() [18]
[26]     0.4    0.07  152.80 38686131         std::list<int, std::allocator<int> >::clear() [26]
              139.03   13.77 38686131/38696667     std::_List_base<int, std::allocator<int> >::_M_clear() [27]
-----------------------------------------------
                0.04    0.00   10536/38696667     std::_List_base<int, std::allocator<int> >::~_List_base() [40]
              139.03   13.77 38686131/38696667     std::list<int, std::allocator<int> >::clear() [26]
[27]     0.4  139.07   13.77 38696667         std::_List_base<int, std::allocator<int> >::_M_clear() [27]
                4.34    3.18 2386296740/4772614548     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
                2.54    2.09 4772593480/4772593480     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [45]
                1.61    0.00 2386296740/4772604012     std::allocator<int>::~allocator() [49]
-----------------------------------------------
                0.03    0.00       1/2637        SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
                0.03    0.00       1/2637        SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [85]
               88.41    0.00    2635/2637        main [1]
[28]     0.2   88.47    0.00    2637         SatProblem::getNumVariables() [28]
-----------------------------------------------
                                                 <spontaneous>
[29]     0.2   85.86    0.00                 SatProblem::isSat(int*) [29]
-----------------------------------------------
                                                 <spontaneous>
[30]     0.2   84.68    0.00                 std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [30]
-----------------------------------------------
                                                 <spontaneous>
[31]     0.2   60.89    0.00                 std::vector<int, std::allocator<int> >::vector() [31]
-----------------------------------------------
                5.83   32.21 2386296740/2386296740     std::list<int, std::allocator<int> >::push_back(int const&) [19]
[32]     0.1    5.83   32.21 2386296740         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [32]
               12.97   19.24 2386296740/2386296740     std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
-----------------------------------------------
                0.07    0.00 5109315/2465578691     SampleSAT::simAnnealing() [13]
                0.11    0.00 7410494/2465578691     SampleSAT::randomWalk() [9]
                0.38    0.00 26330000/2465578691     SampleSAT::init_model() [63]
               35.09    0.00 2426728882/2465578691     SampleSAT::greedyWalk() [6]
[33]     0.1   35.66    0.00 2465578691         SatProblem::getVar(int) [33]
-----------------------------------------------
               12.97   19.24 2386296740/2386296740     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [32]
[34]     0.1   12.97   19.24 2386296740         std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
                4.34    3.18 2386296740/4772614548     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
                1.49    5.29 2386296740/2386296740     std::_List_base<int, std::allocator<int> >::_M_get_node() [36]
                2.27    0.84 2386296740/2386296740     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [52]
                1.61    0.00 2386296740/4772604012     std::allocator<int>::~allocator() [49]
                0.00    0.19       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
-----------------------------------------------
                0.00    0.00   10532/4772614548     std::allocator<std::_List_node<int> >::~allocator() [96]
                0.00    0.00   10536/4772614548     std::allocator<std::_List_node<int> >::~allocator() [95]
                4.34    3.18 2386296740/4772614548     std::_List_base<int, std::allocator<int> >::_M_clear() [27]
                4.34    3.18 2386296740/4772614548     std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
[35]     0.0    8.69    6.37 4772614548         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
                3.97    0.00 477626184/477636716     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [46]
                2.40    0.00 477626184/477636716     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
-----------------------------------------------
                1.49    5.29 2386296740/2386296740     std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
[36]     0.0    1.49    5.29 2386296740         std::_List_base<int, std::allocator<int> >::_M_get_node() [36]
                4.36    0.94 2386296740/2386296740     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [38]
-----------------------------------------------
                5.68    0.00   10000/10000       SampleSAT::solve(SatProblem*, int*) [4]
[37]     0.0    5.68    0.00   10000         SatProblem::cpClVector() [37]
-----------------------------------------------
                4.36    0.94 2386296740/2386296740     std::_List_base<int, std::allocator<int> >::_M_get_node() [36]
[38]     0.0    4.36    0.94 2386296740         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [38]
                0.94    0.00 2386296740/2386296740     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [67]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.0    4.79    0.00                 __gnu_cxx::new_allocator<int>::new_allocator() [39]
-----------------------------------------------
                0.00    4.71   10536/10536       std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [41]
[40]     0.0    0.00    4.71   10536         std::_List_base<int, std::allocator<int> >::~_List_base() [40]
                0.00    4.67   10536/10536       std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [43]
                0.04    0.00   10536/38696667     std::_List_base<int, std::allocator<int> >::_M_clear() [27]
                0.00    0.00   10536/10536       std::allocator<std::_List_node<int> >::~allocator() [95]
-----------------------------------------------
                0.00    4.71       4/4           SatProblem::SatProblem(unsigned long, bool) [42]
[41]     0.0    0.00    4.71       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [41]
                0.00    4.71   10536/10536       std::_List_base<int, std::allocator<int> >::~_List_base() [40]
-----------------------------------------------
                0.00    4.71       1/1           main [1]
[42]     0.0    0.00    4.71       1         SatProblem::SatProblem(unsigned long, bool) [42]
                0.00    4.71       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [41]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [149]
                0.00    0.00       1/1           Random::Random() [167]
                0.00    0.00       1/4           Timer::Timer() [127]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [166]
-----------------------------------------------
                0.00    4.67   10536/10536       std::_List_base<int, std::allocator<int> >::~_List_base() [40]
[43]     0.0    0.00    4.67   10536         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [43]
                2.47    2.20       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [44]
-----------------------------------------------
                2.47    2.20       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [43]
[44]     0.0    2.47    2.20       4         std::_List_base<int, std::allocator<int> >::_List_base() [44]
                0.71    1.48       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [54]
                0.00    0.00       4/38686135     std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
-----------------------------------------------
                2.54    2.09 4772593480/4772593480     std::_List_base<int, std::allocator<int> >::_M_clear() [27]
[45]     0.0    2.54    2.09 4772593480         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [45]
                2.09    0.00 2386296740/2386296740     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [56]
-----------------------------------------------
                0.00    0.00   10532/477636716     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
                3.97    0.00 477626184/477636716     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
[46]     0.0    3.97    0.00 477636716         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [46]
-----------------------------------------------
                0.01    3.32       1/1           main [1]
[47]     0.0    0.01    3.32       1         SatProblem::parseCnfFile(char*) [47]
                0.00    3.19       1/1           SatProblem::allocate() [50]
                0.05    0.05  496740/2386296740     std::list<int, std::allocator<int> >::push_back(int const&) [19]
                0.03    0.00  496740/22731455804     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [15]
-----------------------------------------------
                                                 <spontaneous>
[48]     0.0    1.33    1.99                 std::allocator<int>::~allocator() [48]
                1.99    0.00 477636716/477636716     __gnu_cxx::new_allocator<int>::~new_allocator() [57]
-----------------------------------------------
                0.00    0.00   10532/4772604012     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
                1.61    0.00 2386296740/4772604012     std::_List_base<int, std::allocator<int> >::_M_clear() [27]
                1.61    0.00 2386296740/4772604012     std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
[49]     0.0    3.23    0.00 4772604012         std::allocator<int>::~allocator() [49]
-----------------------------------------------
                0.00    3.19       1/1           SatProblem::parseCnfFile(char*) [47]
[50]     0.0    0.00    3.19       1         SatProblem::allocate() [50]
                3.19    0.00       4/4           std::list<int, std::allocator<int> >::list() [51]
                0.00    0.00       4/10536       std::list<int, std::allocator<int> >::~list() [77]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [144]
-----------------------------------------------
                3.19    0.00       4/4           SatProblem::allocate() [50]
[51]     0.0    3.19    0.00       4         std::list<int, std::allocator<int> >::list() [51]
-----------------------------------------------
                2.27    0.84 2386296740/2386296740     std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
[52]     0.0    2.27    0.84 2386296740         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [52]
                0.84    0.00 2386296740/2386307272     operator new(unsigned int, void*) [69]
-----------------------------------------------
                0.00    0.00   10532/477636716     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
                2.40    0.00 477626184/477636716     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
[53]     0.0    2.40    0.00 477636716         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
-----------------------------------------------
                0.71    1.48       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [44]
[54]     0.0    0.71    1.48       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [54]
                1.48    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [64]
-----------------------------------------------
                                                 <spontaneous>
[55]     0.0    2.10    0.00                 __gnu_cxx::new_allocator<int>::destroy(int*) [55]
-----------------------------------------------
                2.09    0.00 2386296740/2386296740     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [45]
[56]     0.0    2.09    0.00 2386296740         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [56]
-----------------------------------------------
                1.99    0.00 477636716/477636716     std::allocator<int>::~allocator() [48]
[57]     0.0    1.99    0.00 477636716         __gnu_cxx::new_allocator<int>::~new_allocator() [57]
-----------------------------------------------
[58]     0.0    0.06    1.79 38686135+42144   <cycle 1 as a whole> [58]
                0.00    1.79   10532             std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
                0.06    0.00 38696667             std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
                0.00    0.00   10532             void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) <cycle 1> [97]
                0.00    0.00   10532             std::list<int, std::allocator<int> >::begin() const <cycle 1> [107]
                0.00    0.00       4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
                0.00    0.00       4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
                0.00    0.00       4             void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [146]
                0.00    0.00       4             void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [139]
-----------------------------------------------
                               10532             void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) <cycle 1> [97]
[59]     0.0    0.00    1.79   10532         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
                1.42    0.37   10532/10532       std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [60]
                0.00    0.00   10532/477636716     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [46]
                0.00    0.00   10532/477636716     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
                0.00    0.00   10532/4772604012     std::allocator<int>::~allocator() [49]
                0.00    0.00   10532/10532       std::list<int, std::allocator<int> >::end() const [106]
                0.00    0.00   10532/10532       void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
                               10532             std::list<int, std::allocator<int> >::begin() const <cycle 1> [107]
-----------------------------------------------
                1.42    0.37   10532/10532       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
[60]     0.0    1.42    0.37   10532         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [60]
                0.37    0.00 477647248/477647248     std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [73]
                0.00    0.00   10532/10532       std::allocator<std::_List_node<int> >::~allocator() [96]
                0.00    0.00   10532/10532       std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [108]
-----------------------------------------------
                0.00    0.00   10000/50880608     SampleSAT::cdlearn(int) [3]
                0.02    0.29 9217231/50880608     SampleSAT::simAnnealing() [13]
                0.03    0.47 15323377/50880608     SampleSAT::walk() [5]
                0.05    0.82 26330000/50880608     SampleSAT::init_model() [63]
[61]     0.0    0.09    1.57 50880608         SatProblem::getGrand() [61]
                1.57    0.00 50880608/50880608     Random::genrand() [62]
-----------------------------------------------
                1.57    0.00 50880608/50880608     SatProblem::getGrand() [61]
[62]     0.0    1.57    0.00 50880608         Random::genrand() [62]
-----------------------------------------------
                0.26    1.24   10000/10000       SampleSAT::solve(SatProblem*, int*) [4]
[63]     0.0    0.26    1.24   10000         SampleSAT::init_model() [63]
                0.05    0.82 26330000/50880608     SatProblem::getGrand() [61]
                0.38    0.00 26330000/2465578691     SatProblem::getVar(int) [33]
-----------------------------------------------
                1.48    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [54]
[64]     0.0    1.48    0.00       4         std::allocator<std::_List_node<int> >::allocator() [64]
                0.00    0.00       4/21068       std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [102]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.0    1.45    0.00                 __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [65]
-----------------------------------------------
                                                 <spontaneous>
[66]     0.0    0.99    0.00                 std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [66]
-----------------------------------------------
                0.94    0.00 2386296740/2386296740     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [38]
[67]     0.0    0.94    0.00 2386296740         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [67]
-----------------------------------------------
                0.86    0.00 22483483/22483483     SampleSAT::randomWalk() [9]
[68]     0.0    0.86    0.00 22483483         SatProblem::getCnjSize(int) [68]
-----------------------------------------------
                0.00    0.00   10532/2386307272     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) <cycle 1> [97]
                0.84    0.00 2386296740/2386307272     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [52]
[69]     0.0    0.84    0.00 2386307272         operator new(unsigned int, void*) [69]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.0    0.81    0.00                 SatProblem::getCnfij(int, int) [70]
-----------------------------------------------
                0.00    0.00    2633/553459233     SampleSAT::learn(int*, char*, int) [2]
                0.59    0.00 553456600/553459233     SampleSAT::cdlearn(int) [3]
[71]     0.0    0.59    0.00 553459233         SatProblem::getTheta(int) [71]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.0    0.56    0.00                 __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [72]
-----------------------------------------------
                0.37    0.00 477647248/477647248     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [60]
[73]     0.0    0.37    0.00 477647248         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [73]
-----------------------------------------------
                0.33    0.00 52660000/52660000     SatProblem::initParams() [18]
[74]     0.0    0.33    0.00 52660000         std::list<int, std::allocator<int> >::empty() const [74]
-----------------------------------------------
                0.02    0.00 2554165/42107327     SampleSAT::randomWalk() [9]
                0.04    0.00 5109315/42107327     SampleSAT::simAnnealing() [13]
                0.11    0.00 14401262/42107327     SampleSAT::greedyWalk() [6]
                0.16    0.00 20042585/42107327     SampleSAT::walk() [5]
[75]     0.0    0.33    0.00 42107327         SatProblem::getNumSat() [75]
-----------------------------------------------
                0.15    0.12 14820988/14820988     SampleSAT::randomWalk() [9]
[76]     0.0    0.15    0.12 14820988         SatProblem::getCnj(int, int) [76]
                0.12    0.00 14820988/14820988     SatProblem::getCnf(int) [80]
-----------------------------------------------
                0.00    0.00       4/10536       SatProblem::allocate() [50]
                0.19    0.00   10532/10536       void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
[77]     0.0    0.20    0.00   10536         std::list<int, std::allocator<int> >::~list() [77]
-----------------------------------------------
                0.00    0.00       4/10536       __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [94]
                0.00    0.19   10532/10536       void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
[78]     0.0    0.00    0.19   10536         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
                0.19    0.00   10532/10536       std::list<int, std::allocator<int> >::~list() [77]
-----------------------------------------------
                0.00    0.19       8/8           std::list<int, std::allocator<int> >::_M_create_node(int const&) [34]
[79]     0.0    0.00    0.19       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
                0.00    0.19   10532/10536       void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
-----------------------------------------------
                0.12    0.00 14820988/14820988     SatProblem::getCnj(int, int) [76]
[80]     0.0    0.12    0.00 14820988         SatProblem::getCnf(int) [80]
-----------------------------------------------
                                                 <spontaneous>
[81]     0.0    0.12    0.00                 operator delete(void*, void*) [81]
-----------------------------------------------
                               10532             std::list<int, std::allocator<int> >::begin() const <cycle 1> [107]
                0.00    0.00       4/38686135     std::_List_base<int, std::allocator<int> >::_List_base() [44]
                0.06    1.79 38686131/38686135     std::list<int, std::allocator<int> >::begin() [25]
[82]     0.0    0.06    0.00 38696667         std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
                                   4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
-----------------------------------------------
                0.06    0.00       8/8           std::__miter_base<std::list<int, std::allocator<int> >*, false>::__b(std::list<int, std::allocator<int> >*) [84]
[83]     0.0    0.06    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [123]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.0    0.00    0.06                 std::__miter_base<std::list<int, std::allocator<int> >*, false>::__b(std::list<int, std::allocator<int> >*) [84]
                0.06    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
-----------------------------------------------
                0.00    0.03       1/1           main [1]
[85]     0.0    0.00    0.03       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [85]
                0.03    0.00       1/2637        SatProblem::getNumVariables() [28]
                0.00    0.00       1/4           Timer::Timer() [127]
                0.00    0.00       1/1           SliceSampling::init() [163]
-----------------------------------------------
                0.00    0.03       1/1           main [1]
[86]     0.0    0.00    0.03       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
                0.03    0.00       1/2637        SatProblem::getNumVariables() [28]
                0.00    0.00       1/4           Timer::Timer() [127]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [168]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [169]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [171]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [172]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [170]
                0.00    0.00       1/1           SatProblem::getNumClauses() [160]
-----------------------------------------------
                0.01    0.00 2552866/9826239     SampleSAT::greedyWalk() [6]
                0.01    0.00 2554165/9826239     SampleSAT::randomWalk() [9]
                0.01    0.00 4719208/9826239     SampleSAT::simAnnealing() [13]
[87]     0.0    0.03    0.00 9826239         SatProblem::addNumSat(int) [87]
-----------------------------------------------
                0.03    0.00       1/1           main [1]
[88]     0.0    0.03    0.00       1         SatProblem::parseSliFile(char*) [88]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.0    0.01    0.00                 SatProblem::getRealProb(int) [89]
-----------------------------------------------
                0.01    0.00 5109315/5109315     SampleSAT::simAnnealing() [13]
[90]     0.0    0.01    0.00 5109315         SampleSAT::getTemp() [90]
-----------------------------------------------
                0.01    0.00       1/1           main [1]
[91]     0.0    0.01    0.00       1         SatProblem::~SatProblem() [91]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
                0.00    0.00       1/4           Timer::~Timer() [128]
-----------------------------------------------
                0.01    0.00       1/1           SampleSAT::learn(int*, char*, int) [2]
[92]     0.0    0.01    0.00       1         SampleSAT::readdata(char*, int) [92]
-----------------------------------------------
                                                 <spontaneous>
[93]     0.0    0.01    0.00                 SatProblem::getClause(int) [93]
-----------------------------------------------
                                                 <spontaneous>
[94]     0.0    0.00    0.00                 __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [94]
                0.00    0.00       4/10536       void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
-----------------------------------------------
                0.00    0.00   10536/10536       std::_List_base<int, std::allocator<int> >::~_List_base() [40]
[95]     0.0    0.00    0.00   10536         std::allocator<std::_List_node<int> >::~allocator() [95]
                0.00    0.00   10536/4772614548     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
-----------------------------------------------
                0.00    0.00   10532/10532       std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [60]
[96]     0.0    0.00    0.00   10532         std::allocator<std::_List_node<int> >::~allocator() [96]
                0.00    0.00   10532/4772614548     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
-----------------------------------------------
                               10532             void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [139]
[97]     0.0    0.00    0.00   10532         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) <cycle 1> [97]
                0.00    0.00   10532/2386307272     operator new(unsigned int, void*) [69]
                               10532             std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
-----------------------------------------------
                0.00    0.00  263300/263300      SatProblem::updateTheta(double*) [112]
[101]    0.0    0.00    0.00  263300         std::abs(double) [101]
-----------------------------------------------
                0.00    0.00       4/21068       std::allocator<std::_List_node<int> >::allocator() [64]
                0.00    0.00   21064/21068       std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [108]
[102]    0.0    0.00    0.00   21068         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [102]
                0.00    0.00   10532/10540       std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [104]
-----------------------------------------------
                0.00    0.00   10532/21064       std::list<int, std::allocator<int> >::begin() const <cycle 1> [107]
                0.00    0.00   10532/21064       std::list<int, std::allocator<int> >::end() const [106]
[103]    0.0    0.00    0.00   21064         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [103]
-----------------------------------------------
                0.00    0.00       8/10540       std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00   10532/10540       std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [102]
[104]    0.0    0.00    0.00   10540         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [104]
-----------------------------------------------
                0.00    0.00   10532/10532       void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
[105]    0.0    0.00    0.00   10532         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [105]
-----------------------------------------------
                0.00    0.00   10532/10532       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
[106]    0.0    0.00    0.00   10532         std::list<int, std::allocator<int> >::end() const [106]
                0.00    0.00   10532/21064       std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [103]
-----------------------------------------------
                               10532             std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
[107]    0.0    0.00    0.00   10532         std::list<int, std::allocator<int> >::begin() const <cycle 1> [107]
                0.00    0.00   10532/21064       std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [103]
                               10532             std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
-----------------------------------------------
                0.00    0.00   10532/10532       std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [60]
[108]    0.0    0.00    0.00   10532         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [108]
                0.00    0.00   21064/21068       std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [102]
-----------------------------------------------
                0.00    0.00   10532/10532       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) <cycle 1> [59]
[109]    0.0    0.00    0.00   10532         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
                0.00    0.00   10532/10532       std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [105]
-----------------------------------------------
                0.00    0.00   10000/10000       SampleSAT::cdlearn(int) [3]
[110]    0.0    0.00    0.00   10000         double const& std::max<double>(double const&, double const&) [110]
-----------------------------------------------
                0.00    0.00       2/406         SampleSAT::learn(int*, char*, int) [2]
                0.00    0.00       4/406         main [1]
                0.00    0.00     400/406         SampleSAT::cdlearn(int) [3]
[111]    0.0    0.00    0.00     406         Timer::time() [111]
-----------------------------------------------
                0.00    0.00     100/100         SampleSAT::cdlearn(int) [3]
[112]    0.0    0.00    0.00     100         SatProblem::updateTheta(double*) [112]
                0.00    0.00  263300/263300      std::abs(double) [101]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [144]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
[113]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [113]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[114]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [114]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [130]
[115]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [115]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [129]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [121]
[116]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [116]
-----------------------------------------------
                0.00    0.00       1/9           SampleSAT::learn(int*, char*, int) [2]
                0.00    0.00       2/9           main [1]
                0.00    0.00       2/9           SampleSAT::cdlearn(int) [3]
                0.00    0.00       4/9           SliceSampling::printUnitTime() [162]
[117]    0.0    0.00    0.00       9         Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                0.00    0.00       4/8           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [125]
[118]    0.0    0.00    0.00       8         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [141]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [142]
[119]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [119]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [121]
[120]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [120]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
[121]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [121]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [120]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [116]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [138]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[122]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [122]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
[123]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [123]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[124]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       8/10540       std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [104]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [126]
[125]    0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [125]
                0.00    0.00       4/8           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[126]    0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [126]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [125]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [42]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [85]
[127]    0.0    0.00    0.00       4         Timer::Timer() [127]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [91]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [175]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [165]
[128]    0.0    0.00    0.00       4         Timer::~Timer() [128]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [134]
[129]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [129]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [116]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[130]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [130]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [115]
-----------------------------------------------
                                   4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[131]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [113]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [121]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [148]
                                   4             void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [146]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [135]
[132]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [132]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [136]
[133]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
                0.00    0.00       4/8           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[134]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [134]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [129]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [137]
[135]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [135]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [132]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [138]
[136]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [136]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
[137]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [137]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [135]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
[138]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [138]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [122]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [136]
-----------------------------------------------
                                   4             void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [146]
[139]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [139]
                               10532             void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) <cycle 1> [97]
-----------------------------------------------
                                   4             std::_List_base<int, std::allocator<int> >::_M_init() <cycle 1> [82]
[140]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [114]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [115]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [142]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [130]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [134]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [147]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [126]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [122]
                                   4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [144]
[141]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [141]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [119]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[142]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [142]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [119]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [144]
[143]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [143]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [50]
[144]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [144]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [113]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [141]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [143]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [91]
[145]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [145]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [137]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [114]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [126]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [138]
-----------------------------------------------
                                   4             std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
[146]    0.0    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [146]
                                   4             void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [139]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) <cycle 1> [140]
[147]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [147]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const <cycle 1> [131]
[148]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [148]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [42]
[149]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [149]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[150]    0.0    0.00    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [150]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [157]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[151]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [151]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [159]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[152]    0.0    0.00    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [152]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [158]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[153]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [153]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [156]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[154]    0.0    0.00    0.00       1         printlParameters(learnparams*) [154]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[155]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [155]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [153]
[156]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [156]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [150]
[157]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [157]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [152]
[158]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [158]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [151]
[159]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [159]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[160]    0.0    0.00    0.00       1         SatProblem::getNumClauses() [160]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[161]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [161]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[162]    0.0    0.00    0.00       1         SliceSampling::printUnitTime() [162]
                0.00    0.00       4/9           Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [85]
[163]    0.0    0.00    0.00       1         SliceSampling::init() [163]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[164]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [164]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[165]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [165]
                0.00    0.00       1/4           Timer::~Timer() [128]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [42]
[166]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [166]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [42]
[167]    0.0    0.00    0.00       1         Random::Random() [167]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[168]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [168]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[169]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [169]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[170]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [170]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[171]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [171]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [86]
[172]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [172]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[173]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [173]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int) [2]
[174]    0.0    0.00    0.00       1         SampleSAT::lallocate(int) [174]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[175]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [175]
                0.00    0.00       1/4           Timer::~Timer() [128]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [150] global constructors keyed to _ZN10SatProblemC2Emb [169] SampleSAT::setNumSample(int) [82] std::_List_base<int, std::allocator<int> >::_M_init()
 [151] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [13] SampleSAT::simAnnealing() [27] std::_List_base<int, std::allocator<int> >::_M_clear()
 [152] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [170] SampleSAT::setTemperature(double) [60] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [153] global constructors keyed to cnffilename [171] SampleSAT::setWalkSatProb(double) [44] std::_List_base<int, std::allocator<int> >::_List_base()
 [154] printlParameters(learnparams*) [172] SampleSAT::setRandomWalkProb(double) [40] std::_List_base<int, std::allocator<int> >::~_List_base()
 [155] printssParameters(samplesatparams*) [5] SampleSAT::walk() [79] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [156] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int) [134] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
 [157] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [135] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
 [158] __static_initialization_and_destruction_0(int, int) [173] SampleSAT::calcAve(learnparams*) [136] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
 [159] __static_initialization_and_destruction_0(int, int) [3] SampleSAT::cdlearn(int) [122] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [37] SatProblem::cpClVector() [90] SampleSAT::getTemp() [114] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [68] SatProblem::getCnjSize(int) [92] SampleSAT::readdata(char*, int) [137] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [18] SatProblem::initParams() [174] SampleSAT::lallocate(int) [138] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [89] SatProblem::getRealProb(int) [86] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [30] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
 [112] SatProblem::updateTheta(double*) [175] SampleSAT::~SampleSAT() [24] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [21] SatProblem::getClVecSize() [56] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [149] std::_List_iterator<int>::_List_iterator()
  [17] SatProblem::initSatCheck(int*) [38] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [11] std::_List_iterator<int>::operator++(int)
  [47] SatProblem::parseCnfFile(char*) [72] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [103] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  [88] SatProblem::parseSliFile(char*) [65] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [123] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [160] SatProblem::getNumClauses() [118] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [139] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [161] SatProblem::parseProbFile(char*) [129] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [34] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [20] SatProblem::getFixedClausei(int) [55] __gnu_cxx::new_allocator<int>::destroy(int*) [109] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [28] SatProblem::getNumVariables() [52] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [16] std::list<int, std::allocator<int> >::end()
  [29] SatProblem::isSat(int*) [39] __gnu_cxx::new_allocator<int>::new_allocator() [25] std::list<int, std::allocator<int> >::begin()
  [80] SatProblem::getCnf(int) [57] __gnu_cxx::new_allocator<int>::~new_allocator() [26] std::list<int, std::allocator<int> >::clear()
  [76] SatProblem::getCnj(int, int) [119] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [32] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [33] SatProblem::getVar(int) [130] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [19] std::list<int, std::allocator<int> >::push_back(int const&)
  [12] SatProblem::getNsc1(int*, int) [67] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [59] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
   [7] SatProblem::getNsc2(int*, int) [116] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [51] std::list<int, std::allocator<int> >::list()
  [50] SatProblem::allocate() [115] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [77] std::list<int, std::allocator<int> >::~list()
  [22] SatProblem::getClVec(int) [35] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [140] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [70] SatProblem::getCnfij(int, int) [53] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [141] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [61] SatProblem::getGrand() [120] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [142] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [71] SatProblem::getTheta(int) [23] std::_List_iterator<int>::operator*() const [143] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
   [8] SatProblem::isSatCnj(int*, int) [14] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [144] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  [87] SatProblem::addNumSat(int) [105] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [41] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  [10] SatProblem::afterFlip(int*, int) [106] std::list<int, std::allocator<int> >::end() const [145] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [93] SatProblem::getClause(int) [107] std::list<int, std::allocator<int> >::begin() const [15] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  [75] SatProblem::getNumSat() [74] std::list<int, std::allocator<int> >::empty() const [66] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [42] SatProblem::SatProblem(unsigned long, bool) [131] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [31] std::vector<int, std::allocator<int> >::vector()
  [91] SatProblem::~SatProblem() [113] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [97] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [162] SliceSampling::printUnitTime() [121] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [83] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [163] SliceSampling::init()  [73] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [146] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [164] SliceSampling::calcFixed(learnparams*) [102] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [104] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [85] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [64] std::allocator<std::_List_node<int> >::allocator() [124] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [165] SliceSampling::~SliceSampling() [96] std::allocator<std::_List_node<int> >::~allocator() [147] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [111] Timer::time()          [95] std::allocator<std::_List_node<int> >::~allocator() [101] std::abs(double)
 [117] Timer::printTime(std::ostream&, double const&) [132] std::allocator<std::list<int, std::allocator<int> > >::allocator() [110] double const& std::max<double>(double const&, double const&)
 [127] Timer::Timer()        [133] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [128] Timer::~Timer()        [46] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [125] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [62] Random::genrand()      [49] std::allocator<int>::~allocator() [126] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [166] Random::sgenrand(unsigned long) [48] std::allocator<int>::~allocator() [78] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
 [167] Random::Random()      [108] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [81] operator delete(void*, void*)
   [6] SampleSAT::greedyWalk() [54] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [69] operator new(unsigned int, void*)
  [63] SampleSAT::init_model() [43] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [58] <cycle 1>
   [9] SampleSAT::randomWalk() [36] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [168] SampleSAT::setWalkMax(int) [45] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
