Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 23.08      0.03     0.03   190117     0.00     0.00  Random::genrand()
 23.08      0.06     0.03        1    30.00   130.00  SliceSampling::cdlearn(int)
 15.38      0.08     0.02   100000     0.00     0.00  SliceSampling::modelcheck(int)
  7.69      0.09     0.01  1443654     0.00     0.00  SatProblem::getTheta(int)
  7.69      0.10     0.01   650945     0.00     0.00  SatProblem::isSatCnj(int*, int)
  7.69      0.11     0.01   320036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  7.69      0.12     0.01    10000     0.00     0.00  SatProblem::initParams()
  7.69      0.13     0.01    10000     0.00     0.01  SliceSampling::sampleX()
  0.00      0.13     0.00  2097771     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  0.00      0.13     0.00  1897779     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  0.00      0.13     0.00  1584532     0.00     0.00  std::list<int, std::allocator<int> >::end()
  0.00      0.13     0.00  1264496     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  0.00      0.13     0.00  1131261     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.00      0.13     0.00   951249     0.00     0.00  std::_List_iterator<int>::operator++(int)
  0.00      0.13     0.00   653627     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.13     0.00   653627     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.13     0.00   640096     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.00      0.13     0.00   640096     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.00      0.13     0.00   640096     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.13     0.00   640072     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      0.13     0.00   320060     0.00     0.00  operator new(unsigned int, void*)
  0.00      0.13     0.00   320036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.00      0.13     0.00   320036     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.00      0.13     0.00   320036     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.00      0.13     0.00   320036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      0.13     0.00   320036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00      0.13     0.00   320036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.00      0.13     0.00   320036     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.00      0.13     0.00   320036     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.00      0.13     0.00   320036     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.00      0.13     0.00   313247     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.00      0.13     0.00   217796     0.00     0.00  SatProblem::getClVecSize()
  0.00      0.13     0.00   190117     0.00     0.00  SatProblem::getGrand()
  0.00      0.13     0.00   155397     0.00     0.00  SatProblem::getVar(int)
  0.00      0.13     0.00   120000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00      0.13     0.00   116867     0.00     0.00  SatProblem::getClVec(int)
  0.00      0.13     0.00   100600     0.00     0.00  SliceSampling::calckey(int)
  0.00      0.13     0.00    95249     0.00     0.00  SatProblem::getNumSat()
  0.00      0.13     0.00    93474     0.00     0.00  SatProblem::getFixedClausei(int)
  0.00      0.13     0.00    80020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.00      0.13     0.00    80020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      0.13     0.00    79992     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00      0.13     0.00    67468     0.00     0.00  Timer::time()
  0.00      0.13     0.00    54432     0.00     0.00  SatProblem::getCnjSize(int)
  0.00      0.13     0.00    52216     0.00     0.00  SatProblem::getNsc2(int*, int)
  0.00      0.13     0.00    30760     0.00     0.00  SampleSAT::walk()
  0.00      0.13     0.00    30002     0.00     0.00  SatProblem::addNumSat(int)
  0.00      0.13     0.00    30002     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.00      0.13     0.00    28992     0.00     0.00  SatProblem::getCnf(int)
  0.00      0.13     0.00    28992     0.00     0.00  SatProblem::getCnj(int, int)
  0.00      0.13     0.00    15365     0.00     0.00  SampleSAT::simAnnealing()
  0.00      0.13     0.00    15365     0.00     0.00  SampleSAT::getTemp()
  0.00      0.13     0.00    13531     0.00     0.00  SatProblem::setAtom(int, int)
  0.00      0.13     0.00    13531     0.00     0.00  SatProblem::rewriteWL(int, int)
  0.00      0.13     0.00    13531     0.00     0.00  SatProblem::setClause(int, int)
  0.00      0.13     0.00    13531     0.00     0.00  SliceSampling::unitProc(int, int)
  0.00      0.13     0.00    13531     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.13     0.00    13531     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.13     0.00    13531     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      0.13     0.00    13531     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.13     0.00    13531     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      0.13     0.00    13531     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.13     0.00    13531     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.13     0.00    13531     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.13     0.00    10000     0.00     0.00  SatProblem::cpClVector()
  0.00      0.13     0.00    10000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.00      0.13     0.00    10000     0.00     0.00  SatProblem::getNumFixedAtom()
  0.00      0.13     0.00    10000     0.00     0.00  SatProblem::getNumFixedClause()
  0.00      0.13     0.00    10000     0.00     0.00  SliceSampling::sampleU()
  0.00      0.13     0.00    10000     0.00     0.00  SampleSAT::init_model()
  0.00      0.13     0.00    10000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00      0.13     0.00     7712     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.00      0.13     0.00     7712     0.00     0.00  SampleSAT::randomWalk()
  0.00      0.13     0.00     7683     0.00     0.00  SampleSAT::greedyWalk()
  0.00      0.13     0.00      100     0.00     0.00  SatProblem::updateTheta(double*)
  0.00      0.13     0.00      100     0.00     0.00  SliceSampling::calclik(int, double*, int*, int)
  0.00      0.13     0.00       52     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      0.13     0.00       48     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00      0.13     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      0.13     0.00       28     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.13     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      0.13     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      0.13     0.00       28     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00      0.13     0.00       24     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00      0.13     0.00       24     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00      0.13     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00      0.13     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00      0.13     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00      0.13     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00      0.13     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00      0.13     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.13     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00      0.13     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00      0.13     0.00       24     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00      0.13     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00       24     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00       24     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00      0.13     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00      0.13     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00      0.13     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00      0.13     0.00       10     0.00     0.00  SatProblem::getNumVariables()
  0.00      0.13     0.00        9     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00      0.13     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00      0.13     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00      0.13     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00      0.13     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.13     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.13     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.13     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.13     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.13     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.13     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.13     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.13     0.00        4     0.00     0.00  Timer::Timer()
  0.00      0.13     0.00        4     0.00     0.00  Timer::~Timer()
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00      0.13     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00      0.13     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      0.13     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00      0.13     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00      0.13     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      0.13     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00      0.13     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00      0.13     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00      0.13     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00      0.13     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.13     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.13     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      0.13     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00      0.13     0.00        1     0.00     0.00  global constructors keyed to SatProblem::SatProblem(unsigned long, bool)
  0.00      0.13     0.00        1     0.00     0.00  global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00      0.13     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::getNumClauses()
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00      0.13     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::printUnitTime()
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::init()
  0.00      0.13     0.00        1     0.00   130.00  SliceSampling::learn(int*, char*, int)
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::readdata(char*)
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::lallocate(int)
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00      0.13     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00      0.13     0.00        1     0.00     0.00  Random::Random()
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      0.13     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 7.69% of 0.13 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.13                 main [1]
                0.00    0.13       1/1           SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [27]
                0.00    0.00       8/10          SatProblem::getNumVariables() [112]
                0.00    0.00       4/67468       Timer::time() [60]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [113]
                0.00    0.00       1/4           Timer::Timer() [125]
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [170]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [168]
                0.00    0.00       1/1           SatProblem::parseSliFile(char*) [166]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [161]
                0.00    0.00       1/1           printlParameters(learnparams*) [160]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [177]
                0.00    0.00       1/1           SliceSampling::printUnitTime() [172]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [175]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [186]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [178]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [188]
                0.00    0.00       1/1           SatProblem::~SatProblem() [171]
                0.00    0.00       1/4           Timer::~Timer() [126]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[2]    100.0    0.00    0.13       1         SliceSampling::learn(int*, char*, int) [2]
                0.03    0.10       1/1           SliceSampling::cdlearn(int) [3]
                0.00    0.00      54/1443654     SatProblem::getTheta(int) [11]
                0.00    0.00       2/67468       Timer::time() [60]
                0.00    0.00       1/1           SliceSampling::lallocate(int) [176]
                0.00    0.00       1/1           SliceSampling::readdata(char*) [174]
                0.00    0.00       1/9           Timer::printTime(std::ostream&, double const&) [113]
-----------------------------------------------
                0.03    0.10       1/1           SliceSampling::learn(int*, char*, int) [2]
[3]    100.0    0.03    0.10       1         SliceSampling::cdlearn(int) [3]
                0.01    0.05   10000/10000       SliceSampling::sampleX() [4]
                0.02    0.00  100000/100000      SliceSampling::modelcheck(int) [8]
                0.00    0.01   10000/10000       SliceSampling::sampleU() [18]
                0.01    0.00 1323600/1443654     SatProblem::getTheta(int) [11]
                0.00    0.00   10000/190117      SatProblem::getGrand() [5]
                0.00    0.00     600/100600      SliceSampling::calckey(int) [54]
                0.00    0.00     400/67468       Timer::time() [60]
                0.00    0.00     100/100         SatProblem::updateTheta(double*) [86]
                0.00    0.00     100/100         SliceSampling::calclik(int, double*, int*, int) [87]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [113]
-----------------------------------------------
                0.01    0.05   10000/10000       SliceSampling::cdlearn(int) [3]
[4]     45.7    0.01    0.05   10000         SliceSampling::sampleX() [4]
                0.00    0.03   10000/10000       SampleSAT::solve(SatProblem*, int*) [7]
                0.01    0.01   10000/10000       SatProblem::initParams() [9]
                0.00    0.00   60000/1443654     SatProblem::getTheta(int) [11]
                0.00    0.00   40000/67468       Timer::time() [60]
                0.00    0.00   13531/13531       SliceSampling::unitProc(int, int) [69]
                0.00    0.00   10000/10000       SatProblem::getNumFixedAtom() [84]
                0.00    0.00   10000/10000       SatProblem::getNumFixedClause() [85]
-----------------------------------------------
                0.00    0.00   10000/190117      SliceSampling::cdlearn(int) [3]
                0.00    0.00   27493/190117      SampleSAT::simAnnealing() [20]
                0.00    0.01   46155/190117      SampleSAT::walk() [10]
                0.00    0.01   46469/190117      SampleSAT::init_model() [19]
                0.00    0.01   60000/190117      SliceSampling::sampleU() [18]
[5]     23.1    0.00    0.03  190117         SatProblem::getGrand() [5]
                0.03    0.00  190117/190117      Random::genrand() [6]
-----------------------------------------------
                0.03    0.00  190117/190117      SatProblem::getGrand() [5]
[6]     23.1    0.03    0.00  190117         Random::genrand() [6]
-----------------------------------------------
                0.00    0.03   10000/10000       SliceSampling::sampleX() [4]
[7]     22.3    0.00    0.03   10000         SampleSAT::solve(SatProblem*, int*) [7]
                0.00    0.02   30760/30760       SampleSAT::walk() [10]
                0.00    0.01   10000/10000       SampleSAT::init_model() [19]
                0.00    0.00   10000/10000       SatProblem::initSatCheck(int*) [24]
                0.00    0.00   10000/10000       SatProblem::cpClVector() [83]
-----------------------------------------------
                0.02    0.00  100000/100000      SliceSampling::cdlearn(int) [3]
[8]     15.4    0.02    0.00  100000         SliceSampling::modelcheck(int) [8]
-----------------------------------------------
                0.01    0.01   10000/10000       SliceSampling::sampleX() [4]
[9]     15.4    0.01    0.01   10000         SatProblem::initParams() [9]
                0.00    0.01  320000/320036      std::list<int, std::allocator<int> >::push_back(int const&) [17]
                0.00    0.00  519992/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00  120000/120000      std::list<int, std::allocator<int> >::empty() const [52]
                0.00    0.00   79992/79992       std::list<int, std::allocator<int> >::clear() [59]
-----------------------------------------------
                0.00    0.02   30760/30760       SampleSAT::solve(SatProblem*, int*) [7]
[10]    15.3    0.00    0.02   30760         SampleSAT::walk() [10]
                0.00    0.01   46155/190117      SatProblem::getGrand() [5]
                0.00    0.01   15365/15365       SampleSAT::simAnnealing() [20]
                0.00    0.00    7683/7683        SampleSAT::greedyWalk() [22]
                0.00    0.00    7712/7712        SampleSAT::randomWalk() [26]
                0.00    0.00   60762/95249       SatProblem::getNumSat() [55]
-----------------------------------------------
                0.00    0.00      54/1443654     SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00   60000/1443654     SliceSampling::sampleU() [18]
                0.00    0.00   60000/1443654     SliceSampling::sampleX() [4]
                0.01    0.00 1323600/1443654     SliceSampling::cdlearn(int) [3]
[11]     7.7    0.01    0.00 1443654         SatProblem::getTheta(int) [11]
-----------------------------------------------
                0.00    0.00   46272/650945      SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  111365/650945      SatProblem::initSatCheck(int*) [24]
                0.00    0.00  180012/650945      SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  313296/650945      SatProblem::getNsc2(int*, int) [21]
[12]     7.7    0.01    0.00  650945         SatProblem::isSatCnj(int*, int) [12]
-----------------------------------------------
                0.01    0.00  320036/320036      std::_List_base<int, std::allocator<int> >::_M_get_node() [14]
[13]     7.7    0.01    0.00  320036         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [13]
                0.00    0.00  320036/320036      __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [47]
-----------------------------------------------
                0.00    0.01  320036/320036      std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[14]     7.7    0.00    0.01  320036         std::_List_base<int, std::allocator<int> >::_M_get_node() [14]
                0.01    0.00  320036/320036      __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [13]
-----------------------------------------------
                0.00    0.01  320036/320036      std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [16]
[15]     7.7    0.00    0.01  320036         std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
                0.00    0.01  320036/320036      std::_List_base<int, std::allocator<int> >::_M_get_node() [14]
                0.00    0.00  320036/640072      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [42]
                0.00    0.00  320036/320036      __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
                0.00    0.00  320036/640096      std::allocator<int>::~allocator() [41]
-----------------------------------------------
                0.00    0.01  320036/320036      std::list<int, std::allocator<int> >::push_back(int const&) [17]
[16]     7.7    0.00    0.01  320036         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [16]
                0.00    0.01  320036/320036      std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
-----------------------------------------------
                0.00    0.00      36/320036      SatProblem::parseCnfFile(char*) [27]
                0.00    0.01  320000/320036      SatProblem::initParams() [9]
[17]     7.7    0.00    0.01  320036         std::list<int, std::allocator<int> >::push_back(int const&) [17]
                0.00    0.01  320036/320036      std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [16]
                0.00    0.00  320036/1584532     std::list<int, std::allocator<int> >::end() [33]
-----------------------------------------------
                0.00    0.01   10000/10000       SliceSampling::cdlearn(int) [3]
[18]     7.6    0.00    0.01   10000         SliceSampling::sampleU() [18]
                0.00    0.01   60000/190117      SatProblem::getGrand() [5]
                0.00    0.00   60000/1443654     SatProblem::getTheta(int) [11]
-----------------------------------------------
                0.00    0.01   10000/10000       SampleSAT::solve(SatProblem*, int*) [7]
[19]     5.6    0.00    0.01   10000         SampleSAT::init_model() [19]
                0.00    0.01   46469/190117      SatProblem::getGrand() [5]
                0.00    0.00   73531/155397      SatProblem::getVar(int) [51]
-----------------------------------------------
                0.00    0.01   15365/15365       SampleSAT::walk() [10]
[20]     5.5    0.00    0.01   15365         SampleSAT::simAnnealing() [20]
                0.00    0.00   27493/190117      SatProblem::getGrand() [5]
                0.00    0.00   15365/52216       SatProblem::getNsc2(int*, int) [21]
                0.00    0.00   14607/30002       SatProblem::afterFlip(int*, int) [23]
                0.00    0.00   20120/155397      SatProblem::getVar(int) [51]
                0.00    0.00   15365/15365       SampleSAT::getTemp() [65]
                0.00    0.00   15365/95249       SatProblem::getNumSat() [55]
                0.00    0.00   14607/30002       SatProblem::addNumSat(int) [62]
-----------------------------------------------
                0.00    0.00   15365/52216       SampleSAT::simAnnealing() [20]
                0.00    0.00   36851/52216       SampleSAT::greedyWalk() [22]
[21]     3.7    0.00    0.00   52216         SatProblem::getNsc2(int*, int) [21]
                0.00    0.00  313296/650945      SatProblem::isSatCnj(int*, int) [12]
                0.00    0.00 1044320/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00  835456/1584532     std::list<int, std::allocator<int> >::end() [33]
                0.00    0.00  835456/1264496     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [34]
                0.00    0.00  626592/1131261     std::_List_iterator<int>::operator*() const [35]
                0.00    0.00  626592/951249      std::_List_iterator<int>::operator++(int) [36]
                0.00    0.00  208864/313247      std::list<int, std::allocator<int> >::begin() [49]
-----------------------------------------------
                0.00    0.00    7683/7683        SampleSAT::walk() [10]
[22]     3.2    0.00    0.00    7683         SampleSAT::greedyWalk() [22]
                0.00    0.00   36851/52216       SatProblem::getNsc2(int*, int) [21]
                0.00    0.00    7683/30002       SatProblem::afterFlip(int*, int) [23]
                0.00    0.00   46098/155397      SatProblem::getVar(int) [51]
                0.00    0.00   11410/95249       SatProblem::getNumSat() [55]
                0.00    0.00    7683/30002       SatProblem::addNumSat(int) [62]
-----------------------------------------------
                0.00    0.00    7683/30002       SampleSAT::greedyWalk() [22]
                0.00    0.00    7712/30002       SatProblem::getNsc1(int*, int) [25]
                0.00    0.00   14607/30002       SampleSAT::simAnnealing() [20]
[23]     2.1    0.00    0.00   30002         SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  180012/650945      SatProblem::isSatCnj(int*, int) [12]
                0.00    0.00  360024/1131261     std::_List_iterator<int>::operator*() const [35]
                0.00    0.00  300020/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00  240016/1584532     std::list<int, std::allocator<int> >::end() [33]
                0.00    0.00  240016/1264496     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [34]
                0.00    0.00  180012/951249      std::_List_iterator<int>::operator++(int) [36]
                0.00    0.00   60004/313247      std::list<int, std::allocator<int> >::begin() [49]
-----------------------------------------------
                0.00    0.00   10000/10000       SampleSAT::solve(SatProblem*, int*) [7]
[24]     1.3    0.00    0.00   10000         SatProblem::initSatCheck(int*) [24]
                0.00    0.00  111365/650945      SatProblem::isSatCnj(int*, int) [12]
-----------------------------------------------
                0.00    0.00    7712/7712        SampleSAT::randomWalk() [26]
[25]     1.1    0.00    0.00    7712         SatProblem::getNsc1(int*, int) [25]
                0.00    0.00   46272/650945      SatProblem::isSatCnj(int*, int) [12]
                0.00    0.00    7712/30002       SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  154240/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00  123392/1584532     std::list<int, std::allocator<int> >::end() [33]
                0.00    0.00  123392/1264496     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [34]
                0.00    0.00   92544/1131261     std::_List_iterator<int>::operator*() const [35]
                0.00    0.00   92544/951249      std::_List_iterator<int>::operator++(int) [36]
                0.00    0.00   30848/313247      std::list<int, std::allocator<int> >::begin() [49]
-----------------------------------------------
                0.00    0.00    7712/7712        SampleSAT::walk() [10]
[26]     1.1    0.00    0.00    7712         SampleSAT::randomWalk() [26]
                0.00    0.00    7712/7712        SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  217796/217796      SatProblem::getClVecSize() [50]
                0.00    0.00  116867/116867      SatProblem::getClVec(int) [53]
                0.00    0.00   93474/93474       SatProblem::getFixedClausei(int) [56]
                0.00    0.00   54432/54432       SatProblem::getCnjSize(int) [61]
                0.00    0.00   28992/28992       SatProblem::getCnj(int, int) [64]
                0.00    0.00   15648/155397      SatProblem::getVar(int) [51]
                0.00    0.00    7712/95249       SatProblem::getNumSat() [55]
                0.00    0.00    7712/30002       SatProblem::addNumSat(int) [62]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[27]     0.0    0.00    0.00       1         SatProblem::parseCnfFile(char*) [27]
                0.00    0.00      36/320036      std::list<int, std::allocator<int> >::push_back(int const&) [17]
                0.00    0.00      36/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00       1/1           SatProblem::allocate() [169]
-----------------------------------------------
                0.00    0.00      36/2097771     SatProblem::parseCnfFile(char*) [27]
                0.00    0.00   79163/2097771     SatProblem::setClause(int, int) [68]
                0.00    0.00  154240/2097771     SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  300020/2097771     SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  519992/2097771     SatProblem::initParams() [9]
                0.00    0.00 1044320/2097771     SatProblem::getNsc2(int*, int) [21]
[31]     0.0    0.00    0.00 2097771         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
-----------------------------------------------
                0.00    0.00  313247/1897779     std::list<int, std::allocator<int> >::begin() [49]
                0.00    0.00 1584532/1897779     std::list<int, std::allocator<int> >::end() [33]
[32]     0.0    0.00    0.00 1897779         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [32]
-----------------------------------------------
                0.00    0.00   65632/1584532     SatProblem::setClause(int, int) [68]
                0.00    0.00  123392/1584532     SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  240016/1584532     SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  320036/1584532     std::list<int, std::allocator<int> >::push_back(int const&) [17]
                0.00    0.00  835456/1584532     SatProblem::getNsc2(int*, int) [21]
[33]     0.0    0.00    0.00 1584532         std::list<int, std::allocator<int> >::end() [33]
                0.00    0.00 1584532/1897779     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [32]
-----------------------------------------------
                0.00    0.00   65632/1264496     SatProblem::setClause(int, int) [68]
                0.00    0.00  123392/1264496     SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  240016/1264496     SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  835456/1264496     SatProblem::getNsc2(int*, int) [21]
[34]     0.0    0.00    0.00 1264496         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [34]
-----------------------------------------------
                0.00    0.00   52101/1131261     SatProblem::setClause(int, int) [68]
                0.00    0.00   92544/1131261     SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  360024/1131261     SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  626592/1131261     SatProblem::getNsc2(int*, int) [21]
[35]     0.0    0.00    0.00 1131261         std::_List_iterator<int>::operator*() const [35]
-----------------------------------------------
                0.00    0.00   52101/951249      SatProblem::setClause(int, int) [68]
                0.00    0.00   92544/951249      SatProblem::getNsc1(int*, int) [25]
                0.00    0.00  180012/951249      SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  626592/951249      SatProblem::getNsc2(int*, int) [21]
[36]     0.0    0.00    0.00  951249         std::_List_iterator<int>::operator++(int) [36]
-----------------------------------------------
                0.00    0.00   13531/653627      std::allocator<int>::allocator() [70]
                0.00    0.00  640096/653627      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [40]
[37]     0.0    0.00    0.00  653627         __gnu_cxx::new_allocator<int>::new_allocator() [37]
-----------------------------------------------
                0.00    0.00   13531/653627      std::allocator<int>::~allocator() [71]
                0.00    0.00  640096/653627      std::allocator<int>::~allocator() [41]
[38]     0.0    0.00    0.00  653627         __gnu_cxx::new_allocator<int>::~new_allocator() [38]
-----------------------------------------------
                0.00    0.00      24/640096      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
                0.00    0.00  640072/640096      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [42]
[39]     0.0    0.00    0.00  640096         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [39]
-----------------------------------------------
                0.00    0.00      24/640096      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
                0.00    0.00  640072/640096      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [42]
[40]     0.0    0.00    0.00  640096         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [40]
                0.00    0.00  640096/653627      __gnu_cxx::new_allocator<int>::new_allocator() [37]
-----------------------------------------------
                0.00    0.00      24/640096      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
                0.00    0.00  320036/640096      std::_List_base<int, std::allocator<int> >::_M_clear() [58]
                0.00    0.00  320036/640096      std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[41]     0.0    0.00    0.00  640096         std::allocator<int>::~allocator() [41]
                0.00    0.00  640096/653627      __gnu_cxx::new_allocator<int>::~new_allocator() [38]
-----------------------------------------------
                0.00    0.00  320036/640072      std::_List_base<int, std::allocator<int> >::_M_clear() [58]
                0.00    0.00  320036/640072      std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[42]     0.0    0.00    0.00  640072         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [42]
                0.00    0.00  640072/640096      std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [39]
                0.00    0.00  640072/640096      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [40]
-----------------------------------------------
                0.00    0.00      24/320060      void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [107]
                0.00    0.00  320036/320060      __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
[43]     0.0    0.00    0.00  320060         operator new(unsigned int, void*) [43]
-----------------------------------------------
                0.00    0.00  320036/320036      std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
[44]     0.0    0.00    0.00  320036         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [44]
-----------------------------------------------
                0.00    0.00  320036/320036      std::_List_base<int, std::allocator<int> >::_M_clear() [58]
[45]     0.0    0.00    0.00  320036         __gnu_cxx::new_allocator<int>::destroy(int*) [45]
-----------------------------------------------
                0.00    0.00  320036/320036      std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[46]     0.0    0.00    0.00  320036         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
                0.00    0.00  320036/320060      operator new(unsigned int, void*) [43]
-----------------------------------------------
                0.00    0.00  320036/320036      __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [13]
[47]     0.0    0.00    0.00  320036         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [47]
-----------------------------------------------
                0.00    0.00  320036/320036      std::_List_base<int, std::allocator<int> >::_M_clear() [58]
[48]     0.0    0.00    0.00  320036         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
                0.00    0.00  320036/320036      __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [44]
-----------------------------------------------
                0.00    0.00   13531/313247      SatProblem::setClause(int, int) [68]
                0.00    0.00   30848/313247      SatProblem::getNsc1(int*, int) [25]
                0.00    0.00   60004/313247      SatProblem::afterFlip(int*, int) [23]
                0.00    0.00  208864/313247      SatProblem::getNsc2(int*, int) [21]
[49]     0.0    0.00    0.00  313247         std::list<int, std::allocator<int> >::begin() [49]
                0.00    0.00  313247/1897779     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [32]
-----------------------------------------------
                0.00    0.00  217796/217796      SampleSAT::randomWalk() [26]
[50]     0.0    0.00    0.00  217796         SatProblem::getClVecSize() [50]
-----------------------------------------------
                0.00    0.00   15648/155397      SampleSAT::randomWalk() [26]
                0.00    0.00   20120/155397      SampleSAT::simAnnealing() [20]
                0.00    0.00   46098/155397      SampleSAT::greedyWalk() [22]
                0.00    0.00   73531/155397      SampleSAT::init_model() [19]
[51]     0.0    0.00    0.00  155397         SatProblem::getVar(int) [51]
-----------------------------------------------
                0.00    0.00  120000/120000      SatProblem::initParams() [9]
[52]     0.0    0.00    0.00  120000         std::list<int, std::allocator<int> >::empty() const [52]
-----------------------------------------------
                0.00    0.00  116867/116867      SampleSAT::randomWalk() [26]
[53]     0.0    0.00    0.00  116867         SatProblem::getClVec(int) [53]
-----------------------------------------------
                0.00    0.00     600/100600      SliceSampling::cdlearn(int) [3]
                0.00    0.00  100000/100600      SliceSampling::calclik(int, double*, int*, int) [87]
[54]     0.0    0.00    0.00  100600         SliceSampling::calckey(int) [54]
-----------------------------------------------
                0.00    0.00    7712/95249       SampleSAT::randomWalk() [26]
                0.00    0.00   11410/95249       SampleSAT::greedyWalk() [22]
                0.00    0.00   15365/95249       SampleSAT::simAnnealing() [20]
                0.00    0.00   60762/95249       SampleSAT::walk() [10]
[55]     0.0    0.00    0.00   95249         SatProblem::getNumSat() [55]
-----------------------------------------------
                0.00    0.00   93474/93474       SampleSAT::randomWalk() [26]
[56]     0.0    0.00    0.00   93474         SatProblem::getFixedClausei(int) [56]
-----------------------------------------------
                0.00    0.00       4/80020       std::_List_base<int, std::allocator<int> >::_List_base() [137]
                0.00    0.00      24/80020       std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
                0.00    0.00   79992/80020       std::list<int, std::allocator<int> >::clear() [59]
[57]     0.0    0.00    0.00   80020         std::_List_base<int, std::allocator<int> >::_M_init() [57]
-----------------------------------------------
                0.00    0.00      28/80020       std::_List_base<int, std::allocator<int> >::~_List_base() [93]
                0.00    0.00   79992/80020       std::list<int, std::allocator<int> >::clear() [59]
[58]     0.0    0.00    0.00   80020         std::_List_base<int, std::allocator<int> >::_M_clear() [58]
                0.00    0.00  320036/640072      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [42]
                0.00    0.00  320036/320036      __gnu_cxx::new_allocator<int>::destroy(int*) [45]
                0.00    0.00  320036/640096      std::allocator<int>::~allocator() [41]
                0.00    0.00  320036/320036      std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
-----------------------------------------------
                0.00    0.00   79992/79992       SatProblem::initParams() [9]
[59]     0.0    0.00    0.00   79992         std::list<int, std::allocator<int> >::clear() [59]
                0.00    0.00   79992/80020       std::_List_base<int, std::allocator<int> >::_M_clear() [58]
                0.00    0.00   79992/80020       std::_List_base<int, std::allocator<int> >::_M_init() [57]
-----------------------------------------------
                0.00    0.00       2/67468       SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       4/67468       main [1]
                0.00    0.00     400/67468       SliceSampling::cdlearn(int) [3]
                0.00    0.00   27062/67468       SliceSampling::unitProc(int, int) [69]
                0.00    0.00   40000/67468       SliceSampling::sampleX() [4]
[60]     0.0    0.00    0.00   67468         Timer::time() [60]
-----------------------------------------------
                0.00    0.00   54432/54432       SampleSAT::randomWalk() [26]
[61]     0.0    0.00    0.00   54432         SatProblem::getCnjSize(int) [61]
-----------------------------------------------
                0.00    0.00    7683/30002       SampleSAT::greedyWalk() [22]
                0.00    0.00    7712/30002       SampleSAT::randomWalk() [26]
                0.00    0.00   14607/30002       SampleSAT::simAnnealing() [20]
[62]     0.0    0.00    0.00   30002         SatProblem::addNumSat(int) [62]
-----------------------------------------------
                0.00    0.00   28992/28992       SatProblem::getCnj(int, int) [64]
[63]     0.0    0.00    0.00   28992         SatProblem::getCnf(int) [63]
-----------------------------------------------
                0.00    0.00   28992/28992       SampleSAT::randomWalk() [26]
[64]     0.0    0.00    0.00   28992         SatProblem::getCnj(int, int) [64]
                0.00    0.00   28992/28992       SatProblem::getCnf(int) [63]
-----------------------------------------------
                0.00    0.00   15365/15365       SampleSAT::simAnnealing() [20]
[65]     0.0    0.00    0.00   15365         SampleSAT::getTemp() [65]
-----------------------------------------------
                0.00    0.00   13531/13531       SliceSampling::unitProc(int, int) [69]
[66]     0.0    0.00    0.00   13531         SatProblem::setAtom(int, int) [66]
-----------------------------------------------
                0.00    0.00   13531/13531       SliceSampling::unitProc(int, int) [69]
[67]     0.0    0.00    0.00   13531         SatProblem::rewriteWL(int, int) [67]
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::vector() [79]
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::~vector() [80]
-----------------------------------------------
                0.00    0.00   13531/13531       SliceSampling::unitProc(int, int) [69]
[68]     0.0    0.00    0.00   13531         SatProblem::setClause(int, int) [68]
                0.00    0.00   79163/2097771     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [31]
                0.00    0.00   65632/1584532     std::list<int, std::allocator<int> >::end() [33]
                0.00    0.00   65632/1264496     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [34]
                0.00    0.00   52101/1131261     std::_List_iterator<int>::operator*() const [35]
                0.00    0.00   52101/951249      std::_List_iterator<int>::operator++(int) [36]
                0.00    0.00   13531/313247      std::list<int, std::allocator<int> >::begin() [49]
-----------------------------------------------
                0.00    0.00   13531/13531       SliceSampling::sampleX() [4]
[69]     0.0    0.00    0.00   13531         SliceSampling::unitProc(int, int) [69]
                0.00    0.00   27062/67468       Timer::time() [60]
                0.00    0.00   13531/13531       SatProblem::setAtom(int, int) [66]
                0.00    0.00   13531/13531       SatProblem::setClause(int, int) [68]
                0.00    0.00   13531/13531       SatProblem::rewriteWL(int, int) [67]
-----------------------------------------------
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [73]
[70]     0.0    0.00    0.00   13531         std::allocator<int>::allocator() [70]
                0.00    0.00   13531/653627      __gnu_cxx::new_allocator<int>::new_allocator() [37]
-----------------------------------------------
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [74]
[71]     0.0    0.00    0.00   13531         std::allocator<int>::~allocator() [71]
                0.00    0.00   13531/653627      __gnu_cxx::new_allocator<int>::~new_allocator() [38]
-----------------------------------------------
                0.00    0.00   13531/13531       void std::_Destroy<int*>(int*, int*) [81]
[72]     0.0    0.00    0.00   13531         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [72]
-----------------------------------------------
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_base() [77]
[73]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [73]
                0.00    0.00   13531/13531       std::allocator<int>::allocator() [70]
-----------------------------------------------
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [78]
[74]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [74]
                0.00    0.00   13531/13531       std::allocator<int>::~allocator() [71]
-----------------------------------------------
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [78]
[75]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [75]
-----------------------------------------------
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::~vector() [80]
[76]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [76]
-----------------------------------------------
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::vector() [79]
[77]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [77]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [73]
-----------------------------------------------
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::~vector() [80]
[78]     0.0    0.00    0.00   13531         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [78]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [75]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [74]
-----------------------------------------------
                0.00    0.00   13531/13531       SatProblem::rewriteWL(int, int) [67]
[79]     0.0    0.00    0.00   13531         std::vector<int, std::allocator<int> >::vector() [79]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_Vector_base() [77]
-----------------------------------------------
                0.00    0.00   13531/13531       SatProblem::rewriteWL(int, int) [67]
[80]     0.0    0.00    0.00   13531         std::vector<int, std::allocator<int> >::~vector() [80]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [76]
                0.00    0.00   13531/13531       void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [82]
                0.00    0.00   13531/13531       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [78]
-----------------------------------------------
                0.00    0.00   13531/13531       void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [82]
[81]     0.0    0.00    0.00   13531         void std::_Destroy<int*>(int*, int*) [81]
                0.00    0.00   13531/13531       void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [72]
-----------------------------------------------
                0.00    0.00   13531/13531       std::vector<int, std::allocator<int> >::~vector() [80]
[82]     0.0    0.00    0.00   13531         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [82]
                0.00    0.00   13531/13531       void std::_Destroy<int*>(int*, int*) [81]
-----------------------------------------------
                0.00    0.00   10000/10000       SampleSAT::solve(SatProblem*, int*) [7]
[83]     0.0    0.00    0.00   10000         SatProblem::cpClVector() [83]
-----------------------------------------------
                0.00    0.00   10000/10000       SliceSampling::sampleX() [4]
[84]     0.0    0.00    0.00   10000         SatProblem::getNumFixedAtom() [84]
-----------------------------------------------
                0.00    0.00   10000/10000       SliceSampling::sampleX() [4]
[85]     0.0    0.00    0.00   10000         SatProblem::getNumFixedClause() [85]
-----------------------------------------------
                0.00    0.00     100/100         SliceSampling::cdlearn(int) [3]
[86]     0.0    0.00    0.00     100         SatProblem::updateTheta(double*) [86]
-----------------------------------------------
                0.00    0.00     100/100         SliceSampling::cdlearn(int) [3]
[87]     0.0    0.00    0.00     100         SliceSampling::calclik(int, double*, int*, int) [87]
                0.00    0.00  100000/100600      SliceSampling::calckey(int) [54]
-----------------------------------------------
                0.00    0.00      24/52          std::allocator<std::_List_node<int> >::~allocator() [102]
                0.00    0.00      28/52          std::allocator<std::_List_node<int> >::~allocator() [91]
[88]     0.0    0.00    0.00      52         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [88]
-----------------------------------------------
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::begin() const [98]
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::end() const [97]
[89]     0.0    0.00    0.00      48         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [89]
-----------------------------------------------
                0.00    0.00       4/28          std::allocator<std::_List_node<int> >::allocator() [133]
                0.00    0.00      24/28          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [100]
[90]     0.0    0.00    0.00      28         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [90]
-----------------------------------------------
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [92]
[91]     0.0    0.00    0.00      28         std::allocator<std::_List_node<int> >::~allocator() [91]
                0.00    0.00      28/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [88]
-----------------------------------------------
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [93]
[92]     0.0    0.00    0.00      28         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [92]
                0.00    0.00      28/28          std::allocator<std::_List_node<int> >::~allocator() [91]
-----------------------------------------------
                0.00    0.00      28/28          std::list<int, std::allocator<int> >::~list() [94]
[93]     0.0    0.00    0.00      28         std::_List_base<int, std::allocator<int> >::~_List_base() [93]
                0.00    0.00      28/80020       std::_List_base<int, std::allocator<int> >::_M_clear() [58]
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [92]
-----------------------------------------------
                0.00    0.00       4/28          SatProblem::allocate() [169]
                0.00    0.00      24/28          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [108]
[94]     0.0    0.00    0.00      28         std::list<int, std::allocator<int> >::~list() [94]
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [93]
-----------------------------------------------
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
[95]     0.0    0.00    0.00      24         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [95]
-----------------------------------------------
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
[96]     0.0    0.00    0.00      24         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [96]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
[97]     0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::end() const [97]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [89]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
[98]     0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::begin() const [98]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [89]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [149]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [132]
[99]     0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [99]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
[100]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [100]
                0.00    0.00      24/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [90]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
[101]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
                0.00    0.00      24/24          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [95]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
[102]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::~allocator() [102]
                0.00    0.00      24/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [88]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
[103]    0.0    0.00    0.00      24         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
[104]    0.0    0.00    0.00      24         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [100]
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::~allocator() [102]
                0.00    0.00      24/80020       std::_List_base<int, std::allocator<int> >::_M_init() [57]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
[105]    0.0    0.00    0.00      24         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
                0.00    0.00      24/24          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [96]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [107]
[106]    0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
                0.00    0.00      24/640096      std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [39]
                0.00    0.00      24/640096      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [40]
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [104]
                0.00    0.00      24/640096      std::allocator<int>::~allocator() [41]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::end() const [97]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::begin() const [98]
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
-----------------------------------------------
                0.00    0.00      24/24          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [143]
[107]    0.0    0.00    0.00      24         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [107]
                0.00    0.00      24/320060      operator new(unsigned int, void*) [43]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [106]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [117]
[108]    0.0    0.00    0.00      24         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [108]
                0.00    0.00      24/28          std::list<int, std::allocator<int> >::~list() [94]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [151]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[109]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [109]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [131]
[110]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [110]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [128]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [116]
[111]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [111]
-----------------------------------------------
                0.00    0.00       1/10          SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
                0.00    0.00       1/10          SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [177]
                0.00    0.00       8/10          main [1]
[112]    0.0    0.00    0.00      10         SatProblem::getNumVariables() [112]
-----------------------------------------------
                0.00    0.00       1/9           SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       2/9           main [1]
                0.00    0.00       2/9           SliceSampling::cdlearn(int) [3]
                0.00    0.00       4/9           SliceSampling::printUnitTime() [172]
[113]    0.0    0.00    0.00       9         Timer::printTime(std::ostream&, double const&) [113]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
[114]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [114]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [116]
[115]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [115]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [132]
[116]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [116]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [115]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [111]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [123]
[117]    0.0    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [117]
                0.00    0.00      24/24          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [108]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [142]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[118]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [127]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
[119]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [119]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
[120]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [119]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
[121]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[122]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
[123]    0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [123]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [117]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [151]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[124]    0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [123]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [170]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [177]
[125]    0.0    0.00    0.00       4         Timer::Timer() [125]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [171]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [188]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [178]
[126]    0.0    0.00    0.00       4         Timer::~Timer() [126]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
[127]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [127]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [138]
[128]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [128]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [111]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [134]
[129]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [129]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [135]
[130]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [130]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[131]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [131]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [110]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[132]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [132]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [99]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [116]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [154]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [136]
[133]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [133]
                0.00    0.00       4/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [90]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [139]
[134]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [134]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [129]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [140]
[135]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [135]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [130]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [137]
[136]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [136]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [133]
-----------------------------------------------
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [144]
[137]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [137]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [136]
                0.00    0.00       4/80020       std::_List_base<int, std::allocator<int> >::_M_init() [57]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[138]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [138]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [128]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [141]
[139]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [139]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [134]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [142]
[140]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [140]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [135]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [150]
[141]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [141]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [139]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [151]
[142]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [142]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [140]
-----------------------------------------------
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [152]
[143]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [143]
                0.00    0.00      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [107]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [169]
[144]    0.0    0.00    0.00       4         std::list<int, std::allocator<int> >::list() [144]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [137]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [148]
[145]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [109]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [110]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [132]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [131]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [138]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [153]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [149]
[146]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [114]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[147]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [114]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [149]
[148]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [148]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [169]
[149]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [149]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [99]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [148]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [170]
[150]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [150]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [141]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [171]
[151]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [151]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [109]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [142]
-----------------------------------------------
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [153]
[152]    0.0    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [152]
                0.00    0.00       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [143]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [145]
[153]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [153]
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [152]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [132]
[154]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [154]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [170]
[155]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [155]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [288]
[156]    0.0    0.00    0.00       1         global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [156]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [163]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [288]
[157]    0.0    0.00    0.00       1         global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [157]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [288]
[158]    0.0    0.00    0.00       1         global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [158]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [288]
[159]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [159]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [162]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[160]    0.0    0.00    0.00       1         printlParameters(learnparams*) [160]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[161]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [161]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [159]
[162]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [162]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [156]
[163]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [163]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [158]
[164]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [157]
[165]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[166]    0.0    0.00    0.00       1         SatProblem::parseSliFile(char*) [166]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[167]    0.0    0.00    0.00       1         SatProblem::getNumClauses() [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[168]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [168]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [27]
[169]    0.0    0.00    0.00       1         SatProblem::allocate() [169]
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [144]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [149]
                0.00    0.00       4/28          std::list<int, std::allocator<int> >::~list() [94]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[170]    0.0    0.00    0.00       1         SatProblem::SatProblem(unsigned long, bool) [170]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [150]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [155]
                0.00    0.00       1/1           Random::Random() [180]
                0.00    0.00       1/4           Timer::Timer() [125]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [179]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[171]    0.0    0.00    0.00       1         SatProblem::~SatProblem() [171]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [151]
                0.00    0.00       1/4           Timer::~Timer() [126]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[172]    0.0    0.00    0.00       1         SliceSampling::printUnitTime() [172]
                0.00    0.00       4/9           Timer::printTime(std::ostream&, double const&) [113]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [177]
[173]    0.0    0.00    0.00       1         SliceSampling::init() [173]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::learn(int*, char*, int) [2]
[174]    0.0    0.00    0.00       1         SliceSampling::readdata(char*) [174]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[175]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [175]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::learn(int*, char*, int) [2]
[176]    0.0    0.00    0.00       1         SliceSampling::lallocate(int) [176]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[177]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [177]
                0.00    0.00       1/4           Timer::Timer() [125]
                0.00    0.00       1/10          SatProblem::getNumVariables() [112]
                0.00    0.00       1/1           SliceSampling::init() [173]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[178]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [178]
                0.00    0.00       1/4           Timer::~Timer() [126]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [170]
[179]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [179]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [170]
[180]    0.0    0.00    0.00       1         Random::Random() [180]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[181]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [181]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[182]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [182]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[183]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [183]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[184]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [184]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
[185]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [185]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[186]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [186]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[187]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [187]
                0.00    0.00       1/4           Timer::Timer() [125]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [181]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [182]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [184]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [185]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [183]
                0.00    0.00       1/10          SatProblem::getNumVariables() [112]
                0.00    0.00       1/1           SatProblem::getNumClauses() [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[188]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [188]
                0.00    0.00       1/4           Timer::~Timer() [126]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [156] global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [179] Random::sgenrand(unsigned long) [48] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [157] global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180] Random::Random() [57] std::_List_base<int, std::allocator<int> >::_M_init()
 [158] global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [22] SampleSAT::greedyWalk() [58] std::_List_base<int, std::allocator<int> >::_M_clear()
 [159] global constructors keyed to cnffilename [19] SampleSAT::init_model() [104] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [160] printlParameters(learnparams*) [26] SampleSAT::randomWalk() [137] std::_List_base<int, std::allocator<int> >::_List_base()
 [161] printssParameters(samplesatparams*) [181] SampleSAT::setWalkMax(int) [93] std::_List_base<int, std::allocator<int> >::~_List_base()
 [162] __static_initialization_and_destruction_0(int, int) [182] SampleSAT::setNumSample(int) [117] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [163] __static_initialization_and_destruction_0(int, int) [20] SampleSAT::simAnnealing() [72] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
 [164] __static_initialization_and_destruction_0(int, int) [183] SampleSAT::setTemperature(double) [138] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
 [165] __static_initialization_and_destruction_0(int, int) [184] SampleSAT::setWalkSatProb(double) [139] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [83] SatProblem::cpClVector() [185] SampleSAT::setRandomWalkProb(double) [140] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [61] SatProblem::getCnjSize(int) [10] SampleSAT::walk() [118] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
   [9] SatProblem::initParams() [7] SampleSAT::solve(SatProblem*, int*) [109] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [86] SatProblem::updateTheta(double*) [186] SampleSAT::calcAve(learnparams*) [141] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [50] SatProblem::getClVecSize() [65] SampleSAT::getTemp() [142] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [24] SatProblem::initSatCheck(int*) [187] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [73] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  [27] SatProblem::parseCnfFile(char*) [188] SampleSAT::~SampleSAT() [74] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
 [166] SatProblem::parseSliFile(char*) [44] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [75] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
 [167] SatProblem::getNumClauses() [13] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [76] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
 [168] SatProblem::parseProbFile(char*) [95] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [77] std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  [56] SatProblem::getFixedClausei(int) [90] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [78] std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  [84] SatProblem::getNumFixedAtom() [88] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [32] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
 [112] SatProblem::getNumVariables() [127] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [155] std::_List_iterator<int>::_List_iterator()
  [85] SatProblem::getNumFixedClause() [128] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [36] std::_List_iterator<int>::operator++(int)
  [63] SatProblem::getCnf(int) [129] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [89] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  [64] SatProblem::getCnj(int, int) [130] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [119] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [51] SatProblem::getVar(int) [45] __gnu_cxx::new_allocator<int>::destroy(int*) [143] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [25] SatProblem::getNsc1(int*, int) [46] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [15] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [21] SatProblem::getNsc2(int*, int) [37] __gnu_cxx::new_allocator<int>::new_allocator() [105] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [66] SatProblem::setAtom(int, int) [38] __gnu_cxx::new_allocator<int>::~new_allocator() [33] std::list<int, std::allocator<int> >::end()
 [169] SatProblem::allocate() [114] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [49] std::list<int, std::allocator<int> >::begin()
  [53] SatProblem::getClVec(int) [131] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [59] std::list<int, std::allocator<int> >::clear()
   [5] SatProblem::getGrand() [47] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [16] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [11] SatProblem::getTheta(int) [111] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [17] std::list<int, std::allocator<int> >::push_back(int const&)
  [12] SatProblem::isSatCnj(int*, int) [110] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [106] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [62] SatProblem::addNumSat(int) [42] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [144] std::list<int, std::allocator<int> >::list()
  [23] SatProblem::afterFlip(int*, int) [39] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [94] std::list<int, std::allocator<int> >::~list()
  [55] SatProblem::getNumSat() [115] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [145] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [67] SatProblem::rewriteWL(int, int) [35] std::_List_iterator<int>::operator*() const [146] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [68] SatProblem::setClause(int, int) [34] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [147] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
 [170] SatProblem::SatProblem(unsigned long, bool) [96] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [148] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
 [171] SatProblem::~SatProblem() [97] std::list<int, std::allocator<int> >::end() const [149] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
   [8] SliceSampling::modelcheck(int) [98] std::list<int, std::allocator<int> >::begin() const [150] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
 [172] SliceSampling::printUnitTime() [52] std::list<int, std::allocator<int> >::empty() const [151] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
 [173] SliceSampling::init() [132] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [31] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
   [2] SliceSampling::learn(int*, char*, int) [99] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [79] std::vector<int, std::allocator<int> >::vector()
  [54] SliceSampling::calckey(int) [116] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [80] std::vector<int, std::allocator<int> >::~vector()
  [87] SliceSampling::calclik(int, double*, int*, int) [100] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [107] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
   [3] SliceSampling::cdlearn(int) [101] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [120] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [18] SliceSampling::sampleU() [133] std::allocator<std::_List_node<int> >::allocator() [152] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
   [4] SliceSampling::sampleX() [102] std::allocator<std::_List_node<int> >::~allocator() [121] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [174] SliceSampling::readdata(char*) [91] std::allocator<std::_List_node<int> >::~allocator() [122] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [69] SliceSampling::unitProc(int, int) [134] std::allocator<std::list<int, std::allocator<int> > >::allocator() [153] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [175] SliceSampling::calcFixed(learnparams*) [135] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [154] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [176] SliceSampling::lallocate(int) [40] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [123] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [177] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [70] std::allocator<int>::allocator() [124] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [178] SliceSampling::~SliceSampling() [41] std::allocator<int>::~allocator() [81] void std::_Destroy<int*>(int*, int*)
  [60] Timer::time()          [71] std::allocator<int>::~allocator() [82] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [113] Timer::printTime(std::ostream&, double const&) [103] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [108] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
 [125] Timer::Timer()        [136] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [43] operator new(unsigned int, void*)
 [126] Timer::~Timer()        [92] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
   [6] Random::genrand()      [14] std::_List_base<int, std::allocator<int> >::_M_get_node()
