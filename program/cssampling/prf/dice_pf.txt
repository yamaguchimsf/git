Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 13.50      0.22     0.22        1     0.22     1.59  SampleSAT::islearn(int, char*)
 11.66      0.41     0.19  9087136     0.00     0.00  SatProblem::isSatCnj(int*, int)
  7.36      0.53     0.12   773218     0.00     0.00  SatProblem::getNsc2(int*, int)
  6.44      0.64     0.10 12706428     0.00     0.00  std::_List_iterator<int>::operator++(int)
  6.13      0.73     0.10 26377408     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  6.13      0.83     0.10   100000     0.00     0.00  SatProblem::initParams()
  4.29      0.91     0.07  3200036     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  3.68      0.96     0.06 20141940     0.00     0.00  std::list<int, std::allocator<int> >::end()
  3.07      1.01     0.05 14974272     0.00     0.00  std::_List_iterator<int>::operator*() const
  3.07      1.06     0.05  6400072     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  3.07      1.11     0.05  1570567     0.00     0.00  Random::genrand()
  2.76      1.16     0.04 16941904     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  2.45      1.20     0.04   377974     0.00     0.00  SatProblem::afterFlip(int*, int)
  2.45      1.24     0.04    96664     0.00     0.00  SampleSAT::randomWalk()
  2.15      1.27     0.04 24377416     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  2.15      1.31     0.04  3200036     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  1.84      1.34     0.03  3200036     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  1.53      1.36     0.03  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  1.53      1.39     0.03   387112     0.00     0.00  SampleSAT::walk()
  1.23      1.41     0.02  6400096     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  1.23      1.43     0.02   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  1.23      1.45     0.02    96554     0.00     0.00  SampleSAT::greedyWalk()
  0.92      1.47     0.01 12648000     0.00     0.00  SatProblem::getTheta(int)
  0.92      1.48     0.01  6400096     0.00     0.00  std::allocator<int>::~allocator()
  0.92      1.50     0.01  3200036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.61      1.50     0.01  4235476     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.61      1.51     0.01  3200036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.61      1.52     0.01  1570567     0.00     0.00  SatProblem::getGrand()
  0.61      1.53     0.01  1568086     0.00     0.00  SatProblem::getVar(int)
  0.61      1.54     0.01   100000     0.00     0.00  SatProblem::cpClVector()
  0.61      1.55     0.01   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.61      1.56     0.01    96664     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.61      1.57     0.01       52     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.61      1.58     0.01                             std::allocator<int>::~allocator()
  0.31      1.59     0.01  6400096     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.31      1.59     0.01  3200060     0.00     0.00  operator new(unsigned int, void*)
  0.31      1.60     0.01  3200036     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.31      1.60     0.01   800020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.31      1.61     0.01   389736     0.00     0.00  SatProblem::getCnj(int, int)
  0.31      1.61     0.01   100000     0.00     0.00  SampleSAT::init_model()
  0.31      1.62     0.01       24     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.31      1.62     0.01        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.31      1.63     0.01        1     0.01     0.01  global constructors keyed to SatProblem::SatProblem(unsigned long, bool)
  0.00      1.63     0.00  6400096     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      1.63     0.00  6400096     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      1.63     0.00  3479904     0.00     0.00  SatProblem::getClVecSize()
  0.00      1.63     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.00      1.63     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.00      1.63     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      1.63     0.00  1883010     0.00     0.00  SatProblem::getClVec(int)
  0.00      1.63     0.00  1546624     0.00     0.00  SatProblem::getFixedClausei(int)
  0.00      1.63     0.00  1200000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00      1.63     0.00  1199946     0.00     0.00  SatProblem::getNumSat()
  0.00      1.63     0.00   800020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      1.63     0.00   799992     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00      1.63     0.00   679728     0.00     0.00  SatProblem::getCnjSize(int)
  0.00      1.63     0.00   389736     0.00     0.00  SatProblem::getCnf(int)
  0.00      1.63     0.00   377974     0.00     0.00  SatProblem::addNumSat(int)
  0.00      1.63     0.00   193894     0.00     0.00  SampleSAT::simAnnealing()
  0.00      1.63     0.00   193894     0.00     0.00  SampleSAT::getTemp()
  0.00      1.63     0.00   112000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.00      1.63     0.00    36000     0.00     0.00  SatProblem::getRealProb(int)
  0.00      1.63     0.00     8006     0.00     0.00  Timer::time()
  0.00      1.63     0.00     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.00      1.63     0.00     2000     0.00     0.00  SampleSAT::modelcheck(int)
  0.00      1.63     0.00     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00      1.63     0.00       48     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00      1.63     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      1.63     0.00       28     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      1.63     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      1.63     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      1.63     0.00       28     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00      1.63     0.00       24     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00      1.63     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00      1.63     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00      1.63     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00      1.63     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00      1.63     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00      1.63     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      1.63     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00      1.63     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00      1.63     0.00       24     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00      1.63     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00       24     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00       24     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00      1.63     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00      1.63     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00      1.63     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00      1.63     0.00       11     0.00     0.00  SatProblem::getNumVariables()
  0.00      1.63     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00      1.63     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00      1.63     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00      1.63     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.63     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      1.63     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.63     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.63     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.63     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.63     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.63     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00      1.63     0.00        4     0.00     0.00  Timer::Timer()
  0.00      1.63     0.00        4     0.00     0.00  Timer::~Timer()
  0.00      1.63     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      1.63     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00      1.63     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00      1.63     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00      1.63     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00      1.63     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      1.63     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00      1.63     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00      1.63     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      1.63     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00      1.63     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00      1.63     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00      1.63     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00      1.63     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00      1.63     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00      1.63     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00      1.63     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00      1.63     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.63     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.63     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      1.63     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00      1.63     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00      1.63     0.00        1     0.00     0.00  global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00      1.63     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00      1.63     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.63     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.63     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.63     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.63     0.00        1     0.00     0.02  SatProblem::parseCnfFile(char*)
  0.00      1.63     0.00        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00      1.63     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00      1.63     0.00        1     0.00     0.02  SatProblem::allocate()
  0.00      1.63     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00      1.63     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00      1.63     0.00        1     0.00     0.00  SliceSampling::init()
  0.00      1.63     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00      1.63     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00      1.63     0.00        1     0.00     0.00  Random::Random()
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00      1.63     0.00        1     0.00     1.59  SampleSAT::learn(int*, char*, int, char*)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::readdata(char*, int)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      1.63     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.61% of 1.63 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.1    0.00    1.61                 main [1]
                0.00    1.59       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.02       1/1           SatProblem::parseCnfFile(char*) [34]
                0.00    0.00       1/1           SatProblem::~SatProblem() [70]
                0.00    0.00       8/11          SatProblem::getNumVariables() [109]
                0.00    0.00       4/8006        Timer::time() [94]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [118]
                0.00    0.00       1/4           Timer::Timer() [119]
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [153]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [152]
                0.00    0.00       1/1           SatProblem::parseSliFile(char*) [151]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [146]
                0.00    0.00       1/1           printlParameters(learnparams*) [145]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [156]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [155]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [165]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [157]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [170]
                0.00    0.00       1/4           Timer::~Timer() [120]
-----------------------------------------------
                0.00    1.59       1/1           main [1]
[2]     97.9    0.00    1.59       1         SampleSAT::learn(int*, char*, int, char*) [2]
                0.22    1.37       1/1           SampleSAT::islearn(int, char*) [3]
                0.00    0.00       2/8006        Timer::time() [94]
                0.00    0.00       1/1           SampleSAT::lallocate(int) [168]
                0.00    0.00       1/1           SampleSAT::readdata(char*, int) [166]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [118]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [167]
-----------------------------------------------
                0.22    1.37       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     97.9    0.22    1.37       1         SampleSAT::islearn(int, char*) [3]
                0.02    1.34  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
                0.01    0.00 12648000/12648000     SatProblem::getTheta(int) [36]
                0.00    0.00  100000/1570567     SatProblem::getGrand() [23]
                0.00    0.00   36000/36000       SatProblem::getRealProb(int) [93]
                0.00    0.00    8000/8006        Timer::time() [94]
                0.00    0.00    3000/3000        SampleSAT::normalize(double*, int) [95]
                0.00    0.00    1000/1000        SatProblem::updateTheta(double*) [97]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [118]
-----------------------------------------------
                0.02    1.34  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     83.2    0.02    1.34  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.03    0.80  387112/387112      SampleSAT::walk() [5]
                0.10    0.32  100000/100000      SatProblem::initParams() [8]
                0.01    0.03  100000/100000      SatProblem::initSatCheck(int*) [27]
                0.01    0.03  100000/100000      SampleSAT::init_model() [30]
                0.01    0.00  100000/100000      SatProblem::cpClVector() [43]
-----------------------------------------------
                0.03    0.80  387112/387112      SampleSAT::solve(SatProblem*, int*) [4]
[5]     50.7    0.03    0.80  387112         SampleSAT::walk() [5]
                0.02    0.41   96554/96554       SampleSAT::greedyWalk() [7]
                0.00    0.21  193894/193894      SampleSAT::simAnnealing() [10]
                0.04    0.10   96664/96664       SampleSAT::randomWalk() [14]
                0.00    0.02  580330/1570567     SatProblem::getGrand() [23]
                0.00    0.00  765086/1199946     SatProblem::getNumSat() [87]
-----------------------------------------------
                0.03    0.09  193894/773218      SampleSAT::simAnnealing() [10]
                0.09    0.27  579324/773218      SampleSAT::greedyWalk() [7]
[6]     29.6    0.12    0.36  773218         SatProblem::getNsc2(int*, int) [6]
                0.10    0.00 4639308/9087136     SatProblem::isSatCnj(int*, int) [11]
                0.08    0.00 9278616/12706428     std::_List_iterator<int>::operator++(int) [16]
                0.06    0.00 15464360/26377408     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.04    0.02 12371488/20141940     std::list<int, std::allocator<int> >::end() [19]
                0.03    0.00 12371488/16941904     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [26]
                0.03    0.00 9278616/14974272     std::_List_iterator<int>::operator*() const [24]
                0.01    0.00 3092872/4235476     std::list<int, std::allocator<int> >::begin() [33]
-----------------------------------------------
                0.02    0.41   96554/96554       SampleSAT::walk() [5]
[7]     26.1    0.02    0.41   96554         SampleSAT::greedyWalk() [7]
                0.09    0.27  579324/773218      SatProblem::getNsc2(int*, int) [6]
                0.01    0.03   96554/377974      SatProblem::afterFlip(int*, int) [12]
                0.00    0.00  579324/1568086     SatProblem::getVar(int) [42]
                0.00    0.00  144302/1199946     SatProblem::getNumSat() [87]
                0.00    0.00   96554/377974      SatProblem::addNumSat(int) [90]
-----------------------------------------------
                0.10    0.32  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[8]     26.0    0.10    0.32  100000         SatProblem::initParams() [8]
                0.07    0.16 3200000/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [9]
                0.00    0.07  799992/799992      std::list<int, std::allocator<int> >::clear() [21]
                0.02    0.00 5199992/26377408     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.00    0.00 1200000/1200000     std::list<int, std::allocator<int> >::empty() const [86]
-----------------------------------------------
                0.00    0.00      36/3200036     SatProblem::parseCnfFile(char*) [34]
                0.07    0.16 3200000/3200036     SatProblem::initParams() [8]
[9]     14.4    0.07    0.16 3200036         std::list<int, std::allocator<int> >::push_back(int const&) [9]
                0.03    0.12 3200036/3200036     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
                0.01    0.00 3200036/20141940     std::list<int, std::allocator<int> >::end() [19]
-----------------------------------------------
                0.00    0.21  193894/193894      SampleSAT::walk() [5]
[10]    13.0    0.00    0.21  193894         SampleSAT::simAnnealing() [10]
                0.03    0.09  193894/773218      SatProblem::getNsc2(int*, int) [6]
                0.02    0.06  184756/377974      SatProblem::afterFlip(int*, int) [12]
                0.00    0.01  290237/1570567     SatProblem::getGrand() [23]
                0.00    0.00  193894/1568086     SatProblem::getVar(int) [42]
                0.00    0.00  193894/193894      SampleSAT::getTemp() [91]
                0.00    0.00  193894/1199946     SatProblem::getNumSat() [87]
                0.00    0.00  184756/377974      SatProblem::addNumSat(int) [90]
-----------------------------------------------
                0.01    0.00  579984/9087136     SatProblem::getNsc1(int*, int) [18]
                0.03    0.00 1600000/9087136     SatProblem::initSatCheck(int*) [27]
                0.05    0.00 2267844/9087136     SatProblem::afterFlip(int*, int) [12]
                0.10    0.00 4639308/9087136     SatProblem::getNsc2(int*, int) [6]
[11]    11.7    0.19    0.00 9087136         SatProblem::isSatCnj(int*, int) [11]
-----------------------------------------------
                0.01    0.03   96554/377974      SampleSAT::greedyWalk() [7]
                0.01    0.03   96664/377974      SatProblem::getNsc1(int*, int) [18]
                0.02    0.06  184756/377974      SampleSAT::simAnnealing() [10]
[12]     9.8    0.04    0.12  377974         SatProblem::afterFlip(int*, int) [12]
                0.05    0.00 2267844/9087136     SatProblem::isSatCnj(int*, int) [11]
                0.02    0.00 2267844/12706428     std::_List_iterator<int>::operator++(int) [16]
                0.02    0.00 4535688/14974272     std::_List_iterator<int>::operator*() const [24]
                0.01    0.00 3779740/26377408     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.01    0.00 3023792/20141940     std::list<int, std::allocator<int> >::end() [19]
                0.01    0.00 3023792/16941904     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [26]
                0.00    0.00  755948/4235476     std::list<int, std::allocator<int> >::begin() [33]
-----------------------------------------------
                0.03    0.12 3200036/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [9]
[13]     9.2    0.03    0.12 3200036         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
                0.04    0.08 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
-----------------------------------------------
                0.04    0.10   96664/96664       SampleSAT::walk() [5]
[14]     8.7    0.04    0.10   96664         SampleSAT::randomWalk() [14]
                0.01    0.09   96664/96664       SatProblem::getNsc1(int*, int) [18]
                0.01    0.00  389736/389736      SatProblem::getCnj(int, int) [62]
                0.00    0.00  194868/1568086     SatProblem::getVar(int) [42]
                0.00    0.00 3479904/3479904     SatProblem::getClVecSize() [81]
                0.00    0.00 1883010/1883010     SatProblem::getClVec(int) [84]
                0.00    0.00 1546624/1546624     SatProblem::getFixedClausei(int) [85]
                0.00    0.00  679728/679728      SatProblem::getCnjSize(int) [88]
                0.00    0.00   96664/1199946     SatProblem::getNumSat() [87]
                0.00    0.00   96664/377974      SatProblem::addNumSat(int) [90]
-----------------------------------------------
                0.04    0.08 3200036/3200036     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
[15]     7.4    0.04    0.08 3200036         std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
                0.03    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [20]
                0.01    0.03 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_get_node() [29]
                0.01    0.00 3200036/6400096     std::allocator<int>::~allocator() [37]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [68]
-----------------------------------------------
                0.01    0.00 1159968/12706428     SatProblem::getNsc1(int*, int) [18]
                0.02    0.00 2267844/12706428     SatProblem::afterFlip(int*, int) [12]
                0.08    0.00 9278616/12706428     SatProblem::getNsc2(int*, int) [6]
[16]     6.4    0.10    0.00 12706428         std::_List_iterator<int>::operator++(int) [16]
-----------------------------------------------
                0.00    0.00      36/26377408     SatProblem::parseCnfFile(char*) [34]
                0.01    0.00 1933280/26377408     SatProblem::getNsc1(int*, int) [18]
                0.01    0.00 3779740/26377408     SatProblem::afterFlip(int*, int) [12]
                0.02    0.00 5199992/26377408     SatProblem::initParams() [8]
                0.06    0.00 15464360/26377408     SatProblem::getNsc2(int*, int) [6]
[17]     6.1    0.10    0.00 26377408         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
-----------------------------------------------
                0.01    0.09   96664/96664       SampleSAT::randomWalk() [14]
[18]     5.9    0.01    0.09   96664         SatProblem::getNsc1(int*, int) [18]
                0.01    0.03   96664/377974      SatProblem::afterFlip(int*, int) [12]
                0.01    0.00  579984/9087136     SatProblem::isSatCnj(int*, int) [11]
                0.01    0.00 1159968/12706428     std::_List_iterator<int>::operator++(int) [16]
                0.01    0.00 1933280/26377408     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.00    0.00 1546624/20141940     std::list<int, std::allocator<int> >::end() [19]
                0.00    0.00 1546624/16941904     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [26]
                0.00    0.00 1159968/14974272     std::_List_iterator<int>::operator*() const [24]
                0.00    0.00  386656/4235476     std::list<int, std::allocator<int> >::begin() [33]
-----------------------------------------------
                0.00    0.00 1546624/20141940     SatProblem::getNsc1(int*, int) [18]
                0.01    0.00 3023792/20141940     SatProblem::afterFlip(int*, int) [12]
                0.01    0.00 3200036/20141940     std::list<int, std::allocator<int> >::push_back(int const&) [9]
                0.04    0.02 12371488/20141940     SatProblem::getNsc2(int*, int) [6]
[19]     5.5    0.06    0.03 20141940         std::list<int, std::allocator<int> >::end() [19]
                0.03    0.00 20141940/24377416     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [28]
-----------------------------------------------
                0.03    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_clear() [22]
                0.03    0.01 3200036/6400072     std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[20]     4.6    0.05    0.02 6400072         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [20]
                0.02    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [32]
                0.00    0.00 6400072/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [58]
-----------------------------------------------
                0.00    0.07  799992/799992      SatProblem::initParams() [8]
[21]     4.3    0.00    0.07  799992         std::list<int, std::allocator<int> >::clear() [21]
                0.00    0.06  799992/800020      std::_List_base<int, std::allocator<int> >::_M_clear() [22]
                0.00    0.00  799992/800020      std::_List_base<int, std::allocator<int> >::_M_init() [61]
-----------------------------------------------
                0.00    0.00      28/800020      std::_List_base<int, std::allocator<int> >::~_List_base() [54]
                0.00    0.06  799992/800020      std::list<int, std::allocator<int> >::clear() [21]
[22]     4.0    0.00    0.06  800020         std::_List_base<int, std::allocator<int> >::_M_clear() [22]
                0.03    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [20]
                0.01    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [38]
                0.01    0.00 3200036/6400096     std::allocator<int>::~allocator() [37]
                0.01    0.00 3200036/3200036     __gnu_cxx::new_allocator<int>::destroy(int*) [60]
-----------------------------------------------
                0.00    0.00  100000/1570567     SampleSAT::islearn(int, char*) [3]
                0.00    0.01  290237/1570567     SampleSAT::simAnnealing() [10]
                0.00    0.02  580330/1570567     SampleSAT::walk() [5]
                0.00    0.02  600000/1570567     SampleSAT::init_model() [30]
[23]     3.7    0.01    0.05 1570567         SatProblem::getGrand() [23]
                0.05    0.00 1570567/1570567     Random::genrand() [25]
-----------------------------------------------
                0.00    0.00 1159968/14974272     SatProblem::getNsc1(int*, int) [18]
                0.02    0.00 4535688/14974272     SatProblem::afterFlip(int*, int) [12]
                0.03    0.00 9278616/14974272     SatProblem::getNsc2(int*, int) [6]
[24]     3.1    0.05    0.00 14974272         std::_List_iterator<int>::operator*() const [24]
-----------------------------------------------
                0.05    0.00 1570567/1570567     SatProblem::getGrand() [23]
[25]     3.1    0.05    0.00 1570567         Random::genrand() [25]
-----------------------------------------------
                0.00    0.00 1546624/16941904     SatProblem::getNsc1(int*, int) [18]
                0.01    0.00 3023792/16941904     SatProblem::afterFlip(int*, int) [12]
                0.03    0.00 12371488/16941904     SatProblem::getNsc2(int*, int) [6]
[26]     2.8    0.04    0.00 16941904         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [26]
-----------------------------------------------
                0.01    0.03  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[27]     2.7    0.01    0.03  100000         SatProblem::initSatCheck(int*) [27]
                0.03    0.00 1600000/9087136     SatProblem::isSatCnj(int*, int) [11]
-----------------------------------------------
                0.01    0.00 4235476/24377416     std::list<int, std::allocator<int> >::begin() [33]
                0.03    0.00 20141940/24377416     std::list<int, std::allocator<int> >::end() [19]
[28]     2.1    0.04    0.00 24377416         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [28]
-----------------------------------------------
                0.01    0.03 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[29]     2.1    0.01    0.03 3200036         std::_List_base<int, std::allocator<int> >::_M_get_node() [29]
                0.03    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [31]
-----------------------------------------------
                0.01    0.03  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[30]     1.9    0.01    0.03  100000         SampleSAT::init_model() [30]
                0.00    0.02  600000/1570567     SatProblem::getGrand() [23]
                0.00    0.00  600000/1568086     SatProblem::getVar(int) [42]
-----------------------------------------------
                0.03    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_get_node() [29]
[31]     1.5    0.03    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [31]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [83]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
                0.02    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [20]
[32]     1.2    0.02    0.00 6400096         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [32]
-----------------------------------------------
                0.00    0.00  386656/4235476     SatProblem::getNsc1(int*, int) [18]
                0.00    0.00  755948/4235476     SatProblem::afterFlip(int*, int) [12]
                0.01    0.00 3092872/4235476     SatProblem::getNsc2(int*, int) [6]
[33]     1.0    0.01    0.01 4235476         std::list<int, std::allocator<int> >::begin() [33]
                0.01    0.00 4235476/24377416     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [28]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[34]     0.9    0.00    0.02       1         SatProblem::parseCnfFile(char*) [34]
                0.00    0.02       1/1           SatProblem::allocate() [35]
                0.00    0.00      36/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [9]
                0.00    0.00      36/26377408     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
-----------------------------------------------
                0.00    0.02       1/1           SatProblem::parseCnfFile(char*) [34]
[35]     0.9    0.00    0.02       1         SatProblem::allocate() [35]
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [41]
                0.00    0.00       4/28          std::list<int, std::allocator<int> >::~list() [55]
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [75]
-----------------------------------------------
                0.01    0.00 12648000/12648000     SampleSAT::islearn(int, char*) [3]
[36]     0.9    0.01    0.00 12648000         SatProblem::getTheta(int) [36]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
                0.01    0.00 3200036/6400096     std::_List_base<int, std::allocator<int> >::_M_clear() [22]
                0.01    0.00 3200036/6400096     std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[37]     0.9    0.01    0.00 6400096         std::allocator<int>::~allocator() [37]
                0.00    0.00 6400096/6400096     __gnu_cxx::new_allocator<int>::~new_allocator() [80]
-----------------------------------------------
                0.01    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_clear() [22]
[38]     0.9    0.01    0.00 3200036         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [38]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [82]
-----------------------------------------------
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [40]
[39]     0.9    0.00    0.01       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
                0.00    0.01       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [51]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [46]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [106]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [107]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [117]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [126]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [137]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [125]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [131]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [113]
-----------------------------------------------
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [41]
[40]     0.9    0.00    0.01       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [40]
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
-----------------------------------------------
                0.00    0.01       4/4           SatProblem::allocate() [35]
[41]     0.9    0.00    0.01       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [41]
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [40]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [103]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [136]
-----------------------------------------------
                0.00    0.00  193894/1568086     SampleSAT::simAnnealing() [10]
                0.00    0.00  194868/1568086     SampleSAT::randomWalk() [14]
                0.00    0.00  579324/1568086     SampleSAT::greedyWalk() [7]
                0.00    0.00  600000/1568086     SampleSAT::init_model() [30]
[42]     0.6    0.01    0.00 1568086         SatProblem::getVar(int) [42]
-----------------------------------------------
                0.01    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[43]     0.6    0.01    0.00  100000         SatProblem::cpClVector() [43]
-----------------------------------------------
                0.00    0.00      24/52          std::allocator<std::_List_node<int> >::~allocator() [73]
                0.01    0.00      28/52          std::allocator<std::_List_node<int> >::~allocator() [56]
[44]     0.6    0.01    0.00      52         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [44]
-----------------------------------------------
                                                 <spontaneous>
[45]     0.6    0.01    0.00                 std::allocator<int>::~allocator() [45]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [69]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[46]     0.6    0.00    0.01       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [46]
                0.01    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [47]
-----------------------------------------------
                0.01    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [46]
[47]     0.6    0.01    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [47]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [72]
-----------------------------------------------
                0.00    0.01      24/24          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [49]
[48]     0.6    0.00    0.01      24         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [48]
                0.00    0.01      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
                0.00    0.00      24/3200060     operator new(unsigned int, void*) [59]
-----------------------------------------------
                0.00    0.01       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [50]
[49]     0.6    0.00    0.01       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [49]
                0.00    0.01      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [48]
-----------------------------------------------
                0.00    0.01       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [51]
[50]     0.6    0.00    0.01       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [50]
                0.00    0.01       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [49]
-----------------------------------------------
                0.00    0.01       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[51]     0.6    0.00    0.01       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [51]
                0.00    0.01       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [50]
-----------------------------------------------
                0.00    0.01      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [48]
[52]     0.6    0.00    0.01      24         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
                0.00    0.01      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
                0.00    0.00      24/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [32]
                0.00    0.00      24/6400096     std::allocator<int>::~allocator() [37]
                0.00    0.00      24/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [58]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::end() const [101]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::begin() const [102]
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
-----------------------------------------------
                0.00    0.01      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
[53]     0.6    0.00    0.01      24         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
                0.00    0.01      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [65]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::~allocator() [73]
                0.00    0.00      24/800020      std::_List_base<int, std::allocator<int> >::_M_init() [61]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
-----------------------------------------------
                0.00    0.01      28/28          std::list<int, std::allocator<int> >::~list() [55]
[54]     0.3    0.00    0.01      28         std::_List_base<int, std::allocator<int> >::~_List_base() [54]
                0.00    0.01      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [57]
                0.00    0.00      28/800020      std::_List_base<int, std::allocator<int> >::_M_clear() [22]
-----------------------------------------------
                0.00    0.00       4/28          SatProblem::allocate() [35]
                0.00    0.00      24/28          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [71]
[55]     0.3    0.00    0.01      28         std::list<int, std::allocator<int> >::~list() [55]
                0.00    0.01      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [54]
-----------------------------------------------
                0.00    0.01      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [57]
[56]     0.3    0.00    0.01      28         std::allocator<std::_List_node<int> >::~allocator() [56]
                0.01    0.00      28/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [44]
-----------------------------------------------
                0.00    0.01      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [54]
[57]     0.3    0.00    0.01      28         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [57]
                0.00    0.01      28/28          std::allocator<std::_List_node<int> >::~allocator() [56]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
                0.00    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [20]
[58]     0.3    0.01    0.00 6400096         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [58]
                0.00    0.00 6400096/6400096     __gnu_cxx::new_allocator<int>::new_allocator() [79]
-----------------------------------------------
                0.00    0.00      24/3200060     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [48]
                0.00    0.00 3200036/3200060     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [68]
[59]     0.3    0.01    0.00 3200060         operator new(unsigned int, void*) [59]
-----------------------------------------------
                0.01    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_clear() [22]
[60]     0.3    0.01    0.00 3200036         __gnu_cxx::new_allocator<int>::destroy(int*) [60]
-----------------------------------------------
                0.00    0.00       4/800020      std::_List_base<int, std::allocator<int> >::_List_base() [74]
                0.00    0.00      24/800020      std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
                0.00    0.00  799992/800020      std::list<int, std::allocator<int> >::clear() [21]
[61]     0.3    0.01    0.00  800020         std::_List_base<int, std::allocator<int> >::_M_init() [61]
-----------------------------------------------
                0.01    0.00  389736/389736      SampleSAT::randomWalk() [14]
[62]     0.3    0.01    0.00  389736         SatProblem::getCnj(int, int) [62]
                0.00    0.00  389736/389736      SatProblem::getCnf(int) [89]
-----------------------------------------------
                0.01    0.00      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [64]
[63]     0.3    0.01    0.00      24         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [63]
-----------------------------------------------
                0.00    0.01      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [65]
[64]     0.3    0.00    0.01      24         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [64]
                0.01    0.00      24/24          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [63]
-----------------------------------------------
                0.00    0.01      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
[65]     0.3    0.00    0.01      24         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [65]
                0.00    0.01      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [64]
-----------------------------------------------
                0.01    0.00       1/1           __do_global_ctors_aux [67]
[66]     0.3    0.01    0.00       1         global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [66]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                                                 <spontaneous>
[67]     0.3    0.00    0.01                 __do_global_ctors_aux [67]
                0.01    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [66]
                0.00    0.00       1/1           global constructors keyed to cnffilename [144]
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [143]
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [142]
-----------------------------------------------
                0.00    0.00 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [15]
[68]     0.3    0.00    0.00 3200036         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [68]
                0.00    0.00 3200036/3200060     operator new(unsigned int, void*) [59]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [70]
[69]     0.3    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [69]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [46]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [106]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [135]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[70]     0.3    0.00    0.00       1         SatProblem::~SatProblem() [70]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [69]
                0.00    0.00       1/4           Timer::~Timer() [120]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [72]
[71]     0.3    0.00    0.00      24         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [71]
                0.00    0.00      24/28          std::list<int, std::allocator<int> >::~list() [55]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [47]
[72]     0.3    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [72]
                0.00    0.00      24/24          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [71]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
[73]     0.3    0.00    0.00      24         std::allocator<std::_List_node<int> >::~allocator() [73]
                0.00    0.00      24/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [44]
-----------------------------------------------
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [75]
[74]     0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [74]
                0.00    0.00       4/800020      std::_List_base<int, std::allocator<int> >::_M_init() [61]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [130]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [35]
[75]     0.0    0.00    0.00       4         std::list<int, std::allocator<int> >::list() [75]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [74]
-----------------------------------------------
                0.00    0.00 6400096/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [58]
[79]     0.0    0.00    0.00 6400096         __gnu_cxx::new_allocator<int>::new_allocator() [79]
-----------------------------------------------
                0.00    0.00 6400096/6400096     std::allocator<int>::~allocator() [37]
[80]     0.0    0.00    0.00 6400096         __gnu_cxx::new_allocator<int>::~new_allocator() [80]
-----------------------------------------------
                0.00    0.00 3479904/3479904     SampleSAT::randomWalk() [14]
[81]     0.0    0.00    0.00 3479904         SatProblem::getClVecSize() [81]
-----------------------------------------------
                0.00    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [38]
[82]     0.0    0.00    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [82]
-----------------------------------------------
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [31]
[83]     0.0    0.00    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [83]
-----------------------------------------------
                0.00    0.00 1883010/1883010     SampleSAT::randomWalk() [14]
[84]     0.0    0.00    0.00 1883010         SatProblem::getClVec(int) [84]
-----------------------------------------------
                0.00    0.00 1546624/1546624     SampleSAT::randomWalk() [14]
[85]     0.0    0.00    0.00 1546624         SatProblem::getFixedClausei(int) [85]
-----------------------------------------------
                0.00    0.00 1200000/1200000     SatProblem::initParams() [8]
[86]     0.0    0.00    0.00 1200000         std::list<int, std::allocator<int> >::empty() const [86]
-----------------------------------------------
                0.00    0.00   96664/1199946     SampleSAT::randomWalk() [14]
                0.00    0.00  144302/1199946     SampleSAT::greedyWalk() [7]
                0.00    0.00  193894/1199946     SampleSAT::simAnnealing() [10]
                0.00    0.00  765086/1199946     SampleSAT::walk() [5]
[87]     0.0    0.00    0.00 1199946         SatProblem::getNumSat() [87]
-----------------------------------------------
                0.00    0.00  679728/679728      SampleSAT::randomWalk() [14]
[88]     0.0    0.00    0.00  679728         SatProblem::getCnjSize(int) [88]
-----------------------------------------------
                0.00    0.00  389736/389736      SatProblem::getCnj(int, int) [62]
[89]     0.0    0.00    0.00  389736         SatProblem::getCnf(int) [89]
-----------------------------------------------
                0.00    0.00   96554/377974      SampleSAT::greedyWalk() [7]
                0.00    0.00   96664/377974      SampleSAT::randomWalk() [14]
                0.00    0.00  184756/377974      SampleSAT::simAnnealing() [10]
[90]     0.0    0.00    0.00  377974         SatProblem::addNumSat(int) [90]
-----------------------------------------------
                0.00    0.00  193894/193894      SampleSAT::simAnnealing() [10]
[91]     0.0    0.00    0.00  193894         SampleSAT::getTemp() [91]
-----------------------------------------------
                0.00    0.00  112000/112000      SampleSAT::normalize(double*, int) [95]
[92]     0.0    0.00    0.00  112000         double const& std::max<double>(double const&, double const&) [92]
-----------------------------------------------
                0.00    0.00   36000/36000       SampleSAT::islearn(int, char*) [3]
[93]     0.0    0.00    0.00   36000         SatProblem::getRealProb(int) [93]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[94]     0.0    0.00    0.00    8006         Timer::time() [94]
-----------------------------------------------
                0.00    0.00    3000/3000        SampleSAT::islearn(int, char*) [3]
[95]     0.0    0.00    0.00    3000         SampleSAT::normalize(double*, int) [95]
                0.00    0.00  112000/112000      double const& std::max<double>(double const&, double const&) [92]
-----------------------------------------------
                0.00    0.00    2000/2000        SampleSAT::readdata(char*, int) [166]
[96]     0.0    0.00    0.00    2000         SampleSAT::modelcheck(int) [96]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[97]     0.0    0.00    0.00    1000         SatProblem::updateTheta(double*) [97]
-----------------------------------------------
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::begin() const [102]
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::end() const [101]
[98]     0.0    0.00    0.00      48         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [98]
-----------------------------------------------
                0.00    0.00       4/28          std::allocator<std::_List_node<int> >::allocator() [127]
                0.00    0.00      24/28          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
[99]     0.0    0.00    0.00      28         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [99]
-----------------------------------------------
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
[100]    0.0    0.00    0.00      24         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [100]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
[101]    0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::end() const [101]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [98]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
[102]    0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::begin() const [102]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [98]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [41]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [126]
[103]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [103]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [53]
[104]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
                0.00    0.00      24/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [99]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [52]
[105]    0.0    0.00    0.00      24         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [105]
                0.00    0.00      24/24          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [100]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [69]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[106]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [106]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [125]
[107]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [107]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [122]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [112]
[108]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [108]
-----------------------------------------------
                0.00    0.00       1/11          SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
                0.00    0.00       1/11          SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [156]
                0.00    0.00       1/11          SliceSampling::calcFixed(learnparams*) [155]
                0.00    0.00       8/11          main [1]
[109]    0.0    0.00    0.00      11         SatProblem::getNumVariables() [109]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [136]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [137]
[110]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [110]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [112]
[111]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [111]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [126]
[112]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [112]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [111]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [108]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [135]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[113]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [113]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [121]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [115]
[114]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [114]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
[115]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [115]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [114]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [117]
[116]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [115]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[117]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [117]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[118]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [118]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [153]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [156]
[119]    0.0    0.00    0.00       4         Timer::Timer() [119]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [70]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [170]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [157]
[120]    0.0    0.00    0.00       4         Timer::~Timer() [120]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [113]
[121]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [121]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [131]
[122]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [122]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [108]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [128]
[123]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [123]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [129]
[124]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [124]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[125]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [125]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [107]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[126]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [126]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [103]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [112]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [139]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [130]
[127]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [127]
                0.00    0.00       4/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [99]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [132]
[128]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [128]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [123]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [133]
[129]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [129]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [124]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [74]
[130]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [130]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [127]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[131]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [131]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [122]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [134]
[132]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [132]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [128]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [135]
[133]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [133]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [129]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [138]
[134]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [134]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [132]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [69]
[135]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [135]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [113]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [133]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [41]
[136]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [136]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [110]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [39]
[137]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [137]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [110]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [153]
[138]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [138]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [134]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [126]
[139]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [139]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [155]
[140]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [140]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [153]
[141]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [141]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [67]
[142]    0.0    0.00    0.00       1         global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [142]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [67]
[143]    0.0    0.00    0.00       1         global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [143]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [149]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [67]
[144]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [144]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[145]    0.0    0.00    0.00       1         printlParameters(learnparams*) [145]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[146]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [146]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [144]
[147]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [66]
[148]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [143]
[149]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [149]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [142]
[150]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[151]    0.0    0.00    0.00       1         SatProblem::parseSliFile(char*) [151]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[152]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [152]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[153]    0.0    0.00    0.00       1         SatProblem::SatProblem(unsigned long, bool) [153]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [138]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [141]
                0.00    0.00       1/1           Random::Random() [159]
                0.00    0.00       1/4           Timer::Timer() [119]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [158]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [156]
[154]    0.0    0.00    0.00       1         SliceSampling::init() [154]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[155]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [155]
                0.00    0.00       1/11          SatProblem::getNumVariables() [109]
                0.00    0.00       1/2           SatProblem::getNumClauses() [140]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[156]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [156]
                0.00    0.00       1/4           Timer::Timer() [119]
                0.00    0.00       1/11          SatProblem::getNumVariables() [109]
                0.00    0.00       1/1           SliceSampling::init() [154]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[157]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [157]
                0.00    0.00       1/4           Timer::~Timer() [120]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [153]
[158]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [158]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [153]
[159]    0.0    0.00    0.00       1         Random::Random() [159]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
[160]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [160]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
[161]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [161]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
[162]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [162]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
[163]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [163]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
[164]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [164]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[165]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [165]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[166]    0.0    0.00    0.00       1         SampleSAT::readdata(char*, int) [166]
                0.00    0.00    2000/2000        SampleSAT::modelcheck(int) [96]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[167]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [167]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[168]    0.0    0.00    0.00       1         SampleSAT::lallocate(int) [168]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[169]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [169]
                0.00    0.00       1/4           Timer::Timer() [119]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [160]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [161]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [163]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [164]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [162]
                0.00    0.00       1/11          SatProblem::getNumVariables() [109]
                0.00    0.00       1/2           SatProblem::getNumClauses() [140]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[170]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [170]
                0.00    0.00       1/4           Timer::~Timer() [120]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [66] global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [10] SampleSAT::simAnnealing() [45] std::allocator<int>::~allocator()
 [142] global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [162] SampleSAT::setTemperature(double) [65] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
 [143] global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [163] SampleSAT::setWalkSatProb(double) [130] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [144] global constructors keyed to cnffilename [164] SampleSAT::setRandomWalkProb(double) [57] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [145] printlParameters(learnparams*) [5] SampleSAT::walk() [29] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [146] printssParameters(samplesatparams*) [2] SampleSAT::learn(int*, char*, int, char*) [38] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [147] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [61] std::_List_base<int, std::allocator<int> >::_M_init()
 [148] __static_initialization_and_destruction_0(int, int) [165] SampleSAT::calcAve(learnparams*) [22] std::_List_base<int, std::allocator<int> >::_M_clear()
 [149] __static_initialization_and_destruction_0(int, int) [91] SampleSAT::getTemp() [53] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [150] __static_initialization_and_destruction_0(int, int) [3] SampleSAT::islearn(int, char*) [74] std::_List_base<int, std::allocator<int> >::_List_base()
  [43] SatProblem::cpClVector() [166] SampleSAT::readdata(char*, int) [54] std::_List_base<int, std::allocator<int> >::~_List_base()
  [88] SatProblem::getCnjSize(int) [167] SampleSAT::destlearn(int) [72] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
   [8] SatProblem::initParams() [168] SampleSAT::lallocate(int) [131] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  [93] SatProblem::getRealProb(int) [95] SampleSAT::normalize(double*, int) [132] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [97] SatProblem::updateTheta(double*) [169] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [133] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [81] SatProblem::getClVecSize() [170] SampleSAT::~SampleSAT() [113] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [27] SatProblem::initSatCheck(int*) [82] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [106] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [34] SatProblem::parseCnfFile(char*) [31] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [134] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
 [151] SatProblem::parseSliFile(char*) [63] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [135] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
 [140] SatProblem::getNumClauses() [99] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [28] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
 [152] SatProblem::parseProbFile(char*) [44] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [141] std::_List_iterator<int>::_List_iterator()
  [85] SatProblem::getFixedClausei(int) [121] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [16] std::_List_iterator<int>::operator++(int)
 [109] SatProblem::getNumVariables() [122] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [98] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  [89] SatProblem::getCnf(int) [123] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [114] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [62] SatProblem::getCnj(int, int) [124] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [49] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [42] SatProblem::getVar(int) [60] __gnu_cxx::new_allocator<int>::destroy(int*) [15] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [18] SatProblem::getNsc1(int*, int) [68] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [105] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
   [6] SatProblem::getNsc2(int*, int) [79] __gnu_cxx::new_allocator<int>::new_allocator() [19] std::list<int, std::allocator<int> >::end()
  [35] SatProblem::allocate() [80] __gnu_cxx::new_allocator<int>::~new_allocator() [33] std::list<int, std::allocator<int> >::begin()
  [84] SatProblem::getClVec(int) [110] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [21] std::list<int, std::allocator<int> >::clear()
  [23] SatProblem::getGrand() [125] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [13] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [36] SatProblem::getTheta(int) [83] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [9] std::list<int, std::allocator<int> >::push_back(int const&)
  [11] SatProblem::isSatCnj(int*, int) [108] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [52] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [90] SatProblem::addNumSat(int) [107] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [75] std::list<int, std::allocator<int> >::list()
  [12] SatProblem::afterFlip(int*, int) [20] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [55] std::list<int, std::allocator<int> >::~list()
  [87] SatProblem::getNumSat() [32] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [39] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
 [153] SatProblem::SatProblem(unsigned long, bool) [111] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [136] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [70] SatProblem::~SatProblem() [24] std::_List_iterator<int>::operator*() const [137] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
 [154] SliceSampling::init()  [26] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [40] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
 [155] SliceSampling::calcFixed(learnparams*) [100] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [41] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
 [156] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [101] std::list<int, std::allocator<int> >::end() const [138] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
 [157] SliceSampling::~SliceSampling() [102] std::list<int, std::allocator<int> >::begin() const [69] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [94] Timer::time()          [86] std::list<int, std::allocator<int> >::empty() const [17] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
 [118] Timer::printTime(std::ostream&, double const&) [126] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [48] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [119] Timer::Timer()        [103] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [115] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [120] Timer::~Timer()       [112] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [50] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [25] Random::genrand()     [104] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [116] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [158] Random::sgenrand(unsigned long) [64] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [117] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [159] Random::Random()      [127] std::allocator<std::_List_node<int> >::allocator() [51] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
   [7] SampleSAT::greedyWalk() [73] std::allocator<std::_List_node<int> >::~allocator() [92] double const& std::max<double>(double const&, double const&)
  [30] SampleSAT::init_model() [56] std::allocator<std::_List_node<int> >::~allocator() [139] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  [96] SampleSAT::modelcheck(int) [128] std::allocator<std::list<int, std::allocator<int> > >::allocator() [47] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [14] SampleSAT::randomWalk() [129] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [46] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [160] SampleSAT::setWalkMax(int) [58] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [71] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
 [161] SampleSAT::setNumSample(int) [37] std::allocator<int>::~allocator() [59] operator new(unsigned int, void*)
