Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 12.98      0.14     0.14 12596700     0.00     0.00  std::_List_iterator<int>::operator++(int)
 12.50      0.27     0.13        1     0.13     1.02  SampleSAT::islearn(int, char*)
 11.54      0.39     0.12  9021028     0.00     0.00  SatProblem::isSatCnj(int*, int)
 11.54      0.51     0.12   766813     0.00     0.00  SatProblem::getNsc2(int*, int)
  3.85      0.55     0.04 24194536     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  3.85      0.58     0.04   800020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  2.88      0.61     0.03 26194528     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  2.88      0.65     0.03  6400072     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  2.88      0.68     0.03  3200036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  2.88      0.70     0.03  3200036     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  2.88      0.73     0.03   100000     0.00     0.00  SatProblem::initParams()
  2.40      0.76     0.03 16795600     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  1.92      0.78     0.02  6400096     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  1.92      0.80     0.02  3200036     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  1.92      0.82     0.02  3200036     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  1.92      0.84     0.02   383232     0.00     0.00  SampleSAT::walk()
  1.92      0.86     0.02   374226     0.00     0.00  SatProblem::afterFlip(int*, int)
  1.44      0.88     0.01  3200036     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.96      0.89     0.01 19995636     0.00     0.00  std::list<int, std::allocator<int> >::end()
  0.96      0.90     0.01 14842056     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.96      0.91     0.01 12648000     0.00     0.00  SatProblem::getTheta(int)
  0.96      0.92     0.01  6400096     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.96      0.93     0.01  4198900     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.96      0.94     0.01  1561182     0.00     0.00  SatProblem::getGrand()
  0.96      0.94     0.01  1561182     0.00     0.00  Random::genrand()
  0.96      0.95     0.01  1560103     0.00     0.00  SatProblem::getVar(int)
  0.96      0.96     0.01   800020     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.96      0.97     0.01   374226     0.00     0.00  SatProblem::addNumSat(int)
  0.96      0.98     0.01   112000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.96      0.99     0.01   100000     0.00     0.00  SampleSAT::init_model()
  0.96      1.00     0.01    95876     0.00     0.00  SampleSAT::greedyWalk()
  0.96      1.01     0.01    95799     0.00     0.00  SampleSAT::randomWalk()
  0.96      1.02     0.01        1     0.01     1.03  SampleSAT::learn(int*, char*, int, char*)
  0.48      1.03     0.01  6400096     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.48      1.03     0.01  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.48      1.04     0.01       28     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      1.04     0.00  6400096     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.00      1.04     0.00  6400096     0.00     0.00  std::allocator<int>::~allocator()
  0.00      1.04     0.00  3448764     0.00     0.00  SatProblem::getClVecSize()
  0.00      1.04     0.00  3200060     0.00     0.00  operator new(unsigned int, void*)
  0.00      1.04     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.00      1.04     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.00      1.04     0.00  3200036     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      1.04     0.00  3200036     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.00      1.04     0.00  1866042     0.00     0.00  SatProblem::getClVec(int)
  0.00      1.04     0.00  1532784     0.00     0.00  SatProblem::getFixedClausei(int)
  0.00      1.04     0.00  1200000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00      1.04     0.00  1188318     0.00     0.00  SatProblem::getNumSat()
  0.00      1.04     0.00   799992     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00      1.04     0.00   673977     0.00     0.00  SatProblem::getCnjSize(int)
  0.00      1.04     0.00   386580     0.00     0.00  SatProblem::getCnf(int)
  0.00      1.04     0.00   386580     0.00     0.00  SatProblem::getCnj(int, int)
  0.00      1.04     0.00   191557     0.00     0.00  SampleSAT::simAnnealing()
  0.00      1.04     0.00   191557     0.00     0.00  SampleSAT::getTemp()
  0.00      1.04     0.00   100000     0.00     0.00  SatProblem::cpClVector()
  0.00      1.04     0.00   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.00      1.04     0.00   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00      1.04     0.00    95799     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.00      1.04     0.00    36000     0.00     0.00  SatProblem::getRealProb(int)
  0.00      1.04     0.00     8006     0.00     0.00  Timer::time()
  0.00      1.04     0.00     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.00      1.04     0.00     2000     0.00     0.00  SampleSAT::modelcheck(int)
  0.00      1.04     0.00     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00      1.04     0.00       52     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      1.04     0.00       48     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00      1.04     0.00       28     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      1.04     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      1.04     0.00       28     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      1.04     0.00       28     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00      1.04     0.00       24     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00      1.04     0.00       24     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00      1.04     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00      1.04     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00      1.04     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00      1.04     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00      1.04     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00      1.04     0.00       24     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      1.04     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00      1.04     0.00       24     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00      1.04     0.00       24     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00      1.04     0.00       24     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00       24     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00       24     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00      1.04     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00      1.04     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00      1.04     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00      1.04     0.00       11     0.00     0.00  SatProblem::getNumVariables()
  0.00      1.04     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00      1.04     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00      1.04     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00      1.04     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.04     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      1.04     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.04     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.04     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.04     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.04     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      1.04     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.04     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00      1.04     0.00        4     0.00     0.00  Timer::Timer()
  0.00      1.04     0.00        4     0.00     0.00  Timer::~Timer()
  0.00      1.04     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      1.04     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00      1.04     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00      1.04     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00      1.04     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00      1.04     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      1.04     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00      1.04     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00      1.04     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      1.04     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00      1.04     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00      1.04     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00      1.04     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00      1.04     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00      1.04     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00      1.04     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00      1.04     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00      1.04     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      1.04     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      1.04     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      1.04     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00      1.04     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00      1.04     0.00        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00      1.04     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00      1.04     0.00        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00      1.04     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00      1.04     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00      1.04     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00      1.04     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.04     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.04     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.04     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.04     0.00        1     0.00     0.01  SatProblem::parseCnfFile(char*)
  0.00      1.04     0.00        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00      1.04     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00      1.04     0.00        1     0.00     0.01  SatProblem::allocate()
  0.00      1.04     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00      1.04     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00      1.04     0.00        1     0.00     0.00  SliceSampling::init()
  0.00      1.04     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00      1.04     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      1.04     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00      1.04     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00      1.04     0.00        1     0.00     0.00  Random::Random()
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::readdata(char*, int)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      1.04     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.96% of 1.04 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.04                 main [1]
                0.01    1.02       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.01       1/1           SatProblem::parseCnfFile(char*) [43]
                0.00    0.00       1/1           SatProblem::~SatProblem() [69]
                0.00    0.00       8/11          SatProblem::getNumVariables() [108]
                0.00    0.00       4/8006        Timer::time() [89]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [117]
                0.00    0.00       1/4           Timer::Timer() [118]
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [151]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [150]
                0.00    0.00       1/1           SatProblem::parseSliFile(char*) [149]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [144]
                0.00    0.00       1/1           printlParameters(learnparams*) [143]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [154]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [153]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [163]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [155]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [168]
                0.00    0.00       1/4           Timer::~Timer() [119]
-----------------------------------------------
                0.01    1.02       1/1           main [1]
[2]     99.5    0.01    1.02       1         SampleSAT::learn(int*, char*, int, char*) [2]
                0.13    0.89       1/1           SampleSAT::islearn(int, char*) [3]
                0.00    0.00       2/8006        Timer::time() [89]
                0.00    0.00       1/1           SampleSAT::lallocate(int) [166]
                0.00    0.00       1/1           SampleSAT::readdata(char*, int) [164]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [117]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [165]
-----------------------------------------------
                0.13    0.89       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     98.6    0.13    0.89       1         SampleSAT::islearn(int, char*) [3]
                0.00    0.87  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
                0.01    0.00 12648000/12648000     SatProblem::getTheta(int) [33]
                0.00    0.01    3000/3000        SampleSAT::normalize(double*, int) [41]
                0.00    0.00  100000/1561182     SatProblem::getGrand() [31]
                0.00    0.00   36000/36000       SatProblem::getRealProb(int) [88]
                0.00    0.00    8000/8006        Timer::time() [89]
                0.00    0.00    1000/1000        SatProblem::updateTheta(double*) [91]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                0.00    0.87  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     84.0    0.00    0.87  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.02    0.53  383232/383232      SampleSAT::walk() [5]
                0.03    0.25  100000/100000      SatProblem::initParams() [8]
                0.01    0.01  100000/100000      SampleSAT::init_model() [27]
                0.00    0.02  100000/100000      SatProblem::initSatCheck(int*) [28]
                0.00    0.00  100000/100000      SatProblem::cpClVector() [87]
-----------------------------------------------
                0.02    0.53  383232/383232      SampleSAT::solve(SatProblem*, int*) [4]
[5]     53.2    0.02    0.53  383232         SampleSAT::walk() [5]
                0.01    0.30   95876/95876       SampleSAT::greedyWalk() [7]
                0.00    0.15  191557/191557      SampleSAT::simAnnealing() [9]
                0.01    0.06   95799/95799       SampleSAT::randomWalk() [18]
                0.00    0.00  574907/1561182     SatProblem::getGrand() [31]
                0.00    0.00  757458/1188318     SatProblem::getNumSat() [82]
-----------------------------------------------
                0.03    0.06  191557/766813      SampleSAT::simAnnealing() [9]
                0.09    0.18  575256/766813      SampleSAT::greedyWalk() [7]
[6]     34.7    0.12    0.24  766813         SatProblem::getNsc2(int*, int) [6]
                0.10    0.00 9201756/12596700     std::_List_iterator<int>::operator++(int) [11]
                0.06    0.00 4600878/9021028     SatProblem::isSatCnj(int*, int) [12]
                0.01    0.02 12269008/19995636     std::list<int, std::allocator<int> >::end() [21]
                0.02    0.00 12269008/16795600     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [25]
                0.02    0.00 15336260/26194528     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
                0.01    0.01 3067252/4198900     std::list<int, std::allocator<int> >::begin() [32]
                0.01    0.00 9201756/14842056     std::_List_iterator<int>::operator*() const [42]
-----------------------------------------------
                0.01    0.30   95876/95876       SampleSAT::walk() [5]
[7]     29.9    0.01    0.30   95876         SampleSAT::greedyWalk() [7]
                0.09    0.18  575256/766813      SatProblem::getNsc2(int*, int) [6]
                0.01    0.02   95876/374226      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00  575256/1560103     SatProblem::getVar(int) [37]
                0.00    0.00   95876/374226      SatProblem::addNumSat(int) [39]
                0.00    0.00  143504/1188318     SatProblem::getNumSat() [82]
-----------------------------------------------
                0.03    0.25  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[8]     26.7    0.03    0.25  100000         SatProblem::initParams() [8]
                0.02    0.12 3200000/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.00    0.10  799992/799992      std::list<int, std::allocator<int> >::clear() [14]
                0.01    0.00 5199992/26194528     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
                0.00    0.00 1200000/1200000     std::list<int, std::allocator<int> >::empty() const [81]
-----------------------------------------------
                0.00    0.15  191557/191557      SampleSAT::walk() [5]
[9]     14.1    0.00    0.15  191557         SampleSAT::simAnnealing() [9]
                0.03    0.06  191557/766813      SatProblem::getNsc2(int*, int) [6]
                0.01    0.04  182551/374226      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00  182551/374226      SatProblem::addNumSat(int) [39]
                0.00    0.00  286275/1561182     SatProblem::getGrand() [31]
                0.00    0.00  191557/1560103     SatProblem::getVar(int) [37]
                0.00    0.00  191557/191557      SampleSAT::getTemp() [86]
                0.00    0.00  191557/1188318     SatProblem::getNumSat() [82]
-----------------------------------------------
                0.00    0.00      36/3200036     SatProblem::parseCnfFile(char*) [43]
                0.02    0.12 3200000/3200036     SatProblem::initParams() [8]
[10]    13.4    0.02    0.12 3200036         std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.03    0.08 3200036/3200036     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
                0.00    0.01 3200036/19995636     std::list<int, std::allocator<int> >::end() [21]
-----------------------------------------------
                0.01    0.00 1149588/12596700     SatProblem::getNsc1(int*, int) [20]
                0.02    0.00 2245356/12596700     SatProblem::afterFlip(int*, int) [15]
                0.10    0.00 9201756/12596700     SatProblem::getNsc2(int*, int) [6]
[11]    13.0    0.14    0.00 12596700         std::_List_iterator<int>::operator++(int) [11]
-----------------------------------------------
                0.01    0.00  574794/9021028     SatProblem::getNsc1(int*, int) [20]
                0.02    0.00 1600000/9021028     SatProblem::initSatCheck(int*) [28]
                0.03    0.00 2245356/9021028     SatProblem::afterFlip(int*, int) [15]
                0.06    0.00 4600878/9021028     SatProblem::getNsc2(int*, int) [6]
[12]    11.5    0.12    0.00 9021028         SatProblem::isSatCnj(int*, int) [12]
-----------------------------------------------
                0.03    0.08 3200036/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [10]
[13]    10.8    0.03    0.08 3200036         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
                0.00    0.08 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
-----------------------------------------------
                0.00    0.10  799992/799992      SatProblem::initParams() [8]
[14]     9.9    0.00    0.10  799992         std::list<int, std::allocator<int> >::clear() [14]
                0.04    0.05  799992/800020      std::_List_base<int, std::allocator<int> >::_M_clear() [16]
                0.01    0.00  799992/800020      std::_List_base<int, std::allocator<int> >::_M_init() [38]
-----------------------------------------------
                0.01    0.02   95799/374226      SatProblem::getNsc1(int*, int) [20]
                0.01    0.02   95876/374226      SampleSAT::greedyWalk() [7]
                0.01    0.04  182551/374226      SampleSAT::simAnnealing() [9]
[15]     9.2    0.02    0.08  374226         SatProblem::afterFlip(int*, int) [15]
                0.03    0.00 2245356/9021028     SatProblem::isSatCnj(int*, int) [12]
                0.02    0.00 2245356/12596700     std::_List_iterator<int>::operator++(int) [11]
                0.00    0.00 2993808/19995636     std::list<int, std::allocator<int> >::end() [21]
                0.00    0.00 2993808/16795600     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [25]
                0.00    0.00 3742260/26194528     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
                0.00    0.00 4490712/14842056     std::_List_iterator<int>::operator*() const [42]
                0.00    0.00  748452/4198900     std::list<int, std::allocator<int> >::begin() [32]
-----------------------------------------------
                0.00    0.00      28/800020      std::_List_base<int, std::allocator<int> >::~_List_base() [62]
                0.04    0.05  799992/800020      std::list<int, std::allocator<int> >::clear() [14]
[16]     8.9    0.04    0.05  800020         std::_List_base<int, std::allocator<int> >::_M_clear() [16]
                0.01    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [19]
                0.01    0.01 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [30]
                0.00    0.00 3200036/6400096     std::allocator<int>::~allocator() [35]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<int>::destroy(int*) [77]
-----------------------------------------------
                0.00    0.08 3200036/3200036     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [13]
[17]     7.9    0.00    0.08 3200036         std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
                0.03    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_get_node() [24]
                0.01    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [19]
                0.02    0.00 3200036/3200036     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [29]
                0.00    0.00 3200036/6400096     std::allocator<int>::~allocator() [35]
-----------------------------------------------
                0.01    0.06   95799/95799       SampleSAT::walk() [5]
[18]     6.6    0.01    0.06   95799         SampleSAT::randomWalk() [18]
                0.00    0.05   95799/95799       SatProblem::getNsc1(int*, int) [20]
                0.00    0.00   95799/374226      SatProblem::addNumSat(int) [39]
                0.00    0.00  193290/1560103     SatProblem::getVar(int) [37]
                0.00    0.00 3448764/3448764     SatProblem::getClVecSize() [74]
                0.00    0.00 1866042/1866042     SatProblem::getClVec(int) [79]
                0.00    0.00 1532784/1532784     SatProblem::getFixedClausei(int) [80]
                0.00    0.00  673977/673977      SatProblem::getCnjSize(int) [83]
                0.00    0.00  386580/386580      SatProblem::getCnj(int, int) [85]
                0.00    0.00   95799/1188318     SatProblem::getNumSat() [82]
-----------------------------------------------
                0.01    0.01 3200036/6400072     std::_List_base<int, std::allocator<int> >::_M_clear() [16]
                0.01    0.01 3200036/6400072     std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
[19]     5.3    0.03    0.02 6400072         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [19]
                0.02    0.00 6400072/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [26]
                0.00    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [73]
-----------------------------------------------
                0.00    0.05   95799/95799       SampleSAT::randomWalk() [18]
[20]     5.2    0.00    0.05   95799         SatProblem::getNsc1(int*, int) [20]
                0.01    0.02   95799/374226      SatProblem::afterFlip(int*, int) [15]
                0.01    0.00 1149588/12596700     std::_List_iterator<int>::operator++(int) [11]
                0.01    0.00  574794/9021028     SatProblem::isSatCnj(int*, int) [12]
                0.00    0.00 1532784/19995636     std::list<int, std::allocator<int> >::end() [21]
                0.00    0.00 1532784/16795600     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [25]
                0.00    0.00 1915980/26194528     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
                0.00    0.00  383196/4198900     std::list<int, std::allocator<int> >::begin() [32]
                0.00    0.00 1149588/14842056     std::_List_iterator<int>::operator*() const [42]
-----------------------------------------------
                0.00    0.00 1532784/19995636     SatProblem::getNsc1(int*, int) [20]
                0.00    0.00 2993808/19995636     SatProblem::afterFlip(int*, int) [15]
                0.00    0.01 3200036/19995636     std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.01    0.02 12269008/19995636     SatProblem::getNsc2(int*, int) [6]
[21]     4.1    0.01    0.03 19995636         std::list<int, std::allocator<int> >::end() [21]
                0.03    0.00 19995636/24194536     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.01    0.00 4198900/24194536     std::list<int, std::allocator<int> >::begin() [32]
                0.03    0.00 19995636/24194536     std::list<int, std::allocator<int> >::end() [21]
[22]     3.8    0.04    0.00 24194536         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.00    0.00      36/26194528     SatProblem::parseCnfFile(char*) [43]
                0.00    0.00 1915980/26194528     SatProblem::getNsc1(int*, int) [20]
                0.00    0.00 3742260/26194528     SatProblem::afterFlip(int*, int) [15]
                0.01    0.00 5199992/26194528     SatProblem::initParams() [8]
                0.02    0.00 15336260/26194528     SatProblem::getNsc2(int*, int) [6]
[23]     2.9    0.03    0.00 26194528         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
-----------------------------------------------
                0.03    0.00 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
[24]     2.9    0.03    0.00 3200036         std::_List_base<int, std::allocator<int> >::_M_get_node() [24]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [76]
-----------------------------------------------
                0.00    0.00 1532784/16795600     SatProblem::getNsc1(int*, int) [20]
                0.00    0.00 2993808/16795600     SatProblem::afterFlip(int*, int) [15]
                0.02    0.00 12269008/16795600     SatProblem::getNsc2(int*, int) [6]
[25]     2.4    0.03    0.00 16795600         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [25]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
                0.02    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [19]
[26]     2.4    0.02    0.01 6400096         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [26]
                0.01    0.00 6400096/6400096     __gnu_cxx::new_allocator<int>::new_allocator() [45]
-----------------------------------------------
                0.01    0.01  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[27]     2.1    0.01    0.01  100000         SampleSAT::init_model() [27]
                0.00    0.00  600000/1561182     SatProblem::getGrand() [31]
                0.00    0.00  600000/1560103     SatProblem::getVar(int) [37]
-----------------------------------------------
                0.00    0.02  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[28]     2.0    0.00    0.02  100000         SatProblem::initSatCheck(int*) [28]
                0.02    0.00 1600000/9021028     SatProblem::isSatCnj(int*, int) [12]
-----------------------------------------------
                0.02    0.00 3200036/3200036     std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
[29]     1.9    0.02    0.00 3200036         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [29]
                0.00    0.00 3200036/3200060     operator new(unsigned int, void*) [75]
-----------------------------------------------
                0.01    0.01 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_clear() [16]
[30]     1.9    0.01    0.01 3200036         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [30]
                0.01    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [46]
-----------------------------------------------
                0.00    0.00  100000/1561182     SampleSAT::islearn(int, char*) [3]
                0.00    0.00  286275/1561182     SampleSAT::simAnnealing() [9]
                0.00    0.00  574907/1561182     SampleSAT::walk() [5]
                0.00    0.00  600000/1561182     SampleSAT::init_model() [27]
[31]     1.9    0.01    0.01 1561182         SatProblem::getGrand() [31]
                0.01    0.00 1561182/1561182     Random::genrand() [36]
-----------------------------------------------
                0.00    0.00  383196/4198900     SatProblem::getNsc1(int*, int) [20]
                0.00    0.00  748452/4198900     SatProblem::afterFlip(int*, int) [15]
                0.01    0.01 3067252/4198900     SatProblem::getNsc2(int*, int) [6]
[32]     1.6    0.01    0.01 4198900         std::list<int, std::allocator<int> >::begin() [32]
                0.01    0.00 4198900/24194536     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.01    0.00 12648000/12648000     SampleSAT::islearn(int, char*) [3]
[33]     1.0    0.01    0.00 12648000         SatProblem::getTheta(int) [33]
-----------------------------------------------
                0.01    0.00 6400096/6400096     std::allocator<int>::~allocator() [35]
[34]     1.0    0.01    0.00 6400096         __gnu_cxx::new_allocator<int>::~new_allocator() [34]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
                0.00    0.00 3200036/6400096     std::_List_base<int, std::allocator<int> >::_M_clear() [16]
                0.00    0.00 3200036/6400096     std::list<int, std::allocator<int> >::_M_create_node(int const&) [17]
[35]     1.0    0.00    0.01 6400096         std::allocator<int>::~allocator() [35]
                0.01    0.00 6400096/6400096     __gnu_cxx::new_allocator<int>::~new_allocator() [34]
-----------------------------------------------
                0.01    0.00 1561182/1561182     SatProblem::getGrand() [31]
[36]     1.0    0.01    0.00 1561182         Random::genrand() [36]
-----------------------------------------------
                0.00    0.00  191557/1560103     SampleSAT::simAnnealing() [9]
                0.00    0.00  193290/1560103     SampleSAT::randomWalk() [18]
                0.00    0.00  575256/1560103     SampleSAT::greedyWalk() [7]
                0.00    0.00  600000/1560103     SampleSAT::init_model() [27]
[37]     1.0    0.01    0.00 1560103         SatProblem::getVar(int) [37]
-----------------------------------------------
                0.00    0.00       4/800020      std::_List_base<int, std::allocator<int> >::_List_base() [58]
                0.00    0.00      24/800020      std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
                0.01    0.00  799992/800020      std::list<int, std::allocator<int> >::clear() [14]
[38]     1.0    0.01    0.00  800020         std::_List_base<int, std::allocator<int> >::_M_init() [38]
-----------------------------------------------
                0.00    0.00   95799/374226      SampleSAT::randomWalk() [18]
                0.00    0.00   95876/374226      SampleSAT::greedyWalk() [7]
                0.00    0.00  182551/374226      SampleSAT::simAnnealing() [9]
[39]     1.0    0.01    0.00  374226         SatProblem::addNumSat(int) [39]
-----------------------------------------------
                0.01    0.00  112000/112000      SampleSAT::normalize(double*, int) [41]
[40]     1.0    0.01    0.00  112000         double const& std::max<double>(double const&, double const&) [40]
-----------------------------------------------
                0.00    0.01    3000/3000        SampleSAT::islearn(int, char*) [3]
[41]     1.0    0.00    0.01    3000         SampleSAT::normalize(double*, int) [41]
                0.01    0.00  112000/112000      double const& std::max<double>(double const&, double const&) [40]
-----------------------------------------------
                0.00    0.00 1149588/14842056     SatProblem::getNsc1(int*, int) [20]
                0.00    0.00 4490712/14842056     SatProblem::afterFlip(int*, int) [15]
                0.01    0.00 9201756/14842056     SatProblem::getNsc2(int*, int) [6]
[42]     1.0    0.01    0.00 14842056         std::_List_iterator<int>::operator*() const [42]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[43]     0.5    0.00    0.01       1         SatProblem::parseCnfFile(char*) [43]
                0.00    0.01       1/1           SatProblem::allocate() [44]
                0.00    0.00      36/3200036     std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.00    0.00      36/26194528     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [23]
-----------------------------------------------
                0.00    0.01       1/1           SatProblem::parseCnfFile(char*) [43]
[44]     0.5    0.00    0.01       1         SatProblem::allocate() [44]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [50]
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [59]
                0.00    0.00       4/28          std::list<int, std::allocator<int> >::~list() [63]
-----------------------------------------------
                0.01    0.00 6400096/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [26]
[45]     0.5    0.01    0.00 6400096         __gnu_cxx::new_allocator<int>::new_allocator() [45]
-----------------------------------------------
                0.01    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [30]
[46]     0.5    0.01    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [46]
-----------------------------------------------
                0.00    0.00       4/28          std::allocator<std::_List_node<int> >::allocator() [60]
                0.00    0.00      24/28          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [57]
[47]     0.5    0.01    0.00      28         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [47]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [49]
[48]     0.4    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [55]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [67]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [105]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [106]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [125]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [134]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [124]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [128]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [112]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [50]
[49]     0.4    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [49]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [44]
[50]     0.4    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [50]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [49]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [100]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [133]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [52]
[51]     0.4    0.00    0.00      24         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
                0.00    0.00      24/6400096     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [26]
                0.00    0.00      24/6400096     std::allocator<int>::~allocator() [35]
                0.00    0.00      24/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [73]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::end() const [98]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::begin() const [99]
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [104]
-----------------------------------------------
                0.00    0.00      24/24          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [53]
[52]     0.4    0.00    0.00      24         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [52]
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
                0.00    0.00      24/3200060     operator new(unsigned int, void*) [75]
-----------------------------------------------
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [54]
[53]     0.4    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [53]
                0.00    0.00      24/24          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [52]
-----------------------------------------------
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [55]
[54]     0.4    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [54]
                0.00    0.00       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [53]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[55]     0.4    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [55]
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [54]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
[56]     0.4    0.00    0.00      24         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [57]
                0.00    0.00      24/800020      std::_List_base<int, std::allocator<int> >::_M_init() [38]
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::~allocator() [102]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
[57]     0.4    0.00    0.00      24         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [57]
                0.00    0.00      24/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [47]
-----------------------------------------------
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [59]
[58]     0.1    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [58]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [61]
                0.00    0.00       4/800020      std::_List_base<int, std::allocator<int> >::_M_init() [38]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [44]
[59]     0.1    0.00    0.00       4         std::list<int, std::allocator<int> >::list() [59]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [58]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [61]
[60]     0.1    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [60]
                0.00    0.00       4/28          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [47]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [58]
[61]     0.1    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [61]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [60]
-----------------------------------------------
                0.00    0.00      28/28          std::list<int, std::allocator<int> >::~list() [63]
[62]     0.0    0.00    0.00      28         std::_List_base<int, std::allocator<int> >::~_List_base() [62]
                0.00    0.00      28/800020      std::_List_base<int, std::allocator<int> >::_M_clear() [16]
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [95]
-----------------------------------------------
                0.00    0.00       4/28          SatProblem::allocate() [44]
                0.00    0.00      24/28          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [64]
[63]     0.0    0.00    0.00      28         std::list<int, std::allocator<int> >::~list() [63]
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [62]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [65]
[64]     0.0    0.00    0.00      24         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [64]
                0.00    0.00      24/28          std::list<int, std::allocator<int> >::~list() [63]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [66]
[65]     0.0    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [65]
                0.00    0.00      24/24          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [64]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [67]
[66]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [66]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [65]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [68]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[67]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [67]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [66]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [69]
[68]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [68]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [67]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [105]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [132]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[69]     0.0    0.00    0.00       1         SatProblem::~SatProblem() [69]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [68]
                0.00    0.00       1/4           Timer::~Timer() [119]
-----------------------------------------------
                0.00    0.00      24/6400096     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
                0.00    0.00 6400072/6400096     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [19]
[73]     0.0    0.00    0.00 6400096         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [73]
-----------------------------------------------
                0.00    0.00 3448764/3448764     SampleSAT::randomWalk() [18]
[74]     0.0    0.00    0.00 3448764         SatProblem::getClVecSize() [74]
-----------------------------------------------
                0.00    0.00      24/3200060     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [52]
                0.00    0.00 3200036/3200060     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [29]
[75]     0.0    0.00    0.00 3200060         operator new(unsigned int, void*) [75]
-----------------------------------------------
                0.00    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_get_node() [24]
[76]     0.0    0.00    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [76]
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [78]
-----------------------------------------------
                0.00    0.00 3200036/3200036     std::_List_base<int, std::allocator<int> >::_M_clear() [16]
[77]     0.0    0.00    0.00 3200036         __gnu_cxx::new_allocator<int>::destroy(int*) [77]
-----------------------------------------------
                0.00    0.00 3200036/3200036     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [76]
[78]     0.0    0.00    0.00 3200036         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [78]
-----------------------------------------------
                0.00    0.00 1866042/1866042     SampleSAT::randomWalk() [18]
[79]     0.0    0.00    0.00 1866042         SatProblem::getClVec(int) [79]
-----------------------------------------------
                0.00    0.00 1532784/1532784     SampleSAT::randomWalk() [18]
[80]     0.0    0.00    0.00 1532784         SatProblem::getFixedClausei(int) [80]
-----------------------------------------------
                0.00    0.00 1200000/1200000     SatProblem::initParams() [8]
[81]     0.0    0.00    0.00 1200000         std::list<int, std::allocator<int> >::empty() const [81]
-----------------------------------------------
                0.00    0.00   95799/1188318     SampleSAT::randomWalk() [18]
                0.00    0.00  143504/1188318     SampleSAT::greedyWalk() [7]
                0.00    0.00  191557/1188318     SampleSAT::simAnnealing() [9]
                0.00    0.00  757458/1188318     SampleSAT::walk() [5]
[82]     0.0    0.00    0.00 1188318         SatProblem::getNumSat() [82]
-----------------------------------------------
                0.00    0.00  673977/673977      SampleSAT::randomWalk() [18]
[83]     0.0    0.00    0.00  673977         SatProblem::getCnjSize(int) [83]
-----------------------------------------------
                0.00    0.00  386580/386580      SatProblem::getCnj(int, int) [85]
[84]     0.0    0.00    0.00  386580         SatProblem::getCnf(int) [84]
-----------------------------------------------
                0.00    0.00  386580/386580      SampleSAT::randomWalk() [18]
[85]     0.0    0.00    0.00  386580         SatProblem::getCnj(int, int) [85]
                0.00    0.00  386580/386580      SatProblem::getCnf(int) [84]
-----------------------------------------------
                0.00    0.00  191557/191557      SampleSAT::simAnnealing() [9]
[86]     0.0    0.00    0.00  191557         SampleSAT::getTemp() [86]
-----------------------------------------------
                0.00    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[87]     0.0    0.00    0.00  100000         SatProblem::cpClVector() [87]
-----------------------------------------------
                0.00    0.00   36000/36000       SampleSAT::islearn(int, char*) [3]
[88]     0.0    0.00    0.00   36000         SatProblem::getRealProb(int) [88]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[89]     0.0    0.00    0.00    8006         Timer::time() [89]
-----------------------------------------------
                0.00    0.00    2000/2000        SampleSAT::readdata(char*, int) [164]
[90]     0.0    0.00    0.00    2000         SampleSAT::modelcheck(int) [90]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[91]     0.0    0.00    0.00    1000         SatProblem::updateTheta(double*) [91]
-----------------------------------------------
                0.00    0.00      24/52          std::allocator<std::_List_node<int> >::~allocator() [102]
                0.00    0.00      28/52          std::allocator<std::_List_node<int> >::~allocator() [94]
[92]     0.0    0.00    0.00      52         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [92]
-----------------------------------------------
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::begin() const [99]
                0.00    0.00      24/48          std::list<int, std::allocator<int> >::end() const [98]
[93]     0.0    0.00    0.00      48         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [93]
-----------------------------------------------
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [95]
[94]     0.0    0.00    0.00      28         std::allocator<std::_List_node<int> >::~allocator() [94]
                0.00    0.00      28/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [92]
-----------------------------------------------
                0.00    0.00      28/28          std::_List_base<int, std::allocator<int> >::~_List_base() [62]
[95]     0.0    0.00    0.00      28         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [95]
                0.00    0.00      28/28          std::allocator<std::_List_node<int> >::~allocator() [94]
-----------------------------------------------
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
[96]     0.0    0.00    0.00      24         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [96]
-----------------------------------------------
                0.00    0.00      24/24          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [104]
[97]     0.0    0.00    0.00      24         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [97]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
[98]     0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::end() const [98]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [93]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
[99]     0.0    0.00    0.00      24         std::list<int, std::allocator<int> >::begin() const [99]
                0.00    0.00      24/48          std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [93]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [50]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [125]
[100]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [100]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
[101]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
                0.00    0.00      24/24          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [96]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
[102]    0.0    0.00    0.00      24         std::allocator<std::_List_node<int> >::~allocator() [102]
                0.00    0.00      24/52          __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [92]
-----------------------------------------------
                0.00    0.00      24/24          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [56]
[103]    0.0    0.00    0.00      24         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [103]
                0.00    0.00      24/24          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [101]
-----------------------------------------------
                0.00    0.00      24/24          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [51]
[104]    0.0    0.00    0.00      24         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [104]
                0.00    0.00      24/24          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [97]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [68]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[105]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [105]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [124]
[106]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [106]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [121]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [111]
[107]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [107]
-----------------------------------------------
                0.00    0.00       1/11          SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
                0.00    0.00       1/11          SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [154]
                0.00    0.00       1/11          SliceSampling::calcFixed(learnparams*) [153]
                0.00    0.00       8/11          main [1]
[108]    0.0    0.00    0.00      11         SatProblem::getNumVariables() [108]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [133]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [134]
[109]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [109]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [111]
[110]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [110]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [125]
[111]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [111]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [110]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [107]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [132]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[112]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [112]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [120]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [114]
[113]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [113]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [115]
[114]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [114]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [113]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
[115]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [115]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [114]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[116]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [116]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [115]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[117]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [117]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [151]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [154]
[118]    0.0    0.00    0.00       4         Timer::Timer() [118]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [69]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [168]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [155]
[119]    0.0    0.00    0.00       4         Timer::~Timer() [119]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [112]
[120]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [120]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [128]
[121]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [121]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [107]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [126]
[122]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [122]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [127]
[123]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [123]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[124]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [124]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [106]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[125]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [125]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [100]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [111]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [136]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [129]
[126]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [126]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [122]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [130]
[127]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [127]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [123]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[128]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [128]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [121]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [131]
[129]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [129]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [126]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [132]
[130]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [130]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [127]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [135]
[131]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [131]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [129]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [68]
[132]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [132]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [112]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [130]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [50]
[133]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [133]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [109]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [48]
[134]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [134]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [109]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [151]
[135]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [135]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [125]
[136]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [136]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [153]
[137]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [137]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [151]
[138]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [138]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[139]    0.0    0.00    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [139]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [146]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[140]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [140]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[141]    0.0    0.00    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [141]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[142]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [142]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [145]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[143]    0.0    0.00    0.00       1         printlParameters(learnparams*) [143]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[144]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [144]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [142]
[145]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [145]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [139]
[146]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [146]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [141]
[147]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [140]
[148]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[149]    0.0    0.00    0.00       1         SatProblem::parseSliFile(char*) [149]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[150]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[151]    0.0    0.00    0.00       1         SatProblem::SatProblem(unsigned long, bool) [151]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [135]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [138]
                0.00    0.00       1/1           Random::Random() [157]
                0.00    0.00       1/4           Timer::Timer() [118]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [156]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [154]
[152]    0.0    0.00    0.00       1         SliceSampling::init() [152]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[153]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [153]
                0.00    0.00       1/11          SatProblem::getNumVariables() [108]
                0.00    0.00       1/2           SatProblem::getNumClauses() [137]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[154]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [154]
                0.00    0.00       1/4           Timer::Timer() [118]
                0.00    0.00       1/11          SatProblem::getNumVariables() [108]
                0.00    0.00       1/1           SliceSampling::init() [152]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[155]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [155]
                0.00    0.00       1/4           Timer::~Timer() [119]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [151]
[156]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [156]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [151]
[157]    0.0    0.00    0.00       1         Random::Random() [157]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
[158]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [158]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
[159]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [159]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
[160]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [160]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
[161]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [161]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
[162]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [162]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[163]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [163]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[164]    0.0    0.00    0.00       1         SampleSAT::readdata(char*, int) [164]
                0.00    0.00    2000/2000        SampleSAT::modelcheck(int) [90]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[165]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [165]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[166]    0.0    0.00    0.00       1         SampleSAT::lallocate(int) [166]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[167]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [167]
                0.00    0.00       1/4           Timer::Timer() [118]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [158]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [159]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [161]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [162]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [160]
                0.00    0.00       1/11          SatProblem::getNumVariables() [108]
                0.00    0.00       1/2           SatProblem::getNumClauses() [137]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[168]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [168]
                0.00    0.00       1/4           Timer::~Timer() [119]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [139] global constructors keyed to _ZN10SatProblemC2Emb [9] SampleSAT::simAnnealing() [103] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
 [140] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160] SampleSAT::setTemperature(double) [61] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [141] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [161] SampleSAT::setWalkSatProb(double) [95] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [142] global constructors keyed to cnffilename [162] SampleSAT::setRandomWalkProb(double) [24] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [143] printlParameters(learnparams*) [5] SampleSAT::walk() [30] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [144] printssParameters(samplesatparams*) [2] SampleSAT::learn(int*, char*, int, char*) [38] std::_List_base<int, std::allocator<int> >::_M_init()
 [145] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [16] std::_List_base<int, std::allocator<int> >::_M_clear()
 [146] __static_initialization_and_destruction_0(int, int) [163] SampleSAT::calcAve(learnparams*) [56] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [147] __static_initialization_and_destruction_0(int, int) [86] SampleSAT::getTemp() [58] std::_List_base<int, std::allocator<int> >::_List_base()
 [148] __static_initialization_and_destruction_0(int, int) [3] SampleSAT::islearn(int, char*) [62] std::_List_base<int, std::allocator<int> >::~_List_base()
  [87] SatProblem::cpClVector() [164] SampleSAT::readdata(char*, int) [65] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [83] SatProblem::getCnjSize(int) [165] SampleSAT::destlearn(int) [128] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
   [8] SatProblem::initParams() [166] SampleSAT::lallocate(int) [129] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [88] SatProblem::getRealProb(int) [41] SampleSAT::normalize(double*, int) [130] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [91] SatProblem::updateTheta(double*) [167] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [112] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [74] SatProblem::getClVecSize() [168] SampleSAT::~SampleSAT() [105] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [28] SatProblem::initSatCheck(int*) [46] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [131] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [43] SatProblem::parseCnfFile(char*) [76] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [132] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
 [149] SatProblem::parseSliFile(char*) [96] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [22] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
 [137] SatProblem::getNumClauses() [47] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [138] std::_List_iterator<int>::_List_iterator()
 [150] SatProblem::parseProbFile(char*) [92] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [11] std::_List_iterator<int>::operator++(int)
  [80] SatProblem::getFixedClausei(int) [120] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [93] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [108] SatProblem::getNumVariables() [121] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [113] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [84] SatProblem::getCnf(int) [122] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [53] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [85] SatProblem::getCnj(int, int) [123] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [17] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [37] SatProblem::getVar(int) [77] __gnu_cxx::new_allocator<int>::destroy(int*) [104] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [20] SatProblem::getNsc1(int*, int) [29] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [21] std::list<int, std::allocator<int> >::end()
   [6] SatProblem::getNsc2(int*, int) [45] __gnu_cxx::new_allocator<int>::new_allocator() [32] std::list<int, std::allocator<int> >::begin()
  [44] SatProblem::allocate() [34] __gnu_cxx::new_allocator<int>::~new_allocator() [14] std::list<int, std::allocator<int> >::clear()
  [79] SatProblem::getClVec(int) [109] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [13] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [31] SatProblem::getGrand() [124] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [10] std::list<int, std::allocator<int> >::push_back(int const&)
  [33] SatProblem::getTheta(int) [78] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [51] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [12] SatProblem::isSatCnj(int*, int) [107] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [59] std::list<int, std::allocator<int> >::list()
  [39] SatProblem::addNumSat(int) [106] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [63] std::list<int, std::allocator<int> >::~list()
  [15] SatProblem::afterFlip(int*, int) [19] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [48] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [82] SatProblem::getNumSat() [73] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [133] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
 [151] SatProblem::SatProblem(unsigned long, bool) [110] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [134] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [69] SatProblem::~SatProblem() [42] std::_List_iterator<int>::operator*() const [49] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
 [152] SliceSampling::init()  [25] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [50] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
 [153] SliceSampling::calcFixed(learnparams*) [97] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [135] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
 [154] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [98] std::list<int, std::allocator<int> >::end() const [68] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
 [155] SliceSampling::~SliceSampling() [99] std::list<int, std::allocator<int> >::begin() const [23] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  [89] Timer::time()          [81] std::list<int, std::allocator<int> >::empty() const [52] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [117] Timer::printTime(std::ostream&, double const&) [125] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [114] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [118] Timer::Timer()        [100] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [54] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [119] Timer::~Timer()       [111] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [115] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [36] Random::genrand()      [57] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [116] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [156] Random::sgenrand(unsigned long) [101] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [55] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [157] Random::Random()       [60] std::allocator<std::_List_node<int> >::allocator() [40] double const& std::max<double>(double const&, double const&)
   [7] SampleSAT::greedyWalk() [102] std::allocator<std::_List_node<int> >::~allocator() [136] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  [27] SampleSAT::init_model() [94] std::allocator<std::_List_node<int> >::~allocator() [66] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [90] SampleSAT::modelcheck(int) [126] std::allocator<std::list<int, std::allocator<int> > >::allocator() [67] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [18] SampleSAT::randomWalk() [127] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [64] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
 [158] SampleSAT::setWalkMax(int) [26] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [75] operator new(unsigned int, void*)
 [159] SampleSAT::setNumSample(int) [35] std::allocator<int>::~allocator()
