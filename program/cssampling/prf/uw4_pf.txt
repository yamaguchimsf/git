Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ks/call  Ks/call  name    
 27.09   2241.89  2241.89 10059907916     0.00     0.00  SatProblem::isSatCnj(int*, int)
 22.56   4108.95  1867.07 2211382033     0.00     0.00  SatProblem::getNsc2(int*, int)
 11.40   5052.71   943.76        1     0.94     7.68  SampleSAT::islearn(int, char*)
  6.31   5574.93   522.22   200000     0.00     0.00  SampleSAT::modelcheck(int)
  4.78   5970.12   395.19 17552238396     0.00     0.00  std::_List_iterator<int>::operator++(int)
  3.76   6281.60   311.48 1808285316     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  3.53   6573.85   292.25 9305854852     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  3.52   6865.27   291.42 19086154104     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  3.45   7150.47   285.19 10054668860     0.00     0.00  std::list<int, std::allocator<int> >::end()
  3.43   7434.65   284.19 19371015832     0.00     0.00  std::_List_iterator<int>::operator*() const
  1.91   7592.73   158.09 10320372672     0.00     0.00  SatProblem::getTheta(int)
  1.67   7730.82   138.09  7527011     0.00     0.00  SampleSAT::randomWalk()
  0.97   7811.48    80.66 3430196224     0.00     0.00  SatProblem::getRealProb(int)
  0.74   7872.40    60.91 4852758860     0.00     0.00  SatProblem::getClVecSize()
  0.65   7926.59    54.19 3058893152     0.00     0.00  SatProblem::getClVec(int)
  0.61   7976.77    50.19 2411325408     0.00     0.00  SatProblem::getFixedClausei(int)
  0.53   8020.73    43.95 8933485640     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.51   8062.83    42.10  7521688     0.00     0.00  SampleSAT::greedyWalk()
  0.43   8098.57    35.74      297     0.00     0.00  SatProblem::getNumVariables()
  0.42   8133.48    34.91        2     0.02     0.02  std::_List_iterator<int>::_List_iterator()
  0.41   8167.51    34.03 39600776     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.21   8184.56    17.05 28924732     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.20   8201.13    16.57   100000     0.00     0.00  SatProblem::initParams()
  0.17   8214.82    13.69 39600776     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.12   8224.87    10.05  7527011     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.05   8228.94     4.08 2262598197     0.00     0.00  SatProblem::getVar(int)
  0.05   8232.70     3.75                             SatProblem::getNumFixedClause()
  0.05   8236.45     3.75 748814008     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.03   8239.34     2.89 1497628016     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.03   8242.07     2.73 748814008     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.03   8244.30     2.23 1497629184     0.00     0.00  std::allocator<int>::~allocator()
  0.03   8246.45     2.15 101805074     0.00     0.00  Random::genrand()
  0.02   8248.44     1.99 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long)
  0.02   8250.35     1.91   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.02   8252.22     1.86 1497629184     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.02   8254.01     1.80   100000     0.00     0.00  SatProblem::cpClVector()
  0.02   8255.75     1.74 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*)
  0.02   8257.42     1.67     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.02   8258.99     1.56                             SatProblem::getClause(int)
  0.02   8260.39     1.40 748814008     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.02   8261.76     1.38 748814008     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.02   8263.11     1.35 748814008     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.02   8264.35     1.25 1497629184     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.01   8265.57     1.22 1497629184     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.01   8266.72     1.15 1497629184     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.01   8267.84     1.12 748814008     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.01   8268.65     0.81 748815176     0.00     0.00  operator new(unsigned long, void*)
  0.01   8269.39     0.74 748814008     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.01   8269.96     0.57 200100000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.01   8270.53     0.57 30097836     0.00     0.00  SampleSAT::walk()
  0.01   8271.01     0.48 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00   8271.41     0.39   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00   8271.76     0.36        1     0.00     0.52  SampleSAT::readdata(char*, int)
  0.00   8272.07     0.30 58400000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00   8272.33     0.27 66613361     0.00     0.00  SatProblem::getCnjSize(int)
  0.00   8272.60     0.27 15049137     0.00     0.00  SampleSAT::simAnnealing()
  0.00   8272.84     0.24        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00   8273.08     0.23 44032328     0.00     0.00  SatProblem::getCnj(int, int)
  0.00   8273.31     0.23   100000     0.00     0.00  SampleSAT::init_model()
  0.00   8273.51     0.20     1168     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00   8273.71     0.20     1168     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00   8273.88     0.17 39599604     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00   8274.05     0.17                             void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00   8274.20     0.15        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00   8274.32     0.12 44032328     0.00     0.00  SatProblem::getCnf(int)
  0.00   8274.44     0.12        1     0.00     8.20  SampleSAT::learn(int*, char*, int, char*)
  0.00   8274.56     0.12                             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00   8274.67     0.12        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8274.79     0.12        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00   8274.90     0.11     2340     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00   8275.00     0.10 112025836     0.00     0.00  SatProblem::getNumSat()
  0.00   8275.11     0.10 101805074     0.00     0.00  SatProblem::getGrand()
  0.00   8275.22     0.10                             SatProblem::getCnfij(int, int)
  0.00   8275.32     0.10                             operator delete(void*, void*)
  0.00   8275.41     0.09                             int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00   8275.48     0.07 28924732     0.00     0.00  SatProblem::addNumSat(int)
  0.00   8275.55     0.07        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00   8275.61     0.07        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00   8275.67     0.05 15049137     0.00     0.00  SampleSAT::getTemp()
  0.00   8275.72     0.05        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8275.76     0.04        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00   8275.77     0.01                             SatProblem::setUnitFlag()
  0.00   8275.78     0.01     2340     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00   8275.80     0.01                             SatProblem::setFixedAtomi(int, int)
  0.00   8275.80     0.01                             SatProblem::getSampleSize()
  0.00   8275.80     0.00     8006     0.00     0.00  Timer::time()
  0.00   8275.80     0.00     2336     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00   8275.80     0.00     1172     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00   8275.80     0.00     1172     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00   8275.80     0.00     1172     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00   8275.80     0.00     1172     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00   8275.80     0.00     1168     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00   8275.80     0.00     1168     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00   8275.80     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00   8275.80     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00   8275.80     0.00     1168     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00   8275.80     0.00     1168     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00   8275.80     0.00     1168     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00   8275.80     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00     1168     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00     1168     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00   8275.80     0.00     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00   8275.80     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00   8275.80     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00   8275.80     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00   8275.80     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00   8275.80     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00   8275.80     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00   8275.80     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00   8275.80     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00   8275.80     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8275.80     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8275.80     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8275.80     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8275.80     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8275.80     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00   8275.80     0.00        4     0.00     0.00  Timer::Timer()
  0.00   8275.80     0.00        4     0.00     0.00  Timer::~Timer()
  0.00   8275.80     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00   8275.80     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*)
  0.00   8275.80     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00   8275.80     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00   8275.80     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const
  0.00   8275.80     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00   8275.80     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00   8275.80     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00   8275.80     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00   8275.80     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  0.00   8275.80     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00   8275.80     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00   8275.80     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00   8275.80     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00   8275.80     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00   8275.80     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00   8275.80     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8275.80     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8275.80     0.00        4     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00   8275.80     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00   8275.80     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00   8275.80     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00   8275.80     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00   8275.80     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00   8275.80     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8275.80     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8275.80     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8275.80     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8275.80     0.00        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00   8275.80     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00   8275.80     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00   8275.80     0.00        1     0.00     0.03  SatProblem::SatProblem(unsigned long, bool)
  0.00   8275.80     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00   8275.80     0.00        1     0.00     0.00  SliceSampling::init()
  0.00   8275.80     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00   8275.80     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00   8275.80     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00   8275.80     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00   8275.80     0.00        1     0.00     0.00  Random::Random()
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00   8275.80     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 8275.80 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00 8269.71                 main [1]
                0.12 8197.79       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
               35.38    0.00     294/297         SatProblem::getNumVariables() [31]
                0.00   34.91       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
                0.00    1.03       1/1           SatProblem::parseCnfFile(char*) [56]
                0.00    0.12       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.12       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.00    0.12       1/1           SliceSampling::calcFixed(learnparams*) [80]
                0.07    0.00       1/1           SatProblem::parseSliFile(char*) [98]
                0.00    0.06       1/1           SatProblem::~SatProblem() [106]
                0.00    0.00       4/8006        Timer::time() [116]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [136]
                0.00    0.00       1/4           Timer::Timer() [137]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [167]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [162]
                0.00    0.00       1/1           printlParameters(learnparams*) [161]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [177]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [169]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [179]
                0.00    0.00       1/4           Timer::~Timer() [138]
-----------------------------------------------
                0.12 8197.79       1/1           main [1]
[2]     99.1    0.12 8197.79       1         SampleSAT::learn(int*, char*, int, char*) [2]
              943.76 6731.38       1/1           SampleSAT::islearn(int, char*) [3]
                0.36  522.22       1/1           SampleSAT::readdata(char*, int) [12]
                0.07    0.00       1/1           SampleSAT::lallocate(int) [99]
                0.00    0.00       2/8006        Timer::time() [116]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [136]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [178]
-----------------------------------------------
              943.76 6731.38       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     92.7  943.76 6731.38       1         SampleSAT::islearn(int, char*) [3]
                0.39 6490.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
              158.09    0.00 10320372672/10320372672     SatProblem::getTheta(int) [21]
               80.66    0.00 3430196224/3430196224     SatProblem::getRealProb(int) [25]
                1.67    0.57    3000/3000        SampleSAT::normalize(double*, int) [46]
                0.00    0.00  100000/101805074     SatProblem::getGrand() [45]
                0.00    0.00    8000/8006        Timer::time() [116]
                0.00    0.00    1000/1000        SatProblem::updateTheta(double*) [126]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [136]
-----------------------------------------------
                0.39 6490.00  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     78.4    0.39 6490.00  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.57 6255.56 30097836/30097836     SampleSAT::walk() [5]
               16.57  129.22  100000/100000      SatProblem::initParams() [22]
                1.91   83.44  100000/100000      SatProblem::initSatCheck(int*) [24]
                1.80    0.00  100000/100000      SatProblem::cpClVector() [51]
                0.23    0.70  100000/100000      SampleSAT::init_model() [58]
-----------------------------------------------
                0.57 6255.56 30097836/30097836     SampleSAT::solve(SatProblem*, int*) [4]
[5]     75.6    0.57 6255.56 30097836         SampleSAT::walk() [5]
               42.10 5056.45 7521688/7521688     SampleSAT::greedyWalk() [6]
              138.09  644.75 7527011/7527011     SampleSAT::randomWalk() [9]
                0.27  372.85 15049137/15049137     SampleSAT::simAnnealing() [16]
                0.05    0.95 45146535/101805074     SatProblem::getGrand() [45]
                0.06    0.00 59022568/112025836     SatProblem::getNumSat() [94]
-----------------------------------------------
               42.10 5056.45 7521688/7521688     SampleSAT::walk() [5]
[6]     61.6   42.10 5056.45 7521688         SampleSAT::greedyWalk() [6]
             1854.36 3014.46 2196332896/2211382033     SatProblem::getNsc2(int*, int) [7]
                4.43  179.19 7521688/28924732     SatProblem::afterFlip(int*, int) [10]
                3.96    0.00 2196332896/2262598197     SatProblem::getVar(int) [39]
                0.03    0.00 30427120/112025836     SatProblem::getNumSat() [94]
                0.02    0.00 7521688/28924732     SatProblem::addNumSat(int) [100]
-----------------------------------------------
               12.71   20.65 15049137/2211382033     SampleSAT::simAnnealing() [16]
             1854.36 3014.46 2196332896/2211382033     SampleSAT::greedyWalk() [6]
[7]     59.2 1867.07 3035.11 2211382033         SatProblem::getNsc2(int*, int) [7]
             1627.19    0.00 7301626234/10059907916     SatProblem::isSatCnj(int*, int) [8]
              177.81  157.31 6268911416/10054668860     std::list<int, std::allocator<int> >::end() [11]
              328.80    0.00 14603252468/17552238396     std::_List_iterator<int>::operator++(int) [15]
              230.77    0.00 15114439548/19086154104     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
              214.24    0.00 14603252468/19371015832     std::_List_iterator<int>::operator*() const [20]
              196.87    0.00 6268911416/9305854852     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               43.52   58.59 8845528132/8933485640     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               83.44    0.00 374400000/10059907916     SatProblem::initSatCheck(int*) [24]
              125.94    0.00 565104246/10059907916     SatProblem::getNsc1(int*, int) [14]
              405.32    0.00 1818777436/10059907916     SatProblem::afterFlip(int*, int) [10]
             1627.19    0.00 7301626234/10059907916     SatProblem::getNsc2(int*, int) [7]
[8]     27.1 2241.89    0.00 10059907916         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
              138.09  644.75 7527011/7527011     SampleSAT::walk() [5]
[9]      9.5  138.09  644.75 7527011         SampleSAT::randomWalk() [9]
               10.05  468.71 7527011/7527011     SatProblem::getNsc1(int*, int) [14]
               60.91    0.00 4852758860/4852758860     SatProblem::getClVecSize() [26]
               54.19    0.00 3058893152/3058893152     SatProblem::getClVec(int) [29]
               50.19    0.00 2411325408/2411325408     SatProblem::getFixedClausei(int) [30]
                0.23    0.12 44032328/44032328     SatProblem::getCnj(int, int) [73]
                0.27    0.00 66613361/66613361     SatProblem::getCnjSize(int) [75]
                0.04    0.00 22016164/2262598197     SatProblem::getVar(int) [39]
                0.02    0.00 7527011/28924732     SatProblem::addNumSat(int) [100]
                0.01    0.00 7527011/112025836     SatProblem::getNumSat() [94]
-----------------------------------------------
                4.43  179.19 7521688/28924732     SampleSAT::greedyWalk() [6]
                4.44  179.32 7527011/28924732     SatProblem::getNsc1(int*, int) [14]
                8.18  330.58 13876033/28924732     SampleSAT::simAnnealing() [16]
[10]     8.5   17.05  689.10 28924732         SatProblem::afterFlip(int*, int) [10]
              405.32    0.00 1818777436/10059907916     SatProblem::isSatCnj(int*, int) [8]
               53.23   47.09 1876626900/10054668860     std::list<int, std::allocator<int> >::end() [11]
               58.94    0.00 1876626900/9305854852     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               53.37    0.00 3637554872/19371015832     std::_List_iterator<int>::operator*() const [20]
               40.95    0.00 1818777436/17552238396     std::_List_iterator<int>::operator++(int) [15]
               29.54    0.00 1934476364/19086154104     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
                0.28    0.38 57849464/8933485640     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               21.24   18.79 748814008/10054668860     std::list<int, std::allocator<int> >::push_back(int const&) [27]
               32.91   29.12 1160316536/10054668860     SatProblem::getNsc1(int*, int) [14]
               53.23   47.09 1876626900/10054668860     SatProblem::afterFlip(int*, int) [10]
              177.81  157.31 6268911416/10054668860     SatProblem::getNsc2(int*, int) [7]
[11]     6.5  285.19  252.30 10054668860         std::list<int, std::allocator<int> >::end() [11]
              252.30    0.00 1464734268/1808285316     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [17]
-----------------------------------------------
                0.36  522.22       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[12]     6.3    0.36  522.22       1         SampleSAT::readdata(char*, int) [12]
              522.22    0.00  200000/200000      SampleSAT::modelcheck(int) [13]
-----------------------------------------------
              522.22    0.00  200000/200000      SampleSAT::readdata(char*, int) [12]
[13]     6.3  522.22    0.00  200000         SampleSAT::modelcheck(int) [13]
-----------------------------------------------
               10.05  468.71 7527011/7527011     SampleSAT::randomWalk() [9]
[14]     5.8   10.05  468.71 7527011         SatProblem::getNsc1(int*, int) [14]
                4.44  179.32 7527011/28924732     SatProblem::afterFlip(int*, int) [10]
              125.94    0.00 565104246/10059907916     SatProblem::isSatCnj(int*, int) [8]
               32.91   29.12 1160316536/10054668860     std::list<int, std::allocator<int> >::end() [11]
               36.44    0.00 1160316536/9305854852     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               25.45    0.00 1130208492/17552238396     std::_List_iterator<int>::operator++(int) [15]
               18.18    0.00 1190424580/19086154104     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
               16.58    0.00 1130208492/19371015832     std::_List_iterator<int>::operator*() const [20]
                0.15    0.20 30108044/8933485640     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               25.45    0.00 1130208492/17552238396     SatProblem::getNsc1(int*, int) [14]
               40.95    0.00 1818777436/17552238396     SatProblem::afterFlip(int*, int) [10]
              328.80    0.00 14603252468/17552238396     SatProblem::getNsc2(int*, int) [7]
[15]     4.8  395.19    0.00 17552238396         std::_List_iterator<int>::operator++(int) [15]
-----------------------------------------------
                0.27  372.85 15049137/15049137     SampleSAT::walk() [5]
[16]     4.5    0.27  372.85 15049137         SampleSAT::simAnnealing() [16]
                8.18  330.58 13876033/28924732     SatProblem::afterFlip(int*, int) [10]
               12.71   20.65 15049137/2211382033     SatProblem::getNsc2(int*, int) [7]
                0.03    0.58 27358539/101805074     SatProblem::getGrand() [45]
                0.05    0.00 15049137/15049137     SampleSAT::getTemp() [107]
                0.03    0.00 13876033/28924732     SatProblem::addNumSat(int) [100]
                0.03    0.00 15049137/2262598197     SatProblem::getVar(int) [39]
                0.01    0.00 15049137/112025836     SatProblem::getNumSat() [94]
-----------------------------------------------
               59.18    0.00 343551048/1808285316     std::list<int, std::allocator<int> >::begin() [23]
              252.30    0.00 1464734268/1808285316     std::list<int, std::allocator<int> >::end() [11]
[17]     3.8  311.48    0.00 1808285316         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [17]
-----------------------------------------------
               36.44    0.00 1160316536/9305854852     SatProblem::getNsc1(int*, int) [14]
               58.94    0.00 1876626900/9305854852     SatProblem::afterFlip(int*, int) [10]
              196.87    0.00 6268911416/9305854852     SatProblem::getNsc2(int*, int) [7]
[18]     3.5  292.25    0.00 9305854852         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
-----------------------------------------------
                0.00    0.00   14008/19086154104     SatProblem::parseCnfFile(char*) [56]
               12.93    0.00 846799604/19086154104     SatProblem::initParams() [22]
               18.18    0.00 1190424580/19086154104     SatProblem::getNsc1(int*, int) [14]
               29.54    0.00 1934476364/19086154104     SatProblem::afterFlip(int*, int) [10]
              230.77    0.00 15114439548/19086154104     SatProblem::getNsc2(int*, int) [7]
[19]     3.5  291.41    0.00 19086154104         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
-----------------------------------------------
               16.58    0.00 1130208492/19371015832     SatProblem::getNsc1(int*, int) [14]
               53.37    0.00 3637554872/19371015832     SatProblem::afterFlip(int*, int) [10]
              214.24    0.00 14603252468/19371015832     SatProblem::getNsc2(int*, int) [7]
[20]     3.4  284.19    0.00 19371015832         std::_List_iterator<int>::operator*() const [20]
-----------------------------------------------
              158.09    0.00 10320372672/10320372672     SampleSAT::islearn(int, char*) [3]
[21]     1.9  158.09    0.00 10320372672         SatProblem::getTheta(int) [21]
-----------------------------------------------
               16.57  129.22  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[22]     1.8   16.57  129.22  100000         SatProblem::initParams() [22]
                1.35   57.36 748800000/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [27]
                0.17   57.12 39599604/39599604     std::list<int, std::allocator<int> >::clear() [28]
               12.93    0.00 846799604/19086154104     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
                0.30    0.00 58400000/58400000     std::list<int, std::allocator<int> >::empty() const [74]
-----------------------------------------------
                0.15    0.20 30108044/8933485640     SatProblem::getNsc1(int*, int) [14]
                0.28    0.38 57849464/8933485640     SatProblem::afterFlip(int*, int) [10]
               43.52   58.59 8845528132/8933485640     SatProblem::getNsc2(int*, int) [7]
[23]     1.2   43.95   59.18 8933485640         std::list<int, std::allocator<int> >::begin() [23]
               59.18    0.00 343551048/1808285316     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [17]
-----------------------------------------------
                1.91   83.44  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[24]     1.0    1.91   83.44  100000         SatProblem::initSatCheck(int*) [24]
               83.44    0.00 374400000/10059907916     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
               80.66    0.00 3430196224/3430196224     SampleSAT::islearn(int, char*) [3]
[25]     1.0   80.66    0.00 3430196224         SatProblem::getRealProb(int) [25]
-----------------------------------------------
               60.91    0.00 4852758860/4852758860     SampleSAT::randomWalk() [9]
[26]     0.7   60.91    0.00 4852758860         SatProblem::getClVecSize() [26]
-----------------------------------------------
                0.00    0.00   14008/748814008     SatProblem::parseCnfFile(char*) [56]
                1.35   57.36 748800000/748814008     SatProblem::initParams() [22]
[27]     0.7    1.35   57.36 748814008         std::list<int, std::allocator<int> >::push_back(int const&) [27]
               21.24   18.79 748814008/10054668860     std::list<int, std::allocator<int> >::end() [11]
                3.75   13.58 748814008/748814008     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
-----------------------------------------------
                0.17   57.12 39599604/39599604     SatProblem::initParams() [22]
[28]     0.7    0.17   57.12 39599604         std::list<int, std::allocator<int> >::clear() [28]
               34.03    0.00 39599604/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [34]
               13.68    9.40 39599604/39600776     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
               54.19    0.00 3058893152/3058893152     SampleSAT::randomWalk() [9]
[29]     0.7   54.19    0.00 3058893152         SatProblem::getClVec(int) [29]
-----------------------------------------------
               50.19    0.00 2411325408/2411325408     SampleSAT::randomWalk() [9]
[30]     0.6   50.19    0.00 2411325408         SatProblem::getFixedClausei(int) [30]
-----------------------------------------------
                0.12    0.00       1/297         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.12    0.00       1/297         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.12    0.00       1/297         SliceSampling::calcFixed(learnparams*) [80]
               35.38    0.00     294/297         main [1]
[31]     0.4   35.74    0.00     297         SatProblem::getNumVariables() [31]
-----------------------------------------------
               34.91    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [33]
[32]     0.4   34.91    0.00       2         std::_List_iterator<int>::_List_iterator() [32]
-----------------------------------------------
                0.00   34.91       1/1           main [1]
[33]     0.4    0.00   34.91       1         SatProblem::SatProblem(unsigned long, bool) [33]
               34.91    0.00       2/2           std::_List_iterator<int>::_List_iterator() [32]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [156]
                0.00    0.00       1/1           Random::Random() [171]
                0.00    0.00       1/4           Timer::Timer() [137]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [170]
-----------------------------------------------
                0.00    0.00       4/39600776     std::_List_base<int, std::allocator<int> >::_List_base() [79]
                0.00    0.00    1168/39600776     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
               34.03    0.00 39599604/39600776     std::list<int, std::allocator<int> >::clear() [28]
[34]     0.4   34.03    0.00 39600776         std::_List_base<int, std::allocator<int> >::_M_init() [34]
-----------------------------------------------
                0.00    0.00    1172/39600776     std::_List_base<int, std::allocator<int> >::~_List_base() [101]
               13.68    9.40 39599604/39600776     std::list<int, std::allocator<int> >::clear() [28]
[35]     0.3   13.69    9.40 39600776         std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                1.45    2.13 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                1.38    1.99 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [42]
                1.11    0.61 748814008/1497629184     std::allocator<int>::~allocator() [41]
                0.74    0.00 748814008/748814008     __gnu_cxx::new_allocator<int>::destroy(int*) [60]
-----------------------------------------------
                3.75   13.58 748814008/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [27]
[36]     0.2    3.75   13.58 748814008         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
                2.73   10.85 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
-----------------------------------------------
                2.73   10.85 748814008/748814008     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
[37]     0.2    2.73   10.85 748814008         std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
                1.45    2.13 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                1.12    2.23 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_get_node() [43]
                1.40    0.80 748814008/748814008     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [48]
                1.11    0.61 748814008/1497629184     std::allocator<int>::~allocator() [41]
-----------------------------------------------
                1.45    2.13 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                1.45    2.13 748814008/1497628016     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[38]     0.1    2.89    4.26 1497628016         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                1.86    1.15 1497628016/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                1.24    0.00 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
-----------------------------------------------
                0.03    0.00 15049137/2262598197     SampleSAT::simAnnealing() [16]
                0.04    0.00 22016164/2262598197     SampleSAT::randomWalk() [9]
                0.05    0.00 29200000/2262598197     SampleSAT::init_model() [58]
                3.96    0.00 2196332896/2262598197     SampleSAT::greedyWalk() [6]
[39]     0.0    4.08    0.00 2262598197         SatProblem::getVar(int) [39]
-----------------------------------------------
                                                 <spontaneous>
[40]     0.0    3.75    0.00                 SatProblem::getNumFixedClause() [40]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                1.11    0.61 748814008/1497629184     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                1.11    0.61 748814008/1497629184     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[41]     0.0    2.23    1.22 1497629184         std::allocator<int>::~allocator() [41]
                1.22    0.00 1497629184/1497629184     __gnu_cxx::new_allocator<int>::~new_allocator() [54]
-----------------------------------------------
                1.38    1.99 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[42]     0.0    1.38    1.99 748814008         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [42]
                1.99    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [50]
-----------------------------------------------
                1.12    2.23 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[43]     0.0    1.12    2.23 748814008         std::_List_base<int, std::allocator<int> >::_M_get_node() [43]
                1.74    0.48 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                1.86    1.15 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[44]     0.0    1.86    1.15 1497629184         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                1.15    0.00 1497629184/1497629184     __gnu_cxx::new_allocator<int>::new_allocator() [55]
-----------------------------------------------
                0.00    0.00  100000/101805074     SampleSAT::islearn(int, char*) [3]
                0.03    0.58 27358539/101805074     SampleSAT::simAnnealing() [16]
                0.03    0.62 29200000/101805074     SampleSAT::init_model() [58]
                0.05    0.95 45146535/101805074     SampleSAT::walk() [5]
[45]     0.0    0.10    2.15 101805074         SatProblem::getGrand() [45]
                2.15    0.00 101805074/101805074     Random::genrand() [49]
-----------------------------------------------
                1.67    0.57    3000/3000        SampleSAT::islearn(int, char*) [3]
[46]     0.0    1.67    0.57    3000         SampleSAT::normalize(double*, int) [46]
                0.57    0.00 200100000/200100000     double const& std::max<double>(double const&, double const&) [64]
-----------------------------------------------
                1.74    0.48 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_get_node() [43]
[47]     0.0    1.74    0.48 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
                0.48    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [65]
-----------------------------------------------
                1.40    0.80 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[48]     0.0    1.40    0.80 748814008         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [48]
                0.80    0.00 748814008/748815176     operator new(unsigned long, void*) [59]
-----------------------------------------------
                2.15    0.00 101805074/101805074     SatProblem::getGrand() [45]
[49]     0.0    2.15    0.00 101805074         Random::genrand() [49]
-----------------------------------------------
                1.99    0.00 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [42]
[50]     0.0    1.99    0.00 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [50]
-----------------------------------------------
                1.80    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[51]     0.0    1.80    0.00  100000         SatProblem::cpClVector() [51]
-----------------------------------------------
                                                 <spontaneous>
[52]     0.0    1.56    0.00                 SatProblem::getClause(int) [52]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                1.24    0.00 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[53]     0.0    1.25    0.00 1497629184         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
-----------------------------------------------
                1.22    0.00 1497629184/1497629184     std::allocator<int>::~allocator() [41]
[54]     0.0    1.22    0.00 1497629184         __gnu_cxx::new_allocator<int>::~new_allocator() [54]
-----------------------------------------------
                1.15    0.00 1497629184/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
[55]     0.0    1.15    0.00 1497629184         __gnu_cxx::new_allocator<int>::new_allocator() [55]
-----------------------------------------------
                0.00    1.03       1/1           main [1]
[56]     0.0    0.00    1.03       1         SatProblem::parseCnfFile(char*) [56]
                0.00    1.03       1/1           SatProblem::allocate() [57]
                0.00    0.00   14008/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [27]
                0.00    0.00   14008/19086154104     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
-----------------------------------------------
                0.00    1.03       1/1           SatProblem::parseCnfFile(char*) [56]
[57]     0.0    0.00    1.03       1         SatProblem::allocate() [57]
                0.00    0.64       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.24    0.15       4/4           std::list<int, std::allocator<int> >::list() [72]
                0.00    0.00       4/1172        std::list<int, std::allocator<int> >::~list() [102]
-----------------------------------------------
                0.23    0.70  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[58]     0.0    0.23    0.70  100000         SampleSAT::init_model() [58]
                0.03    0.62 29200000/101805074     SatProblem::getGrand() [45]
                0.05    0.00 29200000/2262598197     SatProblem::getVar(int) [39]
-----------------------------------------------
                0.00    0.00    1168/748815176     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
                0.80    0.00 748814008/748815176     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [48]
[59]     0.0    0.81    0.00 748815176         operator new(unsigned long, void*) [59]
-----------------------------------------------
                0.74    0.00 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[60]     0.0    0.74    0.00 748814008         __gnu_cxx::new_allocator<int>::destroy(int*) [60]
-----------------------------------------------
                0.00    0.64       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
[61]     0.0    0.00    0.64       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
                0.00    0.47       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.12       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [88]
                0.00    0.06       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [128]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [129]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [144]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [155]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [143]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [149]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [134]
-----------------------------------------------
                0.00    0.64       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
[62]     0.0    0.00    0.64       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
                0.00    0.64       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
-----------------------------------------------
                0.00    0.64       4/4           SatProblem::allocate() [57]
[63]     0.0    0.00    0.64       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.00    0.64       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [127]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [154]
-----------------------------------------------
                0.57    0.00 200100000/200100000     SampleSAT::normalize(double*, int) [46]
[64]     0.0    0.57    0.00 200100000         double const& std::max<double>(double const&, double const&) [64]
-----------------------------------------------
                0.48    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
[65]     0.0    0.48    0.00 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [65]
-----------------------------------------------
                0.00    0.47    1168/1168        void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
[66]     0.0    0.00    0.47    1168         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
                0.00    0.47    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                0.00    0.00    1168/748815176     operator new(unsigned long, void*) [59]
-----------------------------------------------
                0.00    0.47       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
[67]     0.0    0.00    0.47       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
                0.00    0.47    1168/1168        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
-----------------------------------------------
                0.00    0.47       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
[68]     0.0    0.00    0.47       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
                0.00    0.47       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
-----------------------------------------------
                0.00    0.47       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[69]     0.0    0.00    0.47       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.47       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
-----------------------------------------------
                0.00    0.47    1168/1168        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
[70]     0.0    0.00    0.47    1168         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                0.20    0.26    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.00    0.00    1168/1497629184     std::allocator<int>::~allocator() [41]
                0.00    0.00    1168/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.00    0.00    1168/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [53]
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::end() const [121]
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::begin() const [122]
                0.00    0.00    1168/1168        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [125]
-----------------------------------------------
                0.20    0.26    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[71]     0.0    0.20    0.26    1168         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.20    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [76]
                0.00    0.05    1168/2340        std::allocator<std::_List_node<int> >::~allocator() [84]
                0.00    0.00    1168/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [34]
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [124]
-----------------------------------------------
                0.24    0.15       4/4           SatProblem::allocate() [57]
[72]     0.0    0.24    0.15       4         std::list<int, std::allocator<int> >::list() [72]
                0.15    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [79]
-----------------------------------------------
                0.23    0.12 44032328/44032328     SampleSAT::randomWalk() [9]
[73]     0.0    0.23    0.12 44032328         SatProblem::getCnj(int, int) [73]
                0.12    0.00 44032328/44032328     SatProblem::getCnf(int) [83]
-----------------------------------------------
                0.30    0.00 58400000/58400000     SatProblem::initParams() [22]
[74]     0.0    0.30    0.00 58400000         std::list<int, std::allocator<int> >::empty() const [74]
-----------------------------------------------
                0.27    0.00 66613361/66613361     SampleSAT::randomWalk() [9]
[75]     0.0    0.27    0.00 66613361         SatProblem::getCnjSize(int) [75]
-----------------------------------------------
                0.20    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
[76]     0.0    0.20    0.00    1168         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [76]
                0.00    0.00    1168/1172        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [118]
-----------------------------------------------
                                                 <spontaneous>
[77]     0.0    0.17    0.00                 void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [77]
-----------------------------------------------
                                                 <spontaneous>
[78]     0.0    0.00    0.16                 __do_global_ctors_aux [78]
                0.12    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [89]
                0.04    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
                0.00    0.00       1/1           global constructors keyed to cnffilename [160]
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [159]
-----------------------------------------------
                0.15    0.00       4/4           std::list<int, std::allocator<int> >::list() [72]
[79]     0.0    0.15    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [79]
                0.00    0.00       4/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [34]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [148]
-----------------------------------------------
                0.00    0.12       1/1           main [1]
[80]     0.0    0.00    0.12       1         SliceSampling::calcFixed(learnparams*) [80]
                0.12    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/2           SatProblem::getNumClauses() [158]
-----------------------------------------------
                0.00    0.12       1/1           main [1]
[81]     0.0    0.00    0.12       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.12    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [137]
                0.00    0.00       1/1           SliceSampling::init() [168]
-----------------------------------------------
                0.00    0.12       1/1           main [1]
[82]     0.0    0.00    0.12       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.12    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [137]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [172]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [173]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [175]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [176]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [174]
                0.00    0.00       1/2           SatProblem::getNumClauses() [158]
-----------------------------------------------
                0.12    0.00 44032328/44032328     SatProblem::getCnj(int, int) [73]
[83]     0.0    0.12    0.00 44032328         SatProblem::getCnf(int) [83]
-----------------------------------------------
                0.00    0.05    1168/2340        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.01    0.06    1172/2340        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
[84]     0.0    0.01    0.11    2340         std::allocator<std::_List_node<int> >::~allocator() [84]
                0.11    0.00    2340/2340        __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [93]
-----------------------------------------------
                                                 <spontaneous>
[85]     0.0    0.12    0.00                 std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [85]
-----------------------------------------------
                0.12    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [87]
[86]     0.0    0.12    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [135]
-----------------------------------------------
                0.00    0.12       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [88]
[87]     0.0    0.00    0.12       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [87]
                0.12    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
-----------------------------------------------
                0.00    0.12       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[88]     0.0    0.00    0.12       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [88]
                0.00    0.12       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [87]
-----------------------------------------------
                0.12    0.00       1/1           __do_global_ctors_aux [78]
[89]     0.0    0.12    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [89]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.05    0.06       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
[90]     0.0    0.05    0.06       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [90]
                0.00    0.06    1168/1168        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
-----------------------------------------------
                0.00    0.11       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
[91]     0.0    0.00    0.11       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
                0.05    0.06       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [90]
-----------------------------------------------
                0.00    0.06       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [105]
                0.00    0.06       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[92]     0.0    0.00    0.11       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
                0.00    0.11       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
-----------------------------------------------
                0.11    0.00    2340/2340        std::allocator<std::_List_node<int> >::~allocator() [84]
[93]     0.0    0.11    0.00    2340         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [93]
-----------------------------------------------
                0.01    0.00 7527011/112025836     SampleSAT::randomWalk() [9]
                0.01    0.00 15049137/112025836     SampleSAT::simAnnealing() [16]
                0.03    0.00 30427120/112025836     SampleSAT::greedyWalk() [6]
                0.06    0.00 59022568/112025836     SampleSAT::walk() [5]
[94]     0.0    0.10    0.00 112025836         SatProblem::getNumSat() [94]
-----------------------------------------------
                                                 <spontaneous>
[95]     0.0    0.10    0.00                 SatProblem::getCnfij(int, int) [95]
-----------------------------------------------
                                                 <spontaneous>
[96]     0.0    0.10    0.00                 operator delete(void*, void*) [96]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.0    0.09    0.00                 int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [97]
-----------------------------------------------
                0.07    0.00       1/1           main [1]
[98]     0.0    0.07    0.00       1         SatProblem::parseSliFile(char*) [98]
-----------------------------------------------
                0.07    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[99]     0.0    0.07    0.00       1         SampleSAT::lallocate(int) [99]
-----------------------------------------------
                0.02    0.00 7521688/28924732     SampleSAT::greedyWalk() [6]
                0.02    0.00 7527011/28924732     SampleSAT::randomWalk() [9]
                0.03    0.00 13876033/28924732     SampleSAT::simAnnealing() [16]
[100]    0.0    0.07    0.00 28924732         SatProblem::addNumSat(int) [100]
-----------------------------------------------
                0.00    0.06    1172/1172        std::list<int, std::allocator<int> >::~list() [102]
[101]    0.0    0.00    0.06    1172         std::_List_base<int, std::allocator<int> >::~_List_base() [101]
                0.00    0.06    1172/1172        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
                0.00    0.00    1172/39600776     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
                0.00    0.00       4/1172        SatProblem::allocate() [57]
                0.00    0.06    1168/1172        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
[102]    0.0    0.00    0.06    1172         std::list<int, std::allocator<int> >::~list() [102]
                0.00    0.06    1172/1172        std::_List_base<int, std::allocator<int> >::~_List_base() [101]
-----------------------------------------------
                0.00    0.06    1168/1168        void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [90]
[103]    0.0    0.00    0.06    1168         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
                0.00    0.06    1168/1172        std::list<int, std::allocator<int> >::~list() [102]
-----------------------------------------------
                0.00    0.06    1172/1172        std::_List_base<int, std::allocator<int> >::~_List_base() [101]
[104]    0.0    0.00    0.06    1172         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
                0.01    0.06    1172/2340        std::allocator<std::_List_node<int> >::~allocator() [84]
-----------------------------------------------
                0.00    0.06       4/4           SatProblem::~SatProblem() [106]
[105]    0.0    0.00    0.06       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [105]
                0.00    0.06       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [128]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [153]
-----------------------------------------------
                0.00    0.06       1/1           main [1]
[106]    0.0    0.00    0.06       1         SatProblem::~SatProblem() [106]
                0.00    0.06       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [105]
                0.00    0.00       1/4           Timer::~Timer() [138]
-----------------------------------------------
                0.05    0.00 15049137/15049137     SampleSAT::simAnnealing() [16]
[107]    0.0    0.05    0.00 15049137         SampleSAT::getTemp() [107]
-----------------------------------------------
                0.04    0.00       1/1           __do_global_ctors_aux [78]
[108]    0.0    0.04    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                                                 <spontaneous>
[109]    0.0    0.01    0.00                 SatProblem::setUnitFlag() [109]
-----------------------------------------------
                                                 <spontaneous>
[110]    0.0    0.01    0.00                 SatProblem::setFixedAtomi(int, int) [110]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.0    0.01    0.00                 SatProblem::getSampleSize() [111]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[116]    0.0    0.00    0.00    8006         Timer::time() [116]
-----------------------------------------------
                0.00    0.00    1168/2336        std::list<int, std::allocator<int> >::begin() const [122]
                0.00    0.00    1168/2336        std::list<int, std::allocator<int> >::end() const [121]
[117]    0.0    0.00    0.00    2336         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [117]
-----------------------------------------------
                0.00    0.00       4/1172        std::allocator<std::_List_node<int> >::allocator() [145]
                0.00    0.00    1168/1172        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [76]
[118]    0.0    0.00    0.00    1172         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [118]
-----------------------------------------------
                0.00    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [123]
[119]    0.0    0.00    0.00    1168         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [119]
-----------------------------------------------
                0.00    0.00    1168/1168        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [125]
[120]    0.0    0.00    0.00    1168         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [120]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[121]    0.0    0.00    0.00    1168         std::list<int, std::allocator<int> >::end() const [121]
                0.00    0.00    1168/2336        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [117]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[122]    0.0    0.00    0.00    1168         std::list<int, std::allocator<int> >::begin() const [122]
                0.00    0.00    1168/2336        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [117]
-----------------------------------------------
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [124]
[123]    0.0    0.00    0.00    1168         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [123]
                0.00    0.00    1168/1168        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [119]
-----------------------------------------------
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
[124]    0.0    0.00    0.00    1168         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [124]
                0.00    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [123]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[125]    0.0    0.00    0.00    1168         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [125]
                0.00    0.00    1168/1168        std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [120]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[126]    0.0    0.00    0.00    1000         SatProblem::updateTheta(double*) [126]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [144]
[127]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [127]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [105]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[128]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [128]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [143]
[129]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [129]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [140]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
[130]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [130]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [154]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [155]
[131]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
[132]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [132]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [144]
[133]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [130]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [132]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [153]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[134]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [134]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [139]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
[135]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [135]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[136]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [136]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [33]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
[137]    0.0    0.00    0.00       4         Timer::Timer() [137]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [106]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [179]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [169]
[138]    0.0    0.00    0.00       4         Timer::~Timer() [138]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [134]
[139]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [139]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [149]
[140]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [140]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [130]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [146]
[141]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [141]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [147]
[142]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[143]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [143]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [129]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[144]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [144]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [127]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
                0.00    0.00       4/4           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [157]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [148]
[145]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [145]
                0.00    0.00       4/1172        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [118]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [150]
[146]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [146]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [141]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [151]
[147]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [147]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [79]
[148]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [148]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [145]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[149]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [149]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [140]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [152]
[150]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [150]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [146]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [153]
[151]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [151]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [147]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [156]
[152]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [152]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [150]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [105]
[153]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [153]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [151]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [134]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
[154]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [154]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[155]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [155]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [33]
[156]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [156]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [152]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [144]
[157]    0.0    0.00    0.00       4         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [157]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [80]
[158]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [158]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [78]
[159]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [159]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [78]
[160]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [160]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [163]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[161]    0.0    0.00    0.00       1         printlParameters(learnparams*) [161]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[162]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [162]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [160]
[163]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [163]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [89]
[164]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
[165]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [159]
[166]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[167]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [167]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
[168]    0.0    0.00    0.00       1         SliceSampling::init() [168]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[169]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [169]
                0.00    0.00       1/4           Timer::~Timer() [138]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
[170]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [170]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
[171]    0.0    0.00    0.00       1         Random::Random() [171]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[172]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [172]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[173]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [173]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[174]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [174]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[175]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [175]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[176]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [176]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[177]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [177]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[178]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [178]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[179]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [179]
                0.00    0.00       1/4           Timer::~Timer() [138]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [89] global constructors keyed to _ZN10SatProblemC2Emb [9] SampleSAT::randomWalk() [148] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [159] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [172] SampleSAT::setWalkMax(int) [104] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [108] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [173] SampleSAT::setNumSample(int) [43] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [160] global constructors keyed to cnffilename [16] SampleSAT::simAnnealing() [42] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [161] printlParameters(learnparams*) [174] SampleSAT::setTemperature(double) [34] std::_List_base<int, std::allocator<int> >::_M_init()
 [162] printssParameters(samplesatparams*) [175] SampleSAT::setWalkSatProb(double) [35] std::_List_base<int, std::allocator<int> >::_M_clear()
 [163] __static_initialization_and_destruction_0(int, int) [176] SampleSAT::setRandomWalkProb(double) [71] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [164] __static_initialization_and_destruction_0(int, int) [5] SampleSAT::walk() [79] std::_List_base<int, std::allocator<int> >::_List_base()
 [165] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int, char*) [101] std::_List_base<int, std::allocator<int> >::~_List_base()
 [166] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [90] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [51] SatProblem::cpClVector() [177] SampleSAT::calcAve(learnparams*) [149] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  [75] SatProblem::getCnjSize(int) [107] SampleSAT::getTemp() [150] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [22] SatProblem::initParams() [3] SampleSAT::islearn(int, char*) [151] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [25] SatProblem::getRealProb(int) [12] SampleSAT::readdata(char*, int) [134] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
 [109] SatProblem::setUnitFlag() [178] SampleSAT::destlearn(int) [128] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
 [126] SatProblem::updateTheta(double*) [99] SampleSAT::lallocate(int) [152] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [26] SatProblem::getClVecSize() [46] SampleSAT::normalize(double*, int) [153] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [24] SatProblem::initSatCheck(int*) [82] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [17] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [56] SatProblem::parseCnfFile(char*) [179] SampleSAT::~SampleSAT() [32] std::_List_iterator<int>::_List_iterator()
  [98] SatProblem::parseSliFile(char*) [50] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [15] std::_List_iterator<int>::operator++(int)
 [158] SatProblem::getNumClauses() [47] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [117] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [111] SatProblem::getSampleSize() [118] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [135] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [167] SatProblem::parseProbFile(char*) [119] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [67] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
 [110] SatProblem::setFixedAtomi(int, int) [93] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [37] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [30] SatProblem::getFixedClausei(int) [139] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [125] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [31] SatProblem::getNumVariables() [140] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [11] std::list<int, std::allocator<int> >::end()
  [40] SatProblem::getNumFixedClause() [141] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [23] std::list<int, std::allocator<int> >::begin()
  [83] SatProblem::getCnf(int) [142] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [28] std::list<int, std::allocator<int> >::clear()
  [73] SatProblem::getCnj(int, int) [60] __gnu_cxx::new_allocator<int>::destroy(int*) [36] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [39] SatProblem::getVar(int) [48] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [27] std::list<int, std::allocator<int> >::push_back(int const&)
  [14] SatProblem::getNsc1(int*, int) [55] __gnu_cxx::new_allocator<int>::new_allocator() [70] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
   [7] SatProblem::getNsc2(int*, int) [54] __gnu_cxx::new_allocator<int>::~new_allocator() [72] std::list<int, std::allocator<int> >::list()
  [57] SatProblem::allocate() [131] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [102] std::list<int, std::allocator<int> >::~list()
  [29] SatProblem::getClVec(int) [143] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [61] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  [95] SatProblem::getCnfij(int, int) [65] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [154] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [45] SatProblem::getGrand() [130] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [155] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [21] SatProblem::getTheta(int) [129] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [62] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
   [8] SatProblem::isSatCnj(int*, int) [38] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [63] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
 [100] SatProblem::addNumSat(int) [53] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [156] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  [10] SatProblem::afterFlip(int*, int) [132] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [105] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [52] SatProblem::getClause(int) [20] std::_List_iterator<int>::operator*() const [19] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  [94] SatProblem::getNumSat() [18] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [85] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [33] SatProblem::SatProblem(unsigned long, bool) [120] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [66] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [106] SatProblem::~SatProblem() [121] std::list<int, std::allocator<int> >::end() const [86] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [168] SliceSampling::init() [122] std::list<int, std::allocator<int> >::begin() const [97] int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  [80] SliceSampling::calcFixed(learnparams*) [74] std::list<int, std::allocator<int> >::empty() const [68] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  [81] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [144] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [87] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [169] SliceSampling::~SliceSampling() [127] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [88] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [116] Timer::time()         [133] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [69] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [136] Timer::printTime(std::ostream&, double const&) [123] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [64] double const& std::max<double>(double const&, double const&)
 [137] Timer::Timer()        [145] std::allocator<std::_List_node<int> >::allocator() [157] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [138] Timer::~Timer()        [76] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [91] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [49] Random::genrand()      [84] std::allocator<std::_List_node<int> >::~allocator() [92] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [170] Random::sgenrand(unsigned long) [146] std::allocator<std::list<int, std::allocator<int> > >::allocator() [77] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [171] Random::Random()      [147] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [103] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
   [6] SampleSAT::greedyWalk() [44] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [96] operator delete(void*, void*)
  [58] SampleSAT::init_model() [41] std::allocator<int>::~allocator() [59] operator new(unsigned long, void*)
  [13] SampleSAT::modelcheck(int) [124] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
