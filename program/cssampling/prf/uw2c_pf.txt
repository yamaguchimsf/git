Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ks/call  Ks/call  name    
 21.17    520.12   520.12 6450910835     0.00     0.00  SatProblem::isSatCnj(int*, int)
 18.59    976.87   456.75   200000     0.00     0.00  SampleSAT::modelcheck(int)
 17.56   1408.39   431.52 894102962     0.00     0.00  SatProblem::getNsc2(int*, int)
 14.98   1776.34   367.94        1     0.37     2.00  SampleSAT::islearn(int, char*)
 11.30   2054.01   277.67 11820253930     0.00     0.00  std::_List_iterator<int>::operator++(int)
  2.86   2124.24    70.23 15726612640     0.00     0.00  std::list<int, std::allocator<int> >::end()
  2.02   2173.76    49.53 19421366510     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  1.99   2222.67    48.91 15463208008     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  1.48   2259.05    36.38 12156071632     0.00     0.00  SatProblem::getTheta(int)
  1.30   2290.99    31.95 12638421670     0.00     0.00  std::_List_iterator<int>::operator*() const
  1.22   2320.89    29.90 6484664830     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  0.99   2345.24    24.36  5697216     0.00     0.00  SampleSAT::randomWalk()
  0.72   2362.84    17.59  5694927     0.00     0.00  SampleSAT::greedyWalk()
  0.50   2375.20    12.36 6910065408     0.00     0.00  SatProblem::getRealProb(int)
  0.37   2384.18     8.98 20800416     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.36   2392.97     8.79 21876683     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.34   2401.30     8.33 6439321216     0.00     0.00  SatProblem::getClVecSize()
  0.28   2408.08     6.78   100000     0.00     0.00  SatProblem::initParams()
  0.26   2414.38     6.30 3414110599     0.00     0.00  SatProblem::getClVec(int)
  0.24   2420.36     5.99 33475094     0.00     0.00  SatProblem::getCnj(int, int)
  0.23   2425.94     5.58 3208266176     0.00     0.00  SatProblem::getFixedClausei(int)
  0.19   2430.55     4.61 3642954078     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.17   2434.66     4.11  5697216     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.11   2437.39     2.73 20800416     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.10   2439.76     2.37     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.07   2441.56     1.80 70650758     0.00     0.00  Random::genrand()
  0.06   2442.93     1.38 263404632     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.05   2444.07     1.14 926340509     0.00     0.00  SatProblem::getVar(int)
  0.04   2445.09     1.02 526809264     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.04   2446.06     0.96                             SatProblem::getNumFixedClause()
  0.03   2446.90     0.84 263404632     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.03   2447.69     0.79   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.03   2448.39     0.70 263404632     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.03   2449.03     0.64 82760273     0.00     0.00  SatProblem::getNumSat()
  0.02   2449.60     0.57 22781420     0.00     0.00  SampleSAT::walk()
  0.02   2450.15     0.55 200100000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.02   2450.70     0.55   100000     0.00     0.00  SatProblem::cpClVector()
  0.02   2451.19     0.49 263404632     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.02   2451.64     0.46 263404632     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.02   2452.10     0.46 20799792     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.02   2452.50     0.40 263404632     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.02   2452.89     0.39 526809884     0.00     0.00  std::allocator<int>::~allocator()
  0.02   2453.26     0.37 526809884     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.01   2453.58     0.33 526809884     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.01   2453.88     0.29 526809884     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.01   2454.13     0.26 263404632     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.01   2454.35     0.22 263404632     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.01   2454.57     0.21 11389277     0.00     0.00  SampleSAT::simAnnealing()
  0.01   2454.78     0.21   100000     0.00     0.00  SampleSAT::init_model()
  0.01   2454.97     0.19        1     0.00     0.46  SampleSAT::readdata(char*, int)
  0.01   2455.14     0.17 263404632     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.01   2455.30     0.16 526809884     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.01   2455.45     0.15 263404632     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.01   2455.59     0.14 50566742     0.00     0.00  SatProblem::getCnjSize(int)
  0.01   2455.72     0.12                             SatProblem::isSat(int*)
  0.00   2455.84     0.12 263405252     0.00     0.00  operator new(unsigned int, void*)
  0.00   2455.95     0.11        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00   2456.04     0.10                             std::allocator<int>::~allocator()
  0.00   2456.13     0.09 70650758     0.00     0.00  SatProblem::getGrand()
  0.00   2456.21     0.08   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00   2456.29     0.08      624     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00   2456.36     0.07      620     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00   2456.44     0.07      620     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00   2456.51     0.07                             SatProblem::getClause(int)
  0.00   2456.59     0.07        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00   2456.64     0.06        1     0.00     2.46  SampleSAT::learn(int*, char*, int, char*)
  0.00   2456.70     0.06     1244     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00   2456.75     0.05        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00   2456.80     0.04        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   2456.82     0.03 33475094     0.00     0.00  SatProblem::getCnf(int)
  0.00   2456.86     0.03 21876683     0.00     0.00  SatProblem::addNumSat(int)
  0.00   2456.88     0.03 31000000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00   2456.91     0.03      620     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00   2456.93     0.02      620     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00   2456.95     0.02                             void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00   2456.96     0.01        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00   2456.97     0.01 11389277     0.00     0.00  SampleSAT::getTemp()
  0.00   2456.98     0.01                             SatProblem::setFixedAtomi(int, int)
  0.00   2456.99     0.01        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   2456.99     0.01        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00   2456.99     0.01                             SatProblem::getSampleSize()
  0.00   2457.00     0.01                             int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00   2457.00     0.00     8006     0.00     0.00  Timer::time()
  0.00   2457.00     0.00     1240     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00   2457.00     0.00     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00   2457.00     0.00      624     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00   2457.00     0.00      624     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00   2457.00     0.00      624     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00   2457.00     0.00      624     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00   2457.00     0.00      620     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00   2457.00     0.00      620     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00   2457.00     0.00      620     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00   2457.00     0.00      620     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00   2457.00     0.00      620     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00   2457.00     0.00      620     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00   2457.00     0.00      620     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00   2457.00     0.00      620     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00   2457.00     0.00      620     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00   2457.00     0.00      160     0.00     0.00  SatProblem::getNumVariables()
  0.00   2457.00     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00   2457.00     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00   2457.00     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00   2457.00     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00   2457.00     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00   2457.00     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00   2457.00     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00   2457.00     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00   2457.00     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   2457.00     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   2457.00     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   2457.00     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   2457.00     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   2457.00     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00   2457.00     0.00        4     0.00     0.00  Timer::Timer()
  0.00   2457.00     0.00        4     0.00     0.00  Timer::~Timer()
  0.00   2457.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00   2457.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00   2457.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00   2457.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00   2457.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00   2457.00     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00   2457.00     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00   2457.00     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00   2457.00     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00   2457.00     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00   2457.00     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00   2457.00     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00   2457.00     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00   2457.00     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00   2457.00     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00   2457.00     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00   2457.00     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00   2457.00     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00   2457.00     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   2457.00     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00   2457.00     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00   2457.00     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00   2457.00     0.00        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00   2457.00     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00   2457.00     0.00        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00   2457.00     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00   2457.00     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00   2457.00     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00   2457.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   2457.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   2457.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   2457.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   2457.00     0.00        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00   2457.00     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00   2457.00     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00   2457.00     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00   2457.00     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00   2457.00     0.00        1     0.00     0.00  SliceSampling::init()
  0.00   2457.00     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00   2457.00     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00   2457.00     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00   2457.00     0.00        1     0.00     0.00  Random::Random()
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00   2457.00     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 2457.00 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00 2455.70                 main [1]
                0.06 2455.06       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.44       1/1           SatProblem::parseCnfFile(char*) [52]
                0.07    0.00       1/1           SatProblem::parseSliFile(char*) [85]
                0.00    0.05       1/1           SatProblem::~SatProblem() [90]
                0.00    0.01       1/1           SatProblem::SatProblem(unsigned long, bool) [101]
                0.00    0.00     157/160         SatProblem::getNumVariables() [117]
                0.00    0.00       4/8006        Timer::time() [110]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [130]
                0.00    0.00       1/4           Timer::Timer() [131]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [162]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [157]
                0.00    0.00       1/1           printlParameters(learnparams*) [156]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [165]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [164]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [173]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [166]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [176]
                0.00    0.00       1/4           Timer::~Timer() [132]
-----------------------------------------------
                0.06 2455.06       1/1           main [1]
[2]     99.9    0.06 2455.06       1         SampleSAT::learn(int*, char*, int, char*) [2]
              367.94 1630.13       1/1           SampleSAT::islearn(int, char*) [3]
                0.19  456.75       1/1           SampleSAT::readdata(char*, int) [9]
                0.05    0.00       1/1           SampleSAT::lallocate(int) [91]
                0.00    0.00       2/8006        Timer::time() [110]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [130]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [174]
-----------------------------------------------
              367.94 1630.13       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     81.3  367.94 1630.13       1         SampleSAT::islearn(int, char*) [3]
                0.08 1578.40  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
               36.38    0.00 12156071632/12156071632     SatProblem::getTheta(int) [19]
               12.36    0.00 6910065408/6910065408     SatProblem::getRealProb(int) [25]
                2.37    0.55    3000/3000        SampleSAT::normalize(double*, int) [36]
                0.00    0.00  100000/70650758     SatProblem::getGrand() [38]
                0.00    0.00    8000/8006        Timer::time() [110]
                0.00    0.00    1000/1000        SatProblem::updateTheta(double*) [112]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [130]
-----------------------------------------------
                0.08 1578.40  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     64.2    0.08 1578.40  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.57 1536.31 22781420/22781420     SampleSAT::walk() [5]
                6.78   22.13  100000/100000      SatProblem::initParams() [22]
                0.79   10.62  100000/100000      SatProblem::initSatCheck(int*) [26]
                0.21    0.43  100000/100000      SampleSAT::init_model() [46]
                0.55    0.00  100000/100000      SatProblem::cpClVector() [49]
-----------------------------------------------
                0.57 1536.31 22781420/22781420     SampleSAT::solve(SatProblem*, int*) [4]
[5]     62.6    0.57 1536.31 22781420         SampleSAT::walk() [5]
               17.59 1324.95 5694927/5694927     SampleSAT::greedyWalk() [6]
               24.36   98.79 5697216/5697216     SampleSAT::randomWalk() [12]
                0.21   69.15 11389277/11389277     SampleSAT::simAnnealing() [16]
                0.04    0.87 34173563/70650758     SatProblem::getGrand() [38]
                0.34    0.00 44658103/82760273     SatProblem::getNumSat() [47]
-----------------------------------------------
               17.59 1324.95 5694927/5694927     SampleSAT::walk() [5]
[6]     54.6   17.59 1324.95 5694927         SampleSAT::greedyWalk() [6]
              426.03  869.56 882713685/894102962     SatProblem::getNsc2(int*, int) [7]
                2.29   25.82 5694927/21876683     SatProblem::afterFlip(int*, int) [13]
                1.08    0.00 882713685/926340509     SatProblem::getVar(int) [40]
                0.16    0.00 21015677/82760273     SatProblem::getNumSat() [47]
                0.01    0.00 5694927/21876683     SatProblem::addNumSat(int) [93]
-----------------------------------------------
                5.50   11.22 11389277/894102962     SampleSAT::simAnnealing() [16]
              426.03  869.56 882713685/894102962     SampleSAT::greedyWalk() [6]
[7]     53.4  431.52  880.78 894102962         SatProblem::getNsc2(int*, int) [7]
              422.85    0.00 5244474580/6450910835     SatProblem::isSatCnj(int*, int) [8]
              246.40    0.00 10488949160/11820253930     std::_List_iterator<int>::operator++(int) [11]
               62.81   11.72 14065361008/15726612640     std::list<int, std::allocator<int> >::end() [14]
               44.99    0.00 17641772856/19421366510     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
               44.48    0.00 14065361008/15463208008     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               26.51    0.00 10488949160/12638421670     std::_List_iterator<int>::operator*() const [20]
                4.53   16.49 3576411848/3642954078     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               10.62    0.00 131700000/6450910835     SatProblem::initSatCheck(int*) [26]
               20.69    0.00 256568515/6450910835     SatProblem::getNsc1(int*, int) [15]
               65.97    0.00 818167740/6450910835     SatProblem::afterFlip(int*, int) [13]
              422.85    0.00 5244474580/6450910835     SatProblem::getNsc2(int*, int) [7]
[8]     21.2  520.12    0.00 6450910835         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                0.19  456.75       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[9]     18.6    0.19  456.75       1         SampleSAT::readdata(char*, int) [9]
              456.75    0.00  200000/200000      SampleSAT::modelcheck(int) [10]
-----------------------------------------------
              456.75    0.00  200000/200000      SampleSAT::readdata(char*, int) [9]
[10]    18.6  456.75    0.00  200000         SampleSAT::modelcheck(int) [10]
-----------------------------------------------
               12.05    0.00 513137030/11820253930     SatProblem::getNsc1(int*, int) [15]
               19.22    0.00 818167740/11820253930     SatProblem::afterFlip(int*, int) [13]
              246.40    0.00 10488949160/11820253930     SatProblem::getNsc2(int*, int) [7]
[11]    11.3  277.67    0.00 11820253930         std::_List_iterator<int>::operator++(int) [11]
-----------------------------------------------
               24.36   98.79 5697216/5697216     SampleSAT::walk() [5]
[12]     5.0   24.36   98.79 5697216         SampleSAT::randomWalk() [12]
                4.11   68.25 5697216/5697216     SatProblem::getNsc1(int*, int) [15]
                8.33    0.00 6439321216/6439321216     SatProblem::getClVecSize() [28]
                6.30    0.00 3414110599/3414110599     SatProblem::getClVec(int) [30]
                5.99    0.03 33475094/33475094     SatProblem::getCnj(int, int) [31]
                5.58    0.00 3208266176/3208266176     SatProblem::getFixedClausei(int) [32]
                0.14    0.00 50566742/50566742     SatProblem::getCnjSize(int) [69]
                0.04    0.00 5697216/82760273     SatProblem::getNumSat() [47]
                0.02    0.00 16737547/926340509     SatProblem::getVar(int) [40]
                0.01    0.00 5697216/21876683     SatProblem::addNumSat(int) [93]
-----------------------------------------------
                2.29   25.82 5694927/21876683     SampleSAT::greedyWalk() [6]
                2.29   25.83 5697216/21876683     SatProblem::getNsc1(int*, int) [15]
                4.22   47.53 10484540/21876683     SampleSAT::simAnnealing() [16]
[13]     4.4    8.79   99.18 21876683         SatProblem::afterFlip(int*, int) [13]
               65.97    0.00 818167740/6450910835     SatProblem::isSatCnj(int*, int) [8]
               19.22    0.00 818167740/11820253930     std::_List_iterator<int>::operator++(int) [11]
                3.85    0.72 861921106/15726612640     std::list<int, std::allocator<int> >::end() [14]
                4.14    0.00 1636335480/12638421670     std::_List_iterator<int>::operator*() const [20]
                2.73    0.00 861921106/15463208008     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
                2.31    0.00 905674472/19421366510     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.06    0.20 43753366/3642954078     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
                1.18    0.22 263404632/15726612640     std::list<int, std::allocator<int> >::push_back(int const&) [29]
                2.39    0.45 535925894/15726612640     SatProblem::getNsc1(int*, int) [15]
                3.85    0.72 861921106/15726612640     SatProblem::afterFlip(int*, int) [13]
               62.81   11.72 14065361008/15726612640     SatProblem::getNsc2(int*, int) [7]
[14]     3.4   70.23   13.10 15726612640         std::list<int, std::allocator<int> >::end() [14]
               13.10    0.00 2841710752/6484664830     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [21]
-----------------------------------------------
                4.11   68.25 5697216/5697216     SampleSAT::randomWalk() [12]
[15]     2.9    4.11   68.25 5697216         SatProblem::getNsc1(int*, int) [15]
                2.29   25.83 5697216/21876683     SatProblem::afterFlip(int*, int) [13]
               20.69    0.00 256568515/6450910835     SatProblem::isSatCnj(int*, int) [8]
               12.05    0.00 513137030/11820253930     std::_List_iterator<int>::operator++(int) [11]
                2.39    0.45 535925894/15726612640     std::list<int, std::allocator<int> >::end() [14]
                1.69    0.00 535925894/15463208008     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
                1.42    0.00 558714758/19421366510     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                1.30    0.00 513137030/12638421670     std::_List_iterator<int>::operator*() const [20]
                0.03    0.11 22788864/3642954078     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
                0.21   69.15 11389277/11389277     SampleSAT::walk() [5]
[16]     2.8    0.21   69.15 11389277         SampleSAT::simAnnealing() [16]
                4.22   47.53 10484540/21876683     SatProblem::afterFlip(int*, int) [13]
                5.50   11.22 11389277/894102962     SatProblem::getNsc2(int*, int) [7]
                0.03    0.53 20877195/70650758     SatProblem::getGrand() [38]
                0.09    0.00 11389277/82760273     SatProblem::getNumSat() [47]
                0.01    0.00 10484540/21876683     SatProblem::addNumSat(int) [93]
                0.01    0.00 11389277/926340509     SatProblem::getVar(int) [40]
                0.01    0.00 11389277/11389277     SampleSAT::getTemp() [103]
-----------------------------------------------
                0.00    0.00    4632/19421366510     SatProblem::parseCnfFile(char*) [52]
                0.80    0.00 315199792/19421366510     SatProblem::initParams() [22]
                1.42    0.00 558714758/19421366510     SatProblem::getNsc1(int*, int) [15]
                2.31    0.00 905674472/19421366510     SatProblem::afterFlip(int*, int) [13]
               44.99    0.00 17641772856/19421366510     SatProblem::getNsc2(int*, int) [7]
[17]     2.0   49.53    0.00 19421366510         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
-----------------------------------------------
                1.69    0.00 535925894/15463208008     SatProblem::getNsc1(int*, int) [15]
                2.73    0.00 861921106/15463208008     SatProblem::afterFlip(int*, int) [13]
               44.48    0.00 14065361008/15463208008     SatProblem::getNsc2(int*, int) [7]
[18]     2.0   48.91    0.00 15463208008         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
-----------------------------------------------
               36.38    0.00 12156071632/12156071632     SampleSAT::islearn(int, char*) [3]
[19]     1.5   36.38    0.00 12156071632         SatProblem::getTheta(int) [19]
-----------------------------------------------
                1.30    0.00 513137030/12638421670     SatProblem::getNsc1(int*, int) [15]
                4.14    0.00 1636335480/12638421670     SatProblem::afterFlip(int*, int) [13]
               26.51    0.00 10488949160/12638421670     SatProblem::getNsc2(int*, int) [7]
[20]     1.3   31.94    0.00 12638421670         std::_List_iterator<int>::operator*() const [20]
-----------------------------------------------
               13.10    0.00 2841710752/6484664830     std::list<int, std::allocator<int> >::end() [14]
               16.80    0.00 3642954078/6484664830     std::list<int, std::allocator<int> >::begin() [23]
[21]     1.2   29.90    0.00 6484664830         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [21]
-----------------------------------------------
                6.78   22.13  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[22]     1.2    6.78   22.13  100000         SatProblem::initParams() [22]
                0.46   13.87 20799792/20799792     std::list<int, std::allocator<int> >::clear() [24]
                0.70    6.28 263400000/263404632     std::list<int, std::allocator<int> >::push_back(int const&) [29]
                0.80    0.00 315199792/19421366510     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
                0.03    0.00 31000000/31000000     std::list<int, std::allocator<int> >::empty() const [99]
-----------------------------------------------
                0.03    0.11 22788864/3642954078     SatProblem::getNsc1(int*, int) [15]
                0.06    0.20 43753366/3642954078     SatProblem::afterFlip(int*, int) [13]
                4.53   16.49 3576411848/3642954078     SatProblem::getNsc2(int*, int) [7]
[23]     0.9    4.61   16.80 3642954078         std::list<int, std::allocator<int> >::begin() [23]
               16.80    0.00 3642954078/6484664830     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [21]
-----------------------------------------------
                0.46   13.87 20799792/20799792     SatProblem::initParams() [22]
[24]     0.6    0.46   13.87 20799792         std::list<int, std::allocator<int> >::clear() [24]
                8.98    0.00 20799792/20800416     std::_List_base<int, std::allocator<int> >::_M_init() [27]
                2.73    2.16 20799792/20800416     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
-----------------------------------------------
               12.36    0.00 6910065408/6910065408     SampleSAT::islearn(int, char*) [3]
[25]     0.5   12.36    0.00 6910065408         SatProblem::getRealProb(int) [25]
-----------------------------------------------
                0.79   10.62  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[26]     0.5    0.79   10.62  100000         SatProblem::initSatCheck(int*) [26]
               10.62    0.00 131700000/6450910835     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                0.00    0.00       4/20800416     std::_List_base<int, std::allocator<int> >::_List_base() [72]
                0.00    0.00     620/20800416     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
                8.98    0.00 20799792/20800416     std::list<int, std::allocator<int> >::clear() [24]
[27]     0.4    8.98    0.00 20800416         std::_List_base<int, std::allocator<int> >::_M_init() [27]
-----------------------------------------------
                8.33    0.00 6439321216/6439321216     SampleSAT::randomWalk() [12]
[28]     0.3    8.33    0.00 6439321216         SatProblem::getClVecSize() [28]
-----------------------------------------------
                0.00    0.00    4632/263404632     SatProblem::parseCnfFile(char*) [52]
                0.70    6.28 263400000/263404632     SatProblem::initParams() [22]
[29]     0.3    0.70    6.28 263404632         std::list<int, std::allocator<int> >::push_back(int const&) [29]
                0.84    4.04 263404632/263404632     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [34]
                1.18    0.22 263404632/15726612640     std::list<int, std::allocator<int> >::end() [14]
-----------------------------------------------
                6.30    0.00 3414110599/3414110599     SampleSAT::randomWalk() [12]
[30]     0.3    6.30    0.00 3414110599         SatProblem::getClVec(int) [30]
-----------------------------------------------
                5.99    0.03 33475094/33475094     SampleSAT::randomWalk() [12]
[31]     0.2    5.99    0.03 33475094         SatProblem::getCnj(int, int) [31]
                0.03    0.00 33475094/33475094     SatProblem::getCnf(int) [92]
-----------------------------------------------
                5.58    0.00 3208266176/3208266176     SampleSAT::randomWalk() [12]
[32]     0.2    5.58    0.00 3208266176         SatProblem::getFixedClausei(int) [32]
-----------------------------------------------
                0.00    0.00     624/20800416     std::_List_base<int, std::allocator<int> >::~_List_base() [94]
                2.73    2.16 20799792/20800416     std::list<int, std::allocator<int> >::clear() [24]
[33]     0.2    2.73    2.16 20800416         std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.51    0.49 263404632/526809264     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [37]
                0.46    0.26 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [43]
                0.19    0.08 263404632/526809884     std::allocator<int>::~allocator() [50]
                0.17    0.00 263404632/263404632     __gnu_cxx::new_allocator<int>::destroy(int*) [66]
-----------------------------------------------
                0.84    4.04 263404632/263404632     std::list<int, std::allocator<int> >::push_back(int const&) [29]
[34]     0.2    0.84    4.04 263404632         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [34]
                1.38    2.66 263404632/263404632     std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
-----------------------------------------------
                1.38    2.66 263404632/263404632     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [34]
[35]     0.2    1.38    2.66 263404632         std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
                0.51    0.49 263404632/526809264     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [37]
                0.22    0.65 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_get_node() [42]
                0.40    0.12 263404632/263404632     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [51]
                0.19    0.08 263404632/526809884     std::allocator<int>::~allocator() [50]
-----------------------------------------------
                2.37    0.55    3000/3000        SampleSAT::islearn(int, char*) [3]
[36]     0.1    2.37    0.55    3000         SampleSAT::normalize(double*, int) [36]
                0.55    0.00 200100000/200100000     double const& std::max<double>(double const&, double const&) [48]
-----------------------------------------------
                0.51    0.49 263404632/526809264     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.51    0.49 263404632/526809264     std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
[37]     0.1    1.02    0.99 526809264         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [37]
                0.37    0.32 526809264/526809884     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.29    0.00 526809264/526809884     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [58]
-----------------------------------------------
                0.00    0.00  100000/70650758     SampleSAT::islearn(int, char*) [3]
                0.02    0.40 15500000/70650758     SampleSAT::init_model() [46]
                0.03    0.53 20877195/70650758     SampleSAT::simAnnealing() [16]
                0.04    0.87 34173563/70650758     SampleSAT::walk() [5]
[38]     0.1    0.09    1.80 70650758         SatProblem::getGrand() [38]
                1.80    0.00 70650758/70650758     Random::genrand() [39]
-----------------------------------------------
                1.80    0.00 70650758/70650758     SatProblem::getGrand() [38]
[39]     0.1    1.80    0.00 70650758         Random::genrand() [39]
-----------------------------------------------
                0.01    0.00 11389277/926340509     SampleSAT::simAnnealing() [16]
                0.02    0.00 15500000/926340509     SampleSAT::init_model() [46]
                0.02    0.00 16737547/926340509     SampleSAT::randomWalk() [12]
                1.08    0.00 882713685/926340509     SampleSAT::greedyWalk() [6]
[40]     0.0    1.14    0.00 926340509         SatProblem::getVar(int) [40]
-----------------------------------------------
                                                 <spontaneous>
[41]     0.0    0.96    0.00                 SatProblem::getNumFixedClause() [41]
-----------------------------------------------
                0.22    0.65 263404632/263404632     std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
[42]     0.0    0.22    0.65 263404632         std::_List_base<int, std::allocator<int> >::_M_get_node() [42]
                0.49    0.15 263404632/263404632     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [45]
-----------------------------------------------
                0.46    0.26 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
[43]     0.0    0.46    0.26 263404632         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [43]
                0.26    0.00 263404632/263404632     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [65]
-----------------------------------------------
                0.00    0.00     620/526809884     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
                0.37    0.32 526809264/526809884     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [37]
[44]     0.0    0.37    0.33 526809884         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.33    0.00 526809884/526809884     __gnu_cxx::new_allocator<int>::new_allocator() [57]
-----------------------------------------------
                0.49    0.15 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_get_node() [42]
[45]     0.0    0.49    0.15 263404632         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [45]
                0.15    0.00 263404632/263404632     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [68]
-----------------------------------------------
                0.21    0.43  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[46]     0.0    0.21    0.43  100000         SampleSAT::init_model() [46]
                0.02    0.40 15500000/70650758     SatProblem::getGrand() [38]
                0.02    0.00 15500000/926340509     SatProblem::getVar(int) [40]
-----------------------------------------------
                0.04    0.00 5697216/82760273     SampleSAT::randomWalk() [12]
                0.09    0.00 11389277/82760273     SampleSAT::simAnnealing() [16]
                0.16    0.00 21015677/82760273     SampleSAT::greedyWalk() [6]
                0.34    0.00 44658103/82760273     SampleSAT::walk() [5]
[47]     0.0    0.64    0.00 82760273         SatProblem::getNumSat() [47]
-----------------------------------------------
                0.55    0.00 200100000/200100000     SampleSAT::normalize(double*, int) [36]
[48]     0.0    0.55    0.00 200100000         double const& std::max<double>(double const&, double const&) [48]
-----------------------------------------------
                0.55    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[49]     0.0    0.55    0.00  100000         SatProblem::cpClVector() [49]
-----------------------------------------------
                0.00    0.00     620/526809884     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
                0.19    0.08 263404632/526809884     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.19    0.08 263404632/526809884     std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
[50]     0.0    0.39    0.16 526809884         std::allocator<int>::~allocator() [50]
                0.16    0.00 526809884/526809884     __gnu_cxx::new_allocator<int>::~new_allocator() [67]
-----------------------------------------------
                0.40    0.12 263404632/263404632     std::list<int, std::allocator<int> >::_M_create_node(int const&) [35]
[51]     0.0    0.40    0.12 263404632         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [51]
                0.12    0.00 263404632/263405252     operator new(unsigned int, void*) [71]
-----------------------------------------------
                0.00    0.44       1/1           main [1]
[52]     0.0    0.00    0.44       1         SatProblem::parseCnfFile(char*) [52]
                0.00    0.44       1/1           SatProblem::allocate() [53]
                0.00    0.00    4632/263404632     std::list<int, std::allocator<int> >::push_back(int const&) [29]
                0.00    0.00    4632/19421366510     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [17]
-----------------------------------------------
                0.00    0.44       1/1           SatProblem::parseCnfFile(char*) [52]
[53]     0.0    0.00    0.44       1         SatProblem::allocate() [53]
                0.00    0.33       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [55]
                0.00    0.11       4/4           std::list<int, std::allocator<int> >::list() [73]
                0.00    0.00       4/624         std::list<int, std::allocator<int> >::~list() [95]
-----------------------------------------------
                0.01    0.33       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [55]
[54]     0.0    0.01    0.33       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [54]
                0.00    0.33       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
-----------------------------------------------
                0.00    0.33       4/4           SatProblem::allocate() [53]
[55]     0.0    0.00    0.33       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [55]
                0.01    0.33       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [54]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [118]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
-----------------------------------------------
                0.00    0.33       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [54]
[56]     0.0    0.00    0.33       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
                0.00    0.28       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [62]
                0.00    0.05       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [77]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [119]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [120]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [129]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [138]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [137]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [141]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
-----------------------------------------------
                0.33    0.00 526809884/526809884     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
[57]     0.0    0.33    0.00 526809884         __gnu_cxx::new_allocator<int>::new_allocator() [57]
-----------------------------------------------
                0.00    0.00     620/526809884     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
                0.29    0.00 526809264/526809884     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [37]
[58]     0.0    0.29    0.00 526809884         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [58]
-----------------------------------------------
                0.00    0.28     620/620         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [60]
[59]     0.0    0.00    0.28     620         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [59]
                0.00    0.28     620/620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
                0.00    0.00     620/263405252     operator new(unsigned int, void*) [71]
-----------------------------------------------
                0.00    0.28       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [61]
[60]     0.0    0.00    0.28       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [60]
                0.00    0.28     620/620         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [59]
-----------------------------------------------
                0.00    0.28       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [62]
[61]     0.0    0.00    0.28       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [61]
                0.00    0.28       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [60]
-----------------------------------------------
                0.00    0.28       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[62]     0.0    0.00    0.28       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [62]
                0.00    0.28       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [61]
-----------------------------------------------
                0.00    0.28     620/620         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [59]
[63]     0.0    0.00    0.28     620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
                0.07    0.20     620/620         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
                0.00    0.00     620/526809884     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.00    0.00     620/526809884     std::allocator<int>::~allocator() [50]
                0.00    0.00     620/526809884     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [58]
                0.00    0.00     620/620         std::list<int, std::allocator<int> >::end() const [114]
                0.00    0.00     620/620         std::list<int, std::allocator<int> >::begin() const [115]
                0.00    0.00     620/620         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [116]
-----------------------------------------------
                0.07    0.20     620/620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
[64]     0.0    0.07    0.20     620         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
                0.02    0.08     620/620         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [78]
                0.00    0.07     620/620         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [83]
                0.00    0.03     620/620         std::allocator<std::_List_node<int> >::~allocator() [98]
                0.00    0.00     620/20800416     std::_List_base<int, std::allocator<int> >::_M_init() [27]
-----------------------------------------------
                0.26    0.00 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [43]
[65]     0.0    0.26    0.00 263404632         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [65]
-----------------------------------------------
                0.17    0.00 263404632/263404632     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
[66]     0.0    0.17    0.00 263404632         __gnu_cxx::new_allocator<int>::destroy(int*) [66]
-----------------------------------------------
                0.16    0.00 526809884/526809884     std::allocator<int>::~allocator() [50]
[67]     0.0    0.16    0.00 526809884         __gnu_cxx::new_allocator<int>::~new_allocator() [67]
-----------------------------------------------
                0.15    0.00 263404632/263404632     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [45]
[68]     0.0    0.15    0.00 263404632         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [68]
-----------------------------------------------
                0.14    0.00 50566742/50566742     SampleSAT::randomWalk() [12]
[69]     0.0    0.14    0.00 50566742         SatProblem::getCnjSize(int) [69]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.0    0.12    0.00                 SatProblem::isSat(int*) [70]
-----------------------------------------------
                0.00    0.00     620/263405252     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [59]
                0.12    0.00 263404632/263405252     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [51]
[71]     0.0    0.12    0.00 263405252         operator new(unsigned int, void*) [71]
-----------------------------------------------
                0.00    0.11       4/4           std::list<int, std::allocator<int> >::list() [73]
[72]     0.0    0.00    0.11       4         std::_List_base<int, std::allocator<int> >::_List_base() [72]
                0.00    0.11       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [75]
                0.00    0.00       4/20800416     std::_List_base<int, std::allocator<int> >::_M_init() [27]
-----------------------------------------------
                0.00    0.11       4/4           SatProblem::allocate() [53]
[73]     0.0    0.00    0.11       4         std::list<int, std::allocator<int> >::list() [73]
                0.00    0.11       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [72]
-----------------------------------------------
                0.11    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [75]
[74]     0.0    0.11    0.00       4         std::allocator<std::_List_node<int> >::allocator() [74]
                0.00    0.00       4/624         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [80]
-----------------------------------------------
                0.00    0.11       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [72]
[75]     0.0    0.00    0.11       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [75]
                0.11    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [74]
-----------------------------------------------
                0.04    0.06       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [77]
[76]     0.0    0.04    0.06       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [76]
                0.01    0.05       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
-----------------------------------------------
                0.00    0.05       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [89]
                0.00    0.05       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[77]     0.0    0.00    0.10       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [77]
                0.04    0.06       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [76]
-----------------------------------------------
                0.02    0.08     620/620         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
[78]     0.0    0.02    0.08     620         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [78]
                0.08    0.00     620/624         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [80]
-----------------------------------------------
                                                 <spontaneous>
[79]     0.0    0.10    0.00                 std::allocator<int>::~allocator() [79]
-----------------------------------------------
                0.00    0.00       4/624         std::allocator<std::_List_node<int> >::allocator() [74]
                0.08    0.00     620/624         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [78]
[80]     0.0    0.08    0.00     624         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [80]
-----------------------------------------------
                0.07    0.00     620/620         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [82]
[81]     0.0    0.07    0.00     620         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [81]
-----------------------------------------------
                0.00    0.07     620/620         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [83]
[82]     0.0    0.00    0.07     620         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [82]
                0.07    0.00     620/620         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [81]
-----------------------------------------------
                0.00    0.07     620/620         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
[83]     0.0    0.00    0.07     620         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [83]
                0.00    0.07     620/620         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [82]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.0    0.07    0.00                 SatProblem::getClause(int) [84]
-----------------------------------------------
                0.07    0.00       1/1           main [1]
[85]     0.0    0.07    0.00       1         SatProblem::parseSliFile(char*) [85]
-----------------------------------------------
                0.01    0.05       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [76]
[86]     0.0    0.01    0.05       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
                0.03    0.03     620/620         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [88]
-----------------------------------------------
                0.03    0.00     620/1244        std::allocator<std::_List_node<int> >::~allocator() [98]
                0.03    0.00     624/1244        std::allocator<std::_List_node<int> >::~allocator() [96]
[87]     0.0    0.06    0.00    1244         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [87]
-----------------------------------------------
                0.03    0.03     620/620         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [86]
[88]     0.0    0.03    0.03     620         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [88]
                0.00    0.03     620/624         std::list<int, std::allocator<int> >::~list() [95]
-----------------------------------------------
                0.00    0.05       4/4           SatProblem::~SatProblem() [90]
[89]     0.0    0.00    0.05       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [89]
                0.00    0.05       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [77]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [119]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [145]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[90]     0.0    0.00    0.05       1         SatProblem::~SatProblem() [90]
                0.00    0.05       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [89]
                0.00    0.00       1/4           Timer::~Timer() [132]
-----------------------------------------------
                0.05    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[91]     0.0    0.05    0.00       1         SampleSAT::lallocate(int) [91]
-----------------------------------------------
                0.03    0.00 33475094/33475094     SatProblem::getCnj(int, int) [31]
[92]     0.0    0.03    0.00 33475094         SatProblem::getCnf(int) [92]
-----------------------------------------------
                0.01    0.00 5694927/21876683     SampleSAT::greedyWalk() [6]
                0.01    0.00 5697216/21876683     SampleSAT::randomWalk() [12]
                0.01    0.00 10484540/21876683     SampleSAT::simAnnealing() [16]
[93]     0.0    0.03    0.00 21876683         SatProblem::addNumSat(int) [93]
-----------------------------------------------
                0.00    0.03     624/624         std::list<int, std::allocator<int> >::~list() [95]
[94]     0.0    0.00    0.03     624         std::_List_base<int, std::allocator<int> >::~_List_base() [94]
                0.00    0.03     624/624         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [97]
                0.00    0.00     624/20800416     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
-----------------------------------------------
                0.00    0.00       4/624         SatProblem::allocate() [53]
                0.00    0.03     620/624         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [88]
[95]     0.0    0.00    0.03     624         std::list<int, std::allocator<int> >::~list() [95]
                0.00    0.03     624/624         std::_List_base<int, std::allocator<int> >::~_List_base() [94]
-----------------------------------------------
                0.00    0.03     624/624         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [97]
[96]     0.0    0.00    0.03     624         std::allocator<std::_List_node<int> >::~allocator() [96]
                0.03    0.00     624/1244        __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [87]
-----------------------------------------------
                0.00    0.03     624/624         std::_List_base<int, std::allocator<int> >::~_List_base() [94]
[97]     0.0    0.00    0.03     624         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [97]
                0.00    0.03     624/624         std::allocator<std::_List_node<int> >::~allocator() [96]
-----------------------------------------------
                0.00    0.03     620/620         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [64]
[98]     0.0    0.00    0.03     620         std::allocator<std::_List_node<int> >::~allocator() [98]
                0.03    0.00     620/1244        __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [87]
-----------------------------------------------
                0.03    0.00 31000000/31000000     SatProblem::initParams() [22]
[99]     0.0    0.03    0.00 31000000         std::list<int, std::allocator<int> >::empty() const [99]
-----------------------------------------------
                                                 <spontaneous>
[100]    0.0    0.02    0.00                 void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [100]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[101]    0.0    0.00    0.01       1         SatProblem::SatProblem(unsigned long, bool) [101]
                0.01    0.00       1/1           Random::sgenrand(unsigned long) [102]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [148]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [151]
                0.00    0.00       1/1           Random::Random() [167]
                0.00    0.00       1/4           Timer::Timer() [131]
-----------------------------------------------
                0.01    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [101]
[102]    0.0    0.01    0.00       1         Random::sgenrand(unsigned long) [102]
-----------------------------------------------
                0.01    0.00 11389277/11389277     SampleSAT::simAnnealing() [16]
[103]    0.0    0.01    0.00 11389277         SampleSAT::getTemp() [103]
-----------------------------------------------
                                                 <spontaneous>
[104]    0.0    0.01    0.00                 SatProblem::setFixedAtomi(int, int) [104]
-----------------------------------------------
                                                 <spontaneous>
[105]    0.0    0.01    0.00                 SatProblem::getSampleSize() [105]
-----------------------------------------------
                                                 <spontaneous>
[106]    0.0    0.01    0.00                 int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [106]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[110]    0.0    0.00    0.00    8006         Timer::time() [110]
-----------------------------------------------
                0.00    0.00     620/1240        std::list<int, std::allocator<int> >::begin() const [115]
                0.00    0.00     620/1240        std::list<int, std::allocator<int> >::end() const [114]
[111]    0.0    0.00    0.00    1240         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[112]    0.0    0.00    0.00    1000         SatProblem::updateTheta(double*) [112]
-----------------------------------------------
                0.00    0.00     620/620         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [116]
[113]    0.0    0.00    0.00     620         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [113]
-----------------------------------------------
                0.00    0.00     620/620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
[114]    0.0    0.00    0.00     620         std::list<int, std::allocator<int> >::end() const [114]
                0.00    0.00     620/1240        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00     620/620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
[115]    0.0    0.00    0.00     620         std::list<int, std::allocator<int> >::begin() const [115]
                0.00    0.00     620/1240        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00     620/620         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [63]
[116]    0.0    0.00    0.00     620         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [116]
                0.00    0.00     620/620         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [113]
-----------------------------------------------
                0.00    0.00       1/160         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
                0.00    0.00       1/160         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [165]
                0.00    0.00       1/160         SliceSampling::calcFixed(learnparams*) [164]
                0.00    0.00     157/160         main [1]
[117]    0.0    0.00    0.00     160         SatProblem::getNumVariables() [117]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [55]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [138]
[118]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [118]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [89]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[119]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [119]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [137]
[120]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [120]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [134]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [124]
[121]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [121]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
[122]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [122]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [124]
[123]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [123]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [138]
[124]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [124]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [123]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [121]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [145]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[125]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [133]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [127]
[126]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [126]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [128]
[127]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [127]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [126]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [129]
[128]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [128]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [127]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[129]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [129]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [128]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[130]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [130]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [101]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [165]
[131]    0.0    0.00    0.00       4         Timer::Timer() [131]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [90]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [176]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [166]
[132]    0.0    0.00    0.00       4         Timer::~Timer() [132]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
[133]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [133]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [141]
[134]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [134]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [121]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [139]
[135]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [135]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [140]
[136]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [136]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[137]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [137]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [120]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[138]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [138]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [118]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [124]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [149]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [142]
[139]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [139]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [135]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [143]
[140]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [140]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [136]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[141]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [141]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [134]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [144]
[142]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [142]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [139]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [145]
[143]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [143]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [140]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [148]
[144]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [144]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [89]
[145]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [145]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [55]
[146]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [146]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [122]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [56]
[147]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [147]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [122]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [101]
[148]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [148]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [144]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [138]
[149]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [149]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [164]
[150]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [150]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [101]
[151]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [151]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[152]    0.0    0.00    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [152]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [159]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[153]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [153]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [161]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[154]    0.0    0.00    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [154]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [160]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [295]
[155]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [155]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [158]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[156]    0.0    0.00    0.00       1         printlParameters(learnparams*) [156]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[157]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [157]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [155]
[158]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [158]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [152]
[159]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [159]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [154]
[160]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [160]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [153]
[161]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [161]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[162]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [162]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [165]
[163]    0.0    0.00    0.00       1         SliceSampling::init() [163]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[164]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [164]
                0.00    0.00       1/160         SatProblem::getNumVariables() [117]
                0.00    0.00       1/2           SatProblem::getNumClauses() [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[165]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [165]
                0.00    0.00       1/4           Timer::Timer() [131]
                0.00    0.00       1/160         SatProblem::getNumVariables() [117]
                0.00    0.00       1/1           SliceSampling::init() [163]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[166]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [166]
                0.00    0.00       1/4           Timer::~Timer() [132]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [101]
[167]    0.0    0.00    0.00       1         Random::Random() [167]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
[168]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [168]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
[169]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [169]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
[170]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [170]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
[171]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [171]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
[172]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [172]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[173]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [173]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[174]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [174]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[175]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [175]
                0.00    0.00       1/4           Timer::Timer() [131]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [168]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [169]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [171]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [172]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [170]
                0.00    0.00       1/160         SatProblem::getNumVariables() [117]
                0.00    0.00       1/2           SatProblem::getNumClauses() [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[176]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [176]
                0.00    0.00       1/4           Timer::~Timer() [132]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [152] global constructors keyed to _ZN10SatProblemC2Emb [168] SampleSAT::setWalkMax(int) [83] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
 [153] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [169] SampleSAT::setNumSample(int) [75] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [154] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [16] SampleSAT::simAnnealing() [97] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [155] global constructors keyed to cnffilename [170] SampleSAT::setTemperature(double) [42] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [156] printlParameters(learnparams*) [171] SampleSAT::setWalkSatProb(double) [43] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [157] printssParameters(samplesatparams*) [172] SampleSAT::setRandomWalkProb(double) [27] std::_List_base<int, std::allocator<int> >::_M_init()
 [158] __static_initialization_and_destruction_0(int, int) [5] SampleSAT::walk() [33] std::_List_base<int, std::allocator<int> >::_M_clear()
 [159] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int, char*) [64] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [160] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [72] std::_List_base<int, std::allocator<int> >::_List_base()
 [161] __static_initialization_and_destruction_0(int, int) [173] SampleSAT::calcAve(learnparams*) [94] std::_List_base<int, std::allocator<int> >::~_List_base()
  [49] SatProblem::cpClVector() [103] SampleSAT::getTemp() [86] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [69] SatProblem::getCnjSize(int) [3] SampleSAT::islearn(int, char*) [141] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  [22] SatProblem::initParams() [9] SampleSAT::readdata(char*, int) [142] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [25] SatProblem::getRealProb(int) [174] SampleSAT::destlearn(int) [143] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
 [112] SatProblem::updateTheta(double*) [91] SampleSAT::lallocate(int) [125] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [28] SatProblem::getClVecSize() [36] SampleSAT::normalize(double*, int) [119] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [26] SatProblem::initSatCheck(int*) [175] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [144] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [52] SatProblem::parseCnfFile(char*) [176] SampleSAT::~SampleSAT() [145] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [85] SatProblem::parseSliFile(char*) [65] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [21] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
 [150] SatProblem::getNumClauses() [45] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [151] std::_List_iterator<int>::_List_iterator()
 [105] SatProblem::getSampleSize() [81] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [11] std::_List_iterator<int>::operator++(int)
 [162] SatProblem::parseProbFile(char*) [80] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [111] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [104] SatProblem::setFixedAtomi(int, int) [87] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [126] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [32] SatProblem::getFixedClausei(int) [133] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [60] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [117] SatProblem::getNumVariables() [134] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [35] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [41] SatProblem::getNumFixedClause() [135] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [116] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [70] SatProblem::isSat(int*) [136] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [14] std::list<int, std::allocator<int> >::end()
  [92] SatProblem::getCnf(int) [66] __gnu_cxx::new_allocator<int>::destroy(int*) [23] std::list<int, std::allocator<int> >::begin()
  [31] SatProblem::getCnj(int, int) [51] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [24] std::list<int, std::allocator<int> >::clear()
  [40] SatProblem::getVar(int) [57] __gnu_cxx::new_allocator<int>::new_allocator() [34] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [15] SatProblem::getNsc1(int*, int) [67] __gnu_cxx::new_allocator<int>::~new_allocator() [29] std::list<int, std::allocator<int> >::push_back(int const&)
   [7] SatProblem::getNsc2(int*, int) [122] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [63] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [53] SatProblem::allocate() [137] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [73] std::list<int, std::allocator<int> >::list()
  [30] SatProblem::getClVec(int) [68] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [95] std::list<int, std::allocator<int> >::~list()
  [38] SatProblem::getGrand() [121] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [56] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [19] SatProblem::getTheta(int) [120] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [146] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
   [8] SatProblem::isSatCnj(int*, int) [37] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [147] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [93] SatProblem::addNumSat(int) [58] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [54] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [13] SatProblem::afterFlip(int*, int) [123] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [55] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  [84] SatProblem::getClause(int) [20] std::_List_iterator<int>::operator*() const [148] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  [47] SatProblem::getNumSat() [18] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [89] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
 [101] SatProblem::SatProblem(unsigned long, bool) [113] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [17] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  [90] SatProblem::~SatProblem() [114] std::list<int, std::allocator<int> >::end() const [59] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [163] SliceSampling::init() [115] std::list<int, std::allocator<int> >::begin() const [127] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [164] SliceSampling::calcFixed(learnparams*) [99] std::list<int, std::allocator<int> >::empty() const [106] int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
 [165] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [138] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [61] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [166] SliceSampling::~SliceSampling() [118] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [110] Timer::time()         [124] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [129] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [130] Timer::printTime(std::ostream&, double const&) [78] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [62] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [131] Timer::Timer()         [82] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [48] double const& std::max<double>(double const&, double const&)
 [132] Timer::~Timer()        [74] std::allocator<std::_List_node<int> >::allocator() [149] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  [39] Random::genrand()      [98] std::allocator<std::_List_node<int> >::~allocator() [76] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [102] Random::sgenrand(unsigned long) [96] std::allocator<std::_List_node<int> >::~allocator() [77] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [167] Random::Random()      [139] std::allocator<std::list<int, std::allocator<int> > >::allocator() [100] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
   [6] SampleSAT::greedyWalk() [140] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [88] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  [46] SampleSAT::init_model() [44] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [71] operator new(unsigned int, void*)
  [10] SampleSAT::modelcheck(int) [50] std::allocator<int>::~allocator()
  [12] SampleSAT::randomWalk() [79] std::allocator<int>::~allocator()
