Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 15.00      0.06     0.06        1    60.00   369.98  SliceSampling::cdlearn(int)
 12.50      0.11     0.05    10000     0.01     0.01  SatProblem::initParams()
 10.00      0.15     0.04   175737     0.00     0.00  SatProblem::getNsc2(int*, int)
  7.50      0.18     0.03     2000     0.01     0.01  SliceSampling::modelcheck(int)
  6.25      0.20     0.03  1850848     0.00     0.00  std::_List_iterator<int>::operator++(int)
  5.00      0.23     0.02  4446935     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  5.00      0.24     0.02   405704     0.00     0.00  Random::genrand()
  5.00      0.27     0.02    85500     0.00     0.00  Timer::time()
  3.75      0.28     0.01  4894515     0.00     0.00  SatProblem::getTheta(int)
  2.50      0.29     0.01  3133929     0.00     0.00  std::list<int, std::allocator<int> >::end()
  2.50      0.30     0.01  2713869     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  2.50      0.31     0.01  1251288     0.00     0.00  SatProblem::isSatCnj(int*, int)
  2.50      0.32     0.01   840120     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  2.50      0.33     0.01   420060     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  2.50      0.34     0.01   420060     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  2.50      0.35     0.01    22447     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  2.50      0.36     0.01    10000     0.00     0.03  SliceSampling::sampleX()
  1.25      0.36     0.01  3996950     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  1.25      0.37     0.01  2113536     0.00     0.00  std::_List_iterator<int>::operator*() const
  1.25      0.38     0.01   862627     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  1.25      0.38     0.01   840180     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  1.25      0.39     0.01   420060     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  1.25      0.39     0.01   150049     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  1.25      0.40     0.01    52893     0.00     0.00  SatProblem::getCnj(int, int)
  1.25      0.40     0.01    22447     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.40     0.00  1294500     0.00     0.00  SatProblem::getRealProb(int)
  0.00      0.40     0.00   863021     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.00      0.40     0.00   862627     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.40     0.00   840180     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.00      0.40     0.00   840180     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.40     0.00   513708     0.00     0.00  SatProblem::getClVecSize()
  0.00      0.40     0.00   420120     0.00     0.00  operator new(unsigned int, void*)
  0.00      0.40     0.00   420060     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.00      0.40     0.00   420060     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.00      0.40     0.00   420060     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.00      0.40     0.00   420060     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      0.40     0.00   420060     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00      0.40     0.00   420060     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.00      0.40     0.00   420060     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.00      0.40     0.00   410218     0.00     0.00  SatProblem::getVar(int)
  0.00      0.40     0.00   405704     0.00     0.00  SatProblem::getGrand()
  0.00      0.40     0.00   300000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00      0.40     0.00   258993     0.00     0.00  SatProblem::getClVec(int)
  0.00      0.40     0.00   233504     0.00     0.00  SatProblem::getFixedClausei(int)
  0.00      0.40     0.00   172600     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.00      0.40     0.00   151837     0.00     0.00  SatProblem::getNumSat()
  0.00      0.40     0.00   150049     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      0.40     0.00   149985     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00      0.40     0.00    93621     0.00     0.00  SatProblem::getCnjSize(int)
  0.00      0.40     0.00    52893     0.00     0.00  SatProblem::getCnf(int)
  0.00      0.40     0.00    47277     0.00     0.00  SampleSAT::walk()
  0.00      0.40     0.00    45463     0.00     0.00  SatProblem::addNumSat(int)
  0.00      0.40     0.00    45463     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.00      0.40     0.00    23598     0.00     0.00  SampleSAT::simAnnealing()
  0.00      0.40     0.00    23598     0.00     0.00  SampleSAT::getTemp()
  0.00      0.40     0.00    22447     0.00     0.00  SatProblem::setAtom(int, int)
  0.00      0.40     0.00    22447     0.00     0.00  SatProblem::rewriteWL(int, int)
  0.00      0.40     0.00    22447     0.00     0.00  SatProblem::setClause(int, int)
  0.00      0.40     0.00    22447     0.00     0.00  SliceSampling::unitProc(int, int)
  0.00      0.40     0.00    22447     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.40     0.00    22447     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      0.40     0.00    22447     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.40     0.00    22447     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      0.40     0.00    22447     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.40     0.00    22447     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.40     0.00    12004     0.00     0.01  SampleSAT::greedyWalk()
  0.00      0.40     0.00    11675     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.00      0.40     0.00    11675     0.00     0.00  SampleSAT::randomWalk()
  0.00      0.40     0.00    10000     0.00     0.00  SatProblem::cpClVector()
  0.00      0.40     0.00    10000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.00      0.40     0.00    10000     0.00     0.00  SatProblem::getNumFixedAtom()
  0.00      0.40     0.00    10000     0.00     0.00  SatProblem::getNumFixedClause()
  0.00      0.40     0.00    10000     0.00     0.00  SliceSampling::sampleU()
  0.00      0.40     0.00    10000     0.00     0.00  SampleSAT::init_model()
  0.00      0.40     0.00    10000     0.00     0.01  SampleSAT::solve(SatProblem*, int*)
  0.00      0.40     0.00     1500     0.00     0.00  std::abs(double)
  0.00      0.40     0.00      200     0.00     0.00  SliceSampling::normalize(double*, int)
  0.00      0.40     0.00      124     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      0.40     0.00      120     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00      0.40     0.00      100     0.00     0.00  SatProblem::updateTheta(double*)
  0.00      0.40     0.00       64     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      0.40     0.00       64     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.40     0.00       64     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      0.40     0.00       64     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      0.40     0.00       64     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00      0.40     0.00       60     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00      0.40     0.00       60     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00      0.40     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00      0.40     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00      0.40     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00      0.40     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00      0.40     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.40     0.00       60     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00      0.40     0.00       60     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00      0.40     0.00       60     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00      0.40     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00       60     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00       60     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00      0.40     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00      0.40     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00      0.40     0.00       19     0.00     0.00  SatProblem::getNumVariables()
  0.00      0.40     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00      0.40     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00      0.40     0.00       10     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00      0.40     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00      0.40     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00      0.40     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00      0.40     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.40     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.40     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.40     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.40     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.40     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.40     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.40     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.40     0.00        4     0.00     0.00  Timer::Timer()
  0.00      0.40     0.00        4     0.00     0.00  Timer::~Timer()
  0.00      0.40     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.40     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00      0.40     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00      0.40     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00      0.40     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00      0.40     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      0.40     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00      0.40     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00      0.40     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      0.40     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00      0.40     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00      0.40     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00      0.40     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.40     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00      0.40     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00      0.40     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00      0.40     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00      0.40     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.40     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.40     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      0.40     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00      0.40     0.00        1     0.00     0.00  global constructors keyed to SatProblem::SatProblem(unsigned long, bool)
  0.00      0.40     0.00        1     0.00     0.00  global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00      0.40     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00      0.40     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.40     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.40     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.40     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.40     0.00        1     0.00     0.01  SatProblem::parseCnfFile(char*)
  0.00      0.40     0.00        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00      0.40     0.00        1     0.00     0.00  SatProblem::getNumClauses()
  0.00      0.40     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00      0.40     0.00        1     0.00     0.01  SatProblem::allocate()
  0.00      0.40     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00      0.40     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::printUnitTime()
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::init()
  0.00      0.40     0.00        1     0.00   399.99  SliceSampling::learn(int*, char*, int)
  0.00      0.40     0.00        1     0.00    30.00  SliceSampling::readdata(char*, int)
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::destlearn(int)
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::lallocate(int)
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00      0.40     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00      0.40     0.00        1     0.00     0.00  Random::Random()
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00      0.40     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 2.50% of 0.40 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.40                 main [1]
                0.00    0.40       1/1           SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [56]
                0.00    0.00       1/1           SatProblem::~SatProblem() [68]
                0.00    0.00       4/85500       Timer::time() [19]
                0.00    0.00      17/19          SatProblem::getNumVariables() [127]
                0.00    0.00       2/10          Timer::printTime(std::ostream&, double const&) [130]
                0.00    0.00       1/4           Timer::Timer() [139]
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [174]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [173]
                0.00    0.00       1/1           SatProblem::parseSliFile(char*) [171]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [166]
                0.00    0.00       1/1           printlParameters(learnparams*) [165]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180]
                0.00    0.00       1/1           SliceSampling::printUnitTime() [175]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [177]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [189]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [181]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [191]
                0.00    0.00       1/4           Timer::~Timer() [140]
-----------------------------------------------
                0.00    0.40       1/1           main [1]
[2]    100.0    0.00    0.40       1         SliceSampling::learn(int*, char*, int) [2]
                0.06    0.31       1/1           SliceSampling::cdlearn(int) [3]
                0.00    0.03       1/1           SliceSampling::readdata(char*, int) [12]
                0.00    0.00       2/85500       Timer::time() [19]
                0.00    0.00      15/4894515     SatProblem::getTheta(int) [26]
                0.00    0.00       1/1           SliceSampling::lallocate(int) [179]
                0.00    0.00       1/10          Timer::printTime(std::ostream&, double const&) [130]
                0.00    0.00       1/1           SliceSampling::destlearn(int) [178]
-----------------------------------------------
                0.06    0.31       1/1           SliceSampling::learn(int*, char*, int) [2]
[3]     92.5    0.06    0.31       1         SliceSampling::cdlearn(int) [3]
                0.01    0.28   10000/10000       SliceSampling::sampleX() [4]
                0.01    0.00 4594500/4894515     SatProblem::getTheta(int) [26]
                0.00    0.01   10000/10000       SliceSampling::sampleU() [38]
                0.00    0.00   10000/405704      SatProblem::getGrand() [17]
                0.00    0.00     600/85500       Timer::time() [19]
                0.00    0.00 1294500/1294500     SatProblem::getRealProb(int) [80]
                0.00    0.00     200/200         SliceSampling::normalize(double*, int) [109]
                0.00    0.00     100/100         SatProblem::updateTheta(double*) [112]
                0.00    0.00       3/10          Timer::printTime(std::ostream&, double const&) [130]
-----------------------------------------------
                0.01    0.28   10000/10000       SliceSampling::cdlearn(int) [3]
[4]     71.9    0.01    0.28   10000         SliceSampling::sampleX() [4]
                0.00    0.14   10000/10000       SampleSAT::solve(SatProblem*, int*) [5]
                0.05    0.06   10000/10000       SatProblem::initParams() [7]
                0.00    0.03   22447/22447       SliceSampling::unitProc(int, int) [13]
                0.01    0.00   40000/85500       Timer::time() [19]
                0.00    0.00  150000/4894515     SatProblem::getTheta(int) [26]
                0.00    0.00   10000/10000       SatProblem::getNumFixedAtom() [106]
                0.00    0.00   10000/10000       SatProblem::getNumFixedClause() [107]
-----------------------------------------------
                0.00    0.14   10000/10000       SliceSampling::sampleX() [4]
[5]     33.9    0.00    0.14   10000         SampleSAT::solve(SatProblem*, int*) [5]
                0.00    0.13   47277/47277       SampleSAT::walk() [6]
                0.00    0.01   10000/10000       SampleSAT::init_model() [39]
                0.00    0.00   10000/10000       SatProblem::initSatCheck(int*) [49]
                0.00    0.00   10000/10000       SatProblem::cpClVector() [105]
-----------------------------------------------
                0.00    0.13   47277/47277       SampleSAT::solve(SatProblem*, int*) [5]
[6]     31.9    0.00    0.13   47277         SampleSAT::walk() [6]
                0.00    0.09   12004/12004       SampleSAT::greedyWalk() [9]
                0.00    0.02   23598/23598       SampleSAT::simAnnealing() [15]
                0.00    0.02   11675/11675       SampleSAT::randomWalk() [24]
                0.00    0.00   70956/405704      SatProblem::getGrand() [17]
                0.00    0.00   92740/151837      SatProblem::getNumSat() [96]
-----------------------------------------------
                0.05    0.06   10000/10000       SliceSampling::sampleX() [4]
[7]     26.4    0.05    0.06   10000         SatProblem::initParams() [7]
                0.01    0.02  420000/420060      std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.00    0.02  149985/149985      std::list<int, std::allocator<int> >::clear() [22]
                0.00    0.00  869985/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.00    0.00  300000/300000      std::list<int, std::allocator<int> >::empty() const [92]
-----------------------------------------------
                0.01    0.01   23598/175737      SampleSAT::simAnnealing() [15]
                0.03    0.05  152139/175737      SampleSAT::greedyWalk() [9]
[8]     24.4    0.04    0.06  175737         SatProblem::getNsc2(int*, int) [8]
                0.02    0.00 1380264/1850848     std::_List_iterator<int>::operator++(int) [14]
                0.01    0.00 2786160/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.01    0.00 2083212/3133929     std::list<int, std::allocator<int> >::end() [29]
                0.01    0.00 2083212/2713869     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [32]
                0.01    0.00  690132/1251288     SatProblem::isSatCnj(int*, int) [33]
                0.00    0.00 1380264/2113536     std::_List_iterator<int>::operator*() const [48]
                0.00    0.00  702948/863021      std::list<int, std::allocator<int> >::begin() [50]
-----------------------------------------------
                0.00    0.09   12004/12004       SampleSAT::walk() [6]
[9]     21.9    0.00    0.09   12004         SampleSAT::greedyWalk() [9]
                0.03    0.05  152139/175737      SatProblem::getNsc2(int*, int) [8]
                0.00    0.00   12004/45463       SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  180060/410218      SatProblem::getVar(int) [91]
                0.00    0.00   23824/151837      SatProblem::getNumSat() [96]
                0.00    0.00   12004/45463       SatProblem::addNumSat(int) [99]
-----------------------------------------------
                0.00    0.00      60/420060      SatProblem::parseCnfFile(char*) [56]
                0.01    0.02  420000/420060      SatProblem::initParams() [7]
[10]     8.0    0.01    0.02  420060         std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.00    0.02  420060/420060      std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [21]
                0.00    0.00  420060/3133929     std::list<int, std::allocator<int> >::end() [29]
-----------------------------------------------
                0.03    0.00    2000/2000        SliceSampling::readdata(char*, int) [12]
[11]     7.5    0.03    0.00    2000         SliceSampling::modelcheck(int) [11]
-----------------------------------------------
                0.00    0.03       1/1           SliceSampling::learn(int*, char*, int) [2]
[12]     7.5    0.00    0.03       1         SliceSampling::readdata(char*, int) [12]
                0.03    0.00    2000/2000        SliceSampling::modelcheck(int) [11]
-----------------------------------------------
                0.00    0.03   22447/22447       SliceSampling::sampleX() [4]
[13]     6.6    0.00    0.03   22447         SliceSampling::unitProc(int, int) [13]
                0.00    0.02   22447/22447       SatProblem::rewriteWL(int, int) [25]
                0.01    0.00   44894/85500       Timer::time() [19]
                0.00    0.00   22447/22447       SatProblem::setClause(int, int) [51]
                0.00    0.00   22447/22447       SatProblem::setAtom(int, int) [101]
-----------------------------------------------
                0.00    0.00   10320/1850848     SatProblem::setClause(int, int) [51]
                0.00    0.00  197576/1850848     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  262688/1850848     SatProblem::afterFlip(int*, int) [30]
                0.02    0.00 1380264/1850848     SatProblem::getNsc2(int*, int) [8]
[14]     6.2    0.03    0.00 1850848         std::_List_iterator<int>::operator++(int) [14]
-----------------------------------------------
                0.00    0.02   23598/23598       SampleSAT::walk() [6]
[15]     5.3    0.00    0.02   23598         SampleSAT::simAnnealing() [15]
                0.01    0.01   23598/175737      SatProblem::getNsc2(int*, int) [8]
                0.00    0.01   21784/45463       SatProblem::afterFlip(int*, int) [30]
                0.00    0.00   47195/405704      SatProblem::getGrand() [17]
                0.00    0.00   28413/410218      SatProblem::getVar(int) [91]
                0.00    0.00   23598/23598       SampleSAT::getTemp() [100]
                0.00    0.00   23598/151837      SatProblem::getNumSat() [96]
                0.00    0.00   21784/45463       SatProblem::addNumSat(int) [99]
-----------------------------------------------
                0.00    0.00      60/4446935     SatProblem::parseCnfFile(char*) [56]
                0.00    0.00   55214/4446935     SatProblem::setClause(int, int) [51]
                0.00    0.00  290976/4446935     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  444540/4446935     SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  869985/4446935     SatProblem::initParams() [7]
                0.01    0.00 2786160/4446935     SatProblem::getNsc2(int*, int) [8]
[16]     5.0    0.02    0.00 4446935         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
-----------------------------------------------
                0.00    0.00   10000/405704      SliceSampling::cdlearn(int) [3]
                0.00    0.00   47195/405704      SampleSAT::simAnnealing() [15]
                0.00    0.00   70956/405704      SampleSAT::walk() [6]
                0.00    0.01  127553/405704      SampleSAT::init_model() [39]
                0.00    0.01  150000/405704      SliceSampling::sampleU() [38]
[17]     5.0    0.00    0.02  405704         SatProblem::getGrand() [17]
                0.02    0.00  405704/405704      Random::genrand() [18]
-----------------------------------------------
                0.02    0.00  405704/405704      SatProblem::getGrand() [17]
[18]     5.0    0.02    0.00  405704         Random::genrand() [18]
-----------------------------------------------
                0.00    0.00       2/85500       SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       4/85500       main [1]
                0.00    0.00     600/85500       SliceSampling::cdlearn(int) [3]
                0.01    0.00   40000/85500       SliceSampling::sampleX() [4]
                0.01    0.00   44894/85500       SliceSampling::unitProc(int, int) [13]
[19]     5.0    0.02    0.00   85500         Timer::time() [19]
-----------------------------------------------
                0.00    0.02  420060/420060      std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [21]
[20]     5.0    0.00    0.02  420060         std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
                0.01    0.00  420060/420060      __gnu_cxx::new_allocator<int>::construct(int*, int const&) [34]
                0.01    0.00  420060/840120      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [23]
                0.00    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_get_node() [90]
                0.00    0.00  420060/840180      std::allocator<int>::~allocator() [83]
-----------------------------------------------
                0.00    0.02  420060/420060      std::list<int, std::allocator<int> >::push_back(int const&) [10]
[21]     5.0    0.00    0.02  420060         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [21]
                0.00    0.02  420060/420060      std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
-----------------------------------------------
                0.00    0.02  149985/149985      SatProblem::initParams() [7]
[22]     5.0    0.00    0.02  149985         std::list<int, std::allocator<int> >::clear() [22]
                0.00    0.01  149985/150049      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
                0.00    0.00  149985/150049      std::_List_base<int, std::allocator<int> >::_M_init() [42]
-----------------------------------------------
                0.01    0.00  420060/840120      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
                0.01    0.00  420060/840120      std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
[23]     5.0    0.01    0.01  840120         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [23]
                0.00    0.00  840120/840180      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [37]
                0.00    0.00  840120/840180      std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [82]
-----------------------------------------------
                0.00    0.02   11675/11675       SampleSAT::walk() [6]
[24]     3.8    0.00    0.02   11675         SampleSAT::randomWalk() [24]
                0.00    0.01   11675/11675       SatProblem::getNsc1(int*, int) [31]
                0.01    0.00   52893/52893       SatProblem::getCnj(int, int) [43]
                0.00    0.00  513708/513708      SatProblem::getClVecSize() [84]
                0.00    0.00  258993/258993      SatProblem::getClVec(int) [93]
                0.00    0.00  233504/233504      SatProblem::getFixedClausei(int) [94]
                0.00    0.00   93621/93621       SatProblem::getCnjSize(int) [97]
                0.00    0.00   29298/410218      SatProblem::getVar(int) [91]
                0.00    0.00   11675/151837      SatProblem::getNumSat() [96]
                0.00    0.00   11675/45463       SatProblem::addNumSat(int) [99]
-----------------------------------------------
                0.00    0.02   22447/22447       SliceSampling::unitProc(int, int) [13]
[25]     3.8    0.00    0.02   22447         SatProblem::rewriteWL(int, int) [25]
                0.00    0.01   22447/22447       std::vector<int, std::allocator<int> >::~vector() [27]
                0.00    0.00   22447/22447       std::vector<int, std::allocator<int> >::vector() [55]
-----------------------------------------------
                0.00    0.00      15/4894515     SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00  150000/4894515     SliceSampling::sampleU() [38]
                0.00    0.00  150000/4894515     SliceSampling::sampleX() [4]
                0.01    0.00 4594500/4894515     SliceSampling::cdlearn(int) [3]
[26]     3.8    0.01    0.00 4894515         SatProblem::getTheta(int) [26]
-----------------------------------------------
                0.00    0.01   22447/22447       SatProblem::rewriteWL(int, int) [25]
[27]     3.8    0.00    0.01   22447         std::vector<int, std::allocator<int> >::~vector() [27]
                0.00    0.01   22447/22447       void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [36]
                0.00    0.01   22447/22447       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [46]
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [104]
-----------------------------------------------
                0.00    0.00      64/150049      std::_List_base<int, std::allocator<int> >::~_List_base() [57]
                0.00    0.01  149985/150049      std::list<int, std::allocator<int> >::clear() [22]
[28]     3.7    0.00    0.01  150049         std::_List_base<int, std::allocator<int> >::_M_clear() [28]
                0.01    0.00  420060/840120      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [23]
                0.01    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [41]
                0.00    0.00  420060/420060      __gnu_cxx::new_allocator<int>::destroy(int*) [88]
                0.00    0.00  420060/840180      std::allocator<int>::~allocator() [83]
-----------------------------------------------
                0.00    0.00   32767/3133929     SatProblem::setClause(int, int) [51]
                0.00    0.00  244276/3133929     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  353614/3133929     SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  420060/3133929     std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.01    0.00 2083212/3133929     SatProblem::getNsc2(int*, int) [8]
[29]     3.5    0.01    0.00 3133929         std::list<int, std::allocator<int> >::end() [29]
                0.00    0.00 3133929/3996950     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [47]
-----------------------------------------------
                0.00    0.00   11675/45463       SatProblem::getNsc1(int*, int) [31]
                0.00    0.00   12004/45463       SampleSAT::greedyWalk() [9]
                0.00    0.01   21784/45463       SampleSAT::simAnnealing() [15]
[30]     3.0    0.00    0.01   45463         SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  262688/1850848     std::_List_iterator<int>::operator++(int) [14]
                0.00    0.00  262688/1251288     SatProblem::isSatCnj(int*, int) [33]
                0.00    0.00  444540/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.00    0.00  353614/3133929     std::list<int, std::allocator<int> >::end() [29]
                0.00    0.00  353614/2713869     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [32]
                0.00    0.00  525376/2113536     std::_List_iterator<int>::operator*() const [48]
                0.00    0.00   90926/863021      std::list<int, std::allocator<int> >::begin() [50]
-----------------------------------------------
                0.00    0.01   11675/11675       SampleSAT::randomWalk() [24]
[31]     2.6    0.00    0.01   11675         SatProblem::getNsc1(int*, int) [31]
                0.00    0.00   11675/45463       SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  197576/1850848     std::_List_iterator<int>::operator++(int) [14]
                0.00    0.00  290976/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.00    0.00  244276/3133929     std::list<int, std::allocator<int> >::end() [29]
                0.00    0.00  244276/2713869     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [32]
                0.00    0.00   98788/1251288     SatProblem::isSatCnj(int*, int) [33]
                0.00    0.00  197576/2113536     std::_List_iterator<int>::operator*() const [48]
                0.00    0.00   46700/863021      std::list<int, std::allocator<int> >::begin() [50]
-----------------------------------------------
                0.00    0.00   32767/2713869     SatProblem::setClause(int, int) [51]
                0.00    0.00  244276/2713869     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  353614/2713869     SatProblem::afterFlip(int*, int) [30]
                0.01    0.00 2083212/2713869     SatProblem::getNsc2(int*, int) [8]
[32]     2.5    0.01    0.00 2713869         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [32]
-----------------------------------------------
                0.00    0.00   98788/1251288     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  199680/1251288     SatProblem::initSatCheck(int*) [49]
                0.00    0.00  262688/1251288     SatProblem::afterFlip(int*, int) [30]
                0.01    0.00  690132/1251288     SatProblem::getNsc2(int*, int) [8]
[33]     2.5    0.01    0.00 1251288         SatProblem::isSatCnj(int*, int) [33]
-----------------------------------------------
                0.01    0.00  420060/420060      std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
[34]     2.5    0.01    0.00  420060         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [34]
                0.00    0.00  420060/420120      operator new(unsigned int, void*) [85]
-----------------------------------------------
                0.01    0.00   22447/22447       void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [36]
[35]     2.5    0.01    0.00   22447         void std::_Destroy<int*>(int*, int*) [35]
                0.00    0.00   22447/22447       void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [102]
-----------------------------------------------
                0.00    0.01   22447/22447       std::vector<int, std::allocator<int> >::~vector() [27]
[36]     2.5    0.00    0.01   22447         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [36]
                0.01    0.00   22447/22447       void std::_Destroy<int*>(int*, int*) [35]
-----------------------------------------------
                0.00    0.00      60/840180      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
                0.00    0.00  840120/840180      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [23]
[37]     2.5    0.01    0.00  840180         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [37]
                0.00    0.00  840180/862627      __gnu_cxx::new_allocator<int>::new_allocator() [40]
-----------------------------------------------
                0.00    0.01   10000/10000       SliceSampling::cdlearn(int) [3]
[38]     2.0    0.00    0.01   10000         SliceSampling::sampleU() [38]
                0.00    0.01  150000/405704      SatProblem::getGrand() [17]
                0.00    0.00  150000/4894515     SatProblem::getTheta(int) [26]
-----------------------------------------------
                0.00    0.01   10000/10000       SampleSAT::solve(SatProblem*, int*) [5]
[39]     1.6    0.00    0.01   10000         SampleSAT::init_model() [39]
                0.00    0.01  127553/405704      SatProblem::getGrand() [17]
                0.00    0.00  172447/410218      SatProblem::getVar(int) [91]
-----------------------------------------------
                0.00    0.00   22447/862627      std::allocator<int>::allocator() [52]
                0.00    0.00  840180/862627      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [37]
[40]     1.2    0.01    0.00  862627         __gnu_cxx::new_allocator<int>::new_allocator() [40]
-----------------------------------------------
                0.01    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
[41]     1.2    0.01    0.00  420060         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [41]
                0.00    0.00  420060/420060      __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [86]
-----------------------------------------------
                0.00    0.00       4/150049      std::_List_base<int, std::allocator<int> >::_List_base() [75]
                0.00    0.00      60/150049      std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
                0.00    0.00  149985/150049      std::list<int, std::allocator<int> >::clear() [22]
[42]     1.2    0.01    0.00  150049         std::_List_base<int, std::allocator<int> >::_M_init() [42]
-----------------------------------------------
                0.01    0.00   52893/52893       SampleSAT::randomWalk() [24]
[43]     1.2    0.01    0.00   52893         SatProblem::getCnj(int, int) [43]
                0.00    0.00   52893/52893       SatProblem::getCnf(int) [98]
-----------------------------------------------
                0.01    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
[44]     1.2    0.01    0.00   22447         std::allocator<int>::~allocator() [44]
                0.00    0.00   22447/862627      __gnu_cxx::new_allocator<int>::~new_allocator() [81]
-----------------------------------------------
                0.00    0.01   22447/22447       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [46]
[45]     1.2    0.00    0.01   22447         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
                0.01    0.00   22447/22447       std::allocator<int>::~allocator() [44]
-----------------------------------------------
                0.00    0.01   22447/22447       std::vector<int, std::allocator<int> >::~vector() [27]
[46]     1.2    0.00    0.01   22447         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [46]
                0.00    0.01   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [45]
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [103]
-----------------------------------------------
                0.00    0.00  863021/3996950     std::list<int, std::allocator<int> >::begin() [50]
                0.00    0.00 3133929/3996950     std::list<int, std::allocator<int> >::end() [29]
[47]     1.2    0.00    0.00 3996950         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [47]
-----------------------------------------------
                0.00    0.00   10320/2113536     SatProblem::setClause(int, int) [51]
                0.00    0.00  197576/2113536     SatProblem::getNsc1(int*, int) [31]
                0.00    0.00  525376/2113536     SatProblem::afterFlip(int*, int) [30]
                0.00    0.00 1380264/2113536     SatProblem::getNsc2(int*, int) [8]
[48]     1.2    0.00    0.00 2113536         std::_List_iterator<int>::operator*() const [48]
-----------------------------------------------
                0.00    0.00   10000/10000       SampleSAT::solve(SatProblem*, int*) [5]
[49]     0.4    0.00    0.00   10000         SatProblem::initSatCheck(int*) [49]
                0.00    0.00  199680/1251288     SatProblem::isSatCnj(int*, int) [33]
-----------------------------------------------
                0.00    0.00   22447/863021      SatProblem::setClause(int, int) [51]
                0.00    0.00   46700/863021      SatProblem::getNsc1(int*, int) [31]
                0.00    0.00   90926/863021      SatProblem::afterFlip(int*, int) [30]
                0.00    0.00  702948/863021      SatProblem::getNsc2(int*, int) [8]
[50]     0.3    0.00    0.00  863021         std::list<int, std::allocator<int> >::begin() [50]
                0.00    0.00  863021/3996950     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [47]
-----------------------------------------------
                0.00    0.00   22447/22447       SliceSampling::unitProc(int, int) [13]
[51]     0.2    0.00    0.00   22447         SatProblem::setClause(int, int) [51]
                0.00    0.00   55214/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.00    0.00   32767/3133929     std::list<int, std::allocator<int> >::end() [29]
                0.00    0.00   10320/1850848     std::_List_iterator<int>::operator++(int) [14]
                0.00    0.00   32767/2713869     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [32]
                0.00    0.00   22447/863021      std::list<int, std::allocator<int> >::begin() [50]
                0.00    0.00   10320/2113536     std::_List_iterator<int>::operator*() const [48]
-----------------------------------------------
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [53]
[52]     0.0    0.00    0.00   22447         std::allocator<int>::allocator() [52]
                0.00    0.00   22447/862627      __gnu_cxx::new_allocator<int>::new_allocator() [40]
-----------------------------------------------
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_base() [54]
[53]     0.0    0.00    0.00   22447         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [53]
                0.00    0.00   22447/22447       std::allocator<int>::allocator() [52]
-----------------------------------------------
                0.00    0.00   22447/22447       std::vector<int, std::allocator<int> >::vector() [55]
[54]     0.0    0.00    0.00   22447         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [54]
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [53]
-----------------------------------------------
                0.00    0.00   22447/22447       SatProblem::rewriteWL(int, int) [25]
[55]     0.0    0.00    0.00   22447         std::vector<int, std::allocator<int> >::vector() [55]
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::_Vector_base() [54]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[56]     0.0    0.00    0.00       1         SatProblem::parseCnfFile(char*) [56]
                0.00    0.00       1/1           SatProblem::allocate() [59]
                0.00    0.00      60/420060      std::list<int, std::allocator<int> >::push_back(int const&) [10]
                0.00    0.00      60/4446935     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
-----------------------------------------------
                0.00    0.00      64/64          std::list<int, std::allocator<int> >::~list() [58]
[57]     0.0    0.00    0.00      64         std::_List_base<int, std::allocator<int> >::~_List_base() [57]
                0.00    0.00      64/150049      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [115]
-----------------------------------------------
                0.00    0.00       4/64          SatProblem::allocate() [59]
                0.00    0.00      60/64          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [60]
[58]     0.0    0.00    0.00      64         std::list<int, std::allocator<int> >::~list() [58]
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::~_List_base() [57]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [56]
[59]     0.0    0.00    0.00       1         SatProblem::allocate() [59]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [66]
                0.00    0.00       4/64          std::list<int, std::allocator<int> >::~list() [58]
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [76]
-----------------------------------------------
                0.00    0.00      60/60          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [61]
[60]     0.0    0.00    0.00      60         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [60]
                0.00    0.00      60/64          std::list<int, std::allocator<int> >::~list() [58]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [62]
[61]     0.0    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [61]
                0.00    0.00      60/60          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [60]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [63]
[62]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [62]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [61]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [67]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[63]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [63]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [62]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [65]
[64]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [63]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [126]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [128]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [138]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [146]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [157]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [145]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [151]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [134]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [66]
[65]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [65]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [59]
[66]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [66]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [65]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [125]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [156]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [68]
[67]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [67]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [63]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [126]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [155]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[68]     0.0    0.00    0.00       1         SatProblem::~SatProblem() [68]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [67]
                0.00    0.00       1/4           Timer::~Timer() [140]
-----------------------------------------------
                0.00    0.00      60/60          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
[69]     0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
                0.00    0.00      60/840180      std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [37]
                0.00    0.00      60/840180      std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [82]
                0.00    0.00      60/840180      std::allocator<int>::~allocator() [83]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::end() const [118]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::begin() const [119]
                0.00    0.00      60/60          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [124]
-----------------------------------------------
                0.00    0.00      60/60          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[70]     0.0    0.00    0.00      60         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
                0.00    0.00      60/420120      operator new(unsigned int, void*) [85]
-----------------------------------------------
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [72]
[71]     0.0    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [71]
                0.00    0.00      60/60          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
-----------------------------------------------
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
[72]     0.0    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [72]
                0.00    0.00       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [71]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[73]     0.0    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [72]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
[74]     0.0    0.00    0.00      60         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
                0.00    0.00      60/150049      std::_List_base<int, std::allocator<int> >::_M_init() [42]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [120]
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [123]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::~allocator() [122]
-----------------------------------------------
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [76]
[75]     0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [75]
                0.00    0.00       4/150049      std::_List_base<int, std::allocator<int> >::_M_init() [42]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [150]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [59]
[76]     0.0    0.00    0.00       4         std::list<int, std::allocator<int> >::list() [76]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [75]
-----------------------------------------------
                0.00    0.00 1294500/1294500     SliceSampling::cdlearn(int) [3]
[80]     0.0    0.00    0.00 1294500         SatProblem::getRealProb(int) [80]
-----------------------------------------------
                0.00    0.00   22447/862627      std::allocator<int>::~allocator() [44]
                0.00    0.00  840180/862627      std::allocator<int>::~allocator() [83]
[81]     0.0    0.00    0.00  862627         __gnu_cxx::new_allocator<int>::~new_allocator() [81]
-----------------------------------------------
                0.00    0.00      60/840180      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
                0.00    0.00  840120/840180      std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [23]
[82]     0.0    0.00    0.00  840180         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [82]
-----------------------------------------------
                0.00    0.00      60/840180      std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
                0.00    0.00  420060/840180      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
                0.00    0.00  420060/840180      std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
[83]     0.0    0.00    0.00  840180         std::allocator<int>::~allocator() [83]
                0.00    0.00  840180/862627      __gnu_cxx::new_allocator<int>::~new_allocator() [81]
-----------------------------------------------
                0.00    0.00  513708/513708      SampleSAT::randomWalk() [24]
[84]     0.0    0.00    0.00  513708         SatProblem::getClVecSize() [84]
-----------------------------------------------
                0.00    0.00      60/420120      void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
                0.00    0.00  420060/420120      __gnu_cxx::new_allocator<int>::construct(int*, int const&) [34]
[85]     0.0    0.00    0.00  420120         operator new(unsigned int, void*) [85]
-----------------------------------------------
                0.00    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [41]
[86]     0.0    0.00    0.00  420060         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [86]
-----------------------------------------------
                0.00    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_get_node() [90]
[87]     0.0    0.00    0.00  420060         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [87]
                0.00    0.00  420060/420060      __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [89]
-----------------------------------------------
                0.00    0.00  420060/420060      std::_List_base<int, std::allocator<int> >::_M_clear() [28]
[88]     0.0    0.00    0.00  420060         __gnu_cxx::new_allocator<int>::destroy(int*) [88]
-----------------------------------------------
                0.00    0.00  420060/420060      __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [87]
[89]     0.0    0.00    0.00  420060         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [89]
-----------------------------------------------
                0.00    0.00  420060/420060      std::list<int, std::allocator<int> >::_M_create_node(int const&) [20]
[90]     0.0    0.00    0.00  420060         std::_List_base<int, std::allocator<int> >::_M_get_node() [90]
                0.00    0.00  420060/420060      __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [87]
-----------------------------------------------
                0.00    0.00   28413/410218      SampleSAT::simAnnealing() [15]
                0.00    0.00   29298/410218      SampleSAT::randomWalk() [24]
                0.00    0.00  172447/410218      SampleSAT::init_model() [39]
                0.00    0.00  180060/410218      SampleSAT::greedyWalk() [9]
[91]     0.0    0.00    0.00  410218         SatProblem::getVar(int) [91]
-----------------------------------------------
                0.00    0.00  300000/300000      SatProblem::initParams() [7]
[92]     0.0    0.00    0.00  300000         std::list<int, std::allocator<int> >::empty() const [92]
-----------------------------------------------
                0.00    0.00  258993/258993      SampleSAT::randomWalk() [24]
[93]     0.0    0.00    0.00  258993         SatProblem::getClVec(int) [93]
-----------------------------------------------
                0.00    0.00  233504/233504      SampleSAT::randomWalk() [24]
[94]     0.0    0.00    0.00  233504         SatProblem::getFixedClausei(int) [94]
-----------------------------------------------
                0.00    0.00  172600/172600      SliceSampling::normalize(double*, int) [109]
[95]     0.0    0.00    0.00  172600         double const& std::max<double>(double const&, double const&) [95]
-----------------------------------------------
                0.00    0.00   11675/151837      SampleSAT::randomWalk() [24]
                0.00    0.00   23598/151837      SampleSAT::simAnnealing() [15]
                0.00    0.00   23824/151837      SampleSAT::greedyWalk() [9]
                0.00    0.00   92740/151837      SampleSAT::walk() [6]
[96]     0.0    0.00    0.00  151837         SatProblem::getNumSat() [96]
-----------------------------------------------
                0.00    0.00   93621/93621       SampleSAT::randomWalk() [24]
[97]     0.0    0.00    0.00   93621         SatProblem::getCnjSize(int) [97]
-----------------------------------------------
                0.00    0.00   52893/52893       SatProblem::getCnj(int, int) [43]
[98]     0.0    0.00    0.00   52893         SatProblem::getCnf(int) [98]
-----------------------------------------------
                0.00    0.00   11675/45463       SampleSAT::randomWalk() [24]
                0.00    0.00   12004/45463       SampleSAT::greedyWalk() [9]
                0.00    0.00   21784/45463       SampleSAT::simAnnealing() [15]
[99]     0.0    0.00    0.00   45463         SatProblem::addNumSat(int) [99]
-----------------------------------------------
                0.00    0.00   23598/23598       SampleSAT::simAnnealing() [15]
[100]    0.0    0.00    0.00   23598         SampleSAT::getTemp() [100]
-----------------------------------------------
                0.00    0.00   22447/22447       SliceSampling::unitProc(int, int) [13]
[101]    0.0    0.00    0.00   22447         SatProblem::setAtom(int, int) [101]
-----------------------------------------------
                0.00    0.00   22447/22447       void std::_Destroy<int*>(int*, int*) [35]
[102]    0.0    0.00    0.00   22447         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [102]
-----------------------------------------------
                0.00    0.00   22447/22447       std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [46]
[103]    0.0    0.00    0.00   22447         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [103]
-----------------------------------------------
                0.00    0.00   22447/22447       std::vector<int, std::allocator<int> >::~vector() [27]
[104]    0.0    0.00    0.00   22447         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [104]
-----------------------------------------------
                0.00    0.00   10000/10000       SampleSAT::solve(SatProblem*, int*) [5]
[105]    0.0    0.00    0.00   10000         SatProblem::cpClVector() [105]
-----------------------------------------------
                0.00    0.00   10000/10000       SliceSampling::sampleX() [4]
[106]    0.0    0.00    0.00   10000         SatProblem::getNumFixedAtom() [106]
-----------------------------------------------
                0.00    0.00   10000/10000       SliceSampling::sampleX() [4]
[107]    0.0    0.00    0.00   10000         SatProblem::getNumFixedClause() [107]
-----------------------------------------------
                0.00    0.00    1500/1500        SatProblem::updateTheta(double*) [112]
[108]    0.0    0.00    0.00    1500         std::abs(double) [108]
-----------------------------------------------
                0.00    0.00     200/200         SliceSampling::cdlearn(int) [3]
[109]    0.0    0.00    0.00     200         SliceSampling::normalize(double*, int) [109]
                0.00    0.00  172600/172600      double const& std::max<double>(double const&, double const&) [95]
-----------------------------------------------
                0.00    0.00      60/124         std::allocator<std::_List_node<int> >::~allocator() [122]
                0.00    0.00      64/124         std::allocator<std::_List_node<int> >::~allocator() [114]
[110]    0.0    0.00    0.00     124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [110]
-----------------------------------------------
                0.00    0.00      60/120         std::list<int, std::allocator<int> >::begin() const [119]
                0.00    0.00      60/120         std::list<int, std::allocator<int> >::end() const [118]
[111]    0.0    0.00    0.00     120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00     100/100         SliceSampling::cdlearn(int) [3]
[112]    0.0    0.00    0.00     100         SatProblem::updateTheta(double*) [112]
                0.00    0.00    1500/1500        std::abs(double) [108]
-----------------------------------------------
                0.00    0.00       4/64          std::allocator<std::_List_node<int> >::allocator() [147]
                0.00    0.00      60/64          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [120]
[113]    0.0    0.00    0.00      64         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [113]
-----------------------------------------------
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [115]
[114]    0.0    0.00    0.00      64         std::allocator<std::_List_node<int> >::~allocator() [114]
                0.00    0.00      64/124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [110]
-----------------------------------------------
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::~_List_base() [57]
[115]    0.0    0.00    0.00      64         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [115]
                0.00    0.00      64/64          std::allocator<std::_List_node<int> >::~allocator() [114]
-----------------------------------------------
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [121]
[116]    0.0    0.00    0.00      60         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [116]
-----------------------------------------------
                0.00    0.00      60/60          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [124]
[117]    0.0    0.00    0.00      60         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [117]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
[118]    0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::end() const [118]
                0.00    0.00      60/120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
[119]    0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::begin() const [119]
                0.00    0.00      60/120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [111]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
[120]    0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [120]
                0.00    0.00      60/64          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [113]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [123]
[121]    0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [121]
                0.00    0.00      60/60          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [116]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
[122]    0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::~allocator() [122]
                0.00    0.00      60/124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [110]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [74]
[123]    0.0    0.00    0.00      60         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [123]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [121]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [69]
[124]    0.0    0.00    0.00      60         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [124]
                0.00    0.00      60/60          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [117]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [66]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [146]
[125]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [125]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [67]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[126]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [126]
-----------------------------------------------
                0.00    0.00       1/19          SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
                0.00    0.00       1/19          SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180]
                0.00    0.00      17/19          main [1]
[127]    0.0    0.00    0.00      19         SatProblem::getNumVariables() [127]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [145]
[128]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [128]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [142]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
[129]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [129]
-----------------------------------------------
                0.00    0.00       1/10          SliceSampling::learn(int*, char*, int) [2]
                0.00    0.00       2/10          main [1]
                0.00    0.00       3/10          SliceSampling::cdlearn(int) [3]
                0.00    0.00       4/10          SliceSampling::printUnitTime() [175]
[130]    0.0    0.00    0.00      10         Timer::printTime(std::ostream&, double const&) [130]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [156]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [157]
[131]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
[132]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [132]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [146]
[133]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [132]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [129]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [155]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[134]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [134]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [141]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
[135]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [135]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [137]
[136]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [135]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [138]
[137]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [137]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[138]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [138]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [137]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [174]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180]
[139]    0.0    0.00    0.00       4         Timer::Timer() [139]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [68]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [191]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [181]
[140]    0.0    0.00    0.00       4         Timer::~Timer() [140]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [134]
[141]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [141]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [151]
[142]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [142]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [129]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [148]
[143]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [149]
[144]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [144]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[145]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [145]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [128]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[146]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [146]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [125]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [133]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [159]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [150]
[147]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [147]
                0.00    0.00       4/64          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [113]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [152]
[148]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [148]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [153]
[149]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [149]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [144]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [75]
[150]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [150]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [147]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[151]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [151]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [142]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [154]
[152]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [152]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [148]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [155]
[153]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [153]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [149]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [158]
[154]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [154]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [152]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [67]
[155]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [155]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [134]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [153]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [66]
[156]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [156]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [64]
[157]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [157]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [131]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [174]
[158]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [158]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [154]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [146]
[159]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [159]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [174]
[160]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [160]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [303]
[161]    0.0    0.00    0.00       1         global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [161]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [168]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [303]
[162]    0.0    0.00    0.00       1         global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [162]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [170]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [303]
[163]    0.0    0.00    0.00       1         global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [163]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [169]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [303]
[164]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [164]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[165]    0.0    0.00    0.00       1         printlParameters(learnparams*) [165]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[166]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [166]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [164]
[167]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [161]
[168]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [168]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [163]
[169]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [169]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [162]
[170]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [170]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[171]    0.0    0.00    0.00       1         SatProblem::parseSliFile(char*) [171]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[172]    0.0    0.00    0.00       1         SatProblem::getNumClauses() [172]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[173]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [173]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[174]    0.0    0.00    0.00       1         SatProblem::SatProblem(unsigned long, bool) [174]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [158]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [160]
                0.00    0.00       1/1           Random::Random() [183]
                0.00    0.00       1/4           Timer::Timer() [139]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [182]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[175]    0.0    0.00    0.00       1         SliceSampling::printUnitTime() [175]
                0.00    0.00       4/10          Timer::printTime(std::ostream&, double const&) [130]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180]
[176]    0.0    0.00    0.00       1         SliceSampling::init() [176]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[177]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [177]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::learn(int*, char*, int) [2]
[178]    0.0    0.00    0.00       1         SliceSampling::destlearn(int) [178]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::learn(int*, char*, int) [2]
[179]    0.0    0.00    0.00       1         SliceSampling::lallocate(int) [179]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[180]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [180]
                0.00    0.00       1/4           Timer::Timer() [139]
                0.00    0.00       1/19          SatProblem::getNumVariables() [127]
                0.00    0.00       1/1           SliceSampling::init() [176]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[181]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [181]
                0.00    0.00       1/4           Timer::~Timer() [140]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [174]
[182]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [182]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [174]
[183]    0.0    0.00    0.00       1         Random::Random() [183]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[184]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [184]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[185]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [185]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[186]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [186]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[187]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [187]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
[188]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [188]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[189]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [189]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[190]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [190]
                0.00    0.00       1/4           Timer::Timer() [139]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [184]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [185]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [187]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [188]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [186]
                0.00    0.00       1/19          SatProblem::getNumVariables() [127]
                0.00    0.00       1/1           SatProblem::getNumClauses() [172]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[191]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [191]
                0.00    0.00       1/4           Timer::~Timer() [140]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [161] global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [182] Random::sgenrand(unsigned long) [42] std::_List_base<int, std::allocator<int> >::_M_init()
 [162] global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [183] Random::Random() [28] std::_List_base<int, std::allocator<int> >::_M_clear()
 [163] global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [9] SampleSAT::greedyWalk() [74] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [164] global constructors keyed to cnffilename [39] SampleSAT::init_model() [75] std::_List_base<int, std::allocator<int> >::_List_base()
 [165] printlParameters(learnparams*) [24] SampleSAT::randomWalk() [57] std::_List_base<int, std::allocator<int> >::~_List_base()
 [166] printssParameters(samplesatparams*) [184] SampleSAT::setWalkMax(int) [61] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [167] __static_initialization_and_destruction_0(int, int) [185] SampleSAT::setNumSample(int) [102] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
 [168] __static_initialization_and_destruction_0(int, int) [15] SampleSAT::simAnnealing() [151] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
 [169] __static_initialization_and_destruction_0(int, int) [186] SampleSAT::setTemperature(double) [152] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
 [170] __static_initialization_and_destruction_0(int, int) [187] SampleSAT::setWalkSatProb(double) [153] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
 [105] SatProblem::cpClVector() [188] SampleSAT::setRandomWalkProb(double) [134] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [97] SatProblem::getCnjSize(int) [6] SampleSAT::walk() [126] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
   [7] SatProblem::initParams() [5] SampleSAT::solve(SatProblem*, int*) [154] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [80] SatProblem::getRealProb(int) [189] SampleSAT::calcAve(learnparams*) [155] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
 [112] SatProblem::updateTheta(double*) [100] SampleSAT::getTemp() [53] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  [84] SatProblem::getClVecSize() [190] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [45] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  [49] SatProblem::initSatCheck(int*) [191] SampleSAT::~SampleSAT() [103] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
  [56] SatProblem::parseCnfFile(char*) [86] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [104] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
 [171] SatProblem::parseSliFile(char*) [87] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [54] std::_Vector_base<int, std::allocator<int> >::_Vector_base()
 [172] SatProblem::getNumClauses() [116] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [46] std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
 [173] SatProblem::parseProbFile(char*) [113] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [47] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [94] SatProblem::getFixedClausei(int) [110] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [160] std::_List_iterator<int>::_List_iterator()
 [106] SatProblem::getNumFixedAtom() [141] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [14] std::_List_iterator<int>::operator++(int)
 [127] SatProblem::getNumVariables() [142] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [111] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [107] SatProblem::getNumFixedClause() [143] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [135] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [98] SatProblem::getCnf(int) [144] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [71] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [43] SatProblem::getCnj(int, int) [88] __gnu_cxx::new_allocator<int>::destroy(int*) [20] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [91] SatProblem::getVar(int) [34] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [124] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [31] SatProblem::getNsc1(int*, int) [40] __gnu_cxx::new_allocator<int>::new_allocator() [29] std::list<int, std::allocator<int> >::end()
   [8] SatProblem::getNsc2(int*, int) [81] __gnu_cxx::new_allocator<int>::~new_allocator() [50] std::list<int, std::allocator<int> >::begin()
 [101] SatProblem::setAtom(int, int) [131] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [22] std::list<int, std::allocator<int> >::clear()
  [59] SatProblem::allocate() [145] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [21] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [93] SatProblem::getClVec(int) [89] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [10] std::list<int, std::allocator<int> >::push_back(int const&)
  [17] SatProblem::getGrand() [129] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [69] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [26] SatProblem::getTheta(int) [128] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [76] std::list<int, std::allocator<int> >::list()
  [33] SatProblem::isSatCnj(int*, int) [23] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [58] std::list<int, std::allocator<int> >::~list()
  [99] SatProblem::addNumSat(int) [82] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [64] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [30] SatProblem::afterFlip(int*, int) [132] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [156] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [96] SatProblem::getNumSat() [48] std::_List_iterator<int>::operator*() const [157] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [25] SatProblem::rewriteWL(int, int) [32] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [65] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [51] SatProblem::setClause(int, int) [117] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [66] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
 [174] SatProblem::SatProblem(unsigned long, bool) [118] std::list<int, std::allocator<int> >::end() const [158] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  [68] SatProblem::~SatProblem() [119] std::list<int, std::allocator<int> >::begin() const [67] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [11] SliceSampling::modelcheck(int) [92] std::list<int, std::allocator<int> >::empty() const [16] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
 [175] SliceSampling::printUnitTime() [146] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [55] std::vector<int, std::allocator<int> >::vector()
 [176] SliceSampling::init() [125] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [27] std::vector<int, std::allocator<int> >::~vector()
   [2] SliceSampling::learn(int*, char*, int) [133] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [70] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
   [3] SliceSampling::cdlearn(int) [120] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [136] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [38] SliceSampling::sampleU() [121] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [72] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
   [4] SliceSampling::sampleX() [147] std::allocator<std::_List_node<int> >::allocator() [137] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [12] SliceSampling::readdata(char*, int) [122] std::allocator<std::_List_node<int> >::~allocator() [138] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [13] SliceSampling::unitProc(int, int) [114] std::allocator<std::_List_node<int> >::~allocator() [73] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [177] SliceSampling::calcFixed(learnparams*) [148] std::allocator<std::list<int, std::allocator<int> > >::allocator() [108] std::abs(double)
 [178] SliceSampling::destlearn(int) [149] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [95] double const& std::max<double>(double const&, double const&)
 [179] SliceSampling::lallocate(int) [37] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [159] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [109] SliceSampling::normalize(double*, int) [52] std::allocator<int>::allocator() [62] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [180] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [83] std::allocator<int>::~allocator() [63] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [181] SliceSampling::~SliceSampling() [44] std::allocator<int>::~allocator() [35] void std::_Destroy<int*>(int*, int*)
  [19] Timer::time()         [123] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [36] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [130] Timer::printTime(std::ostream&, double const&) [150] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [60] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
 [139] Timer::Timer()        [115] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [85] operator new(unsigned int, void*)
 [140] Timer::~Timer()        [90] std::_List_base<int, std::allocator<int> >::_M_get_node()
  [18] Random::genrand()      [41] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
