Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 23.66      9.55     9.55 314764359     0.00     0.00  SatProblem::isSatCnj(int*, int)
 20.49     17.82     8.27 61351878     0.00     0.00  SatProblem::getNsc2(int*, int)
  7.36     20.79     2.97 566492523     0.00     0.00  std::_List_iterator<int>::operator++(int)
  6.42     23.38     2.59 853433851     0.00     0.00  std::list<int, std::allocator<int> >::end()
  4.37     25.14     1.76 1134575111     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  4.09     26.80     1.65  3067718     0.00     0.00  SampleSAT::greedyWalk()
  3.82     28.34     1.54 1140275090     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
  3.39     29.70     1.37 32034935     0.00     0.00  Random::genrand()
  3.08     30.95     1.25 847633783     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  3.00     32.16     1.21  3066352     0.00     0.00  SampleSAT::randomWalk()
  2.64     33.23     1.06 11734170     0.00     0.00  SatProblem::afterFlip(int*, int)
  2.54     34.25     1.02 281141260     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  2.33     35.19     0.94 623728718     0.00     0.00  std::_List_iterator<int>::operator*() const
  1.51     35.80     0.61        1     0.61    39.03  SampleSAT::cdlearn(int)
  1.49     36.40     0.60  3066352     0.00     0.00  SatProblem::getNsc1(int*, int)
  1.19     36.88     0.48        2     0.24     0.24  std::_List_iterator<int>::_List_iterator()
  0.87     37.23     0.35 88924208     0.00     0.00  SatProblem::getFixedClausei(int)
  0.77     37.54     0.31 12267024     0.00     0.00  SampleSAT::walk()
  0.74     37.84     0.30       22     0.01     0.01  SatProblem::getNumVariables()
  0.58     38.08     0.23                             std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.47     38.27     0.19  6132954     0.00     0.00  SampleSAT::simAnnealing()
  0.45     38.45     0.18 190113824     0.00     0.00  SatProblem::getClVecSize()
  0.42     38.62     0.17   100000     0.00     0.00  SatProblem::initParams()
  0.35     38.76     0.14                             SatProblem::isSat(int*)
  0.32     38.88     0.13 69683157     0.00     0.00  SatProblem::getVar(int)
  0.27     38.99     0.11                             std::vector<int, std::allocator<int> >::vector()
  0.25     39.09     0.10  5800068     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.25     39.20     0.10   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.24     39.29     0.10  2100055     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.20     39.37     0.08 96080579     0.00     0.00  SatProblem::getClVec(int)
  0.20     39.45     0.08 22261614     0.00     0.00  SatProblem::getCnjSize(int)
  0.17     39.52     0.07  5800068     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.17     39.59     0.07   200000     0.00     0.00  SampleSAT::getProb(int*)
  0.15     39.65     0.06 32034935     0.00     0.00  SatProblem::getGrand()
  0.15     39.71     0.06 13062558     0.00     0.00  SatProblem::getCnj(int, int)
  0.15     39.77     0.06  5800068     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.12     39.82     0.05 40484042     0.00     0.00  SatProblem::getNumSat()
  0.12     39.87     0.05 39603618     0.00     0.00  SatProblem::getTheta(int)
  0.12     39.92     0.05  5800068     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.10     39.96     0.04   100000     0.00     0.00  SampleSAT::init_model()
  0.09     39.99     0.04  5800068     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.07     40.02     0.03 13062558     0.00     0.00  SatProblem::getCnf(int)
  0.07     40.05     0.03  5800068     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.07     40.09     0.03   100000     0.00     0.00  SatProblem::cpClVector()
  0.07     40.12     0.03                             SatProblem::getCnfij(int, int)
  0.06     40.14     0.03   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.05     40.16     0.02 11734170     0.00     0.00  SatProblem::addNumSat(int)
  0.05     40.18     0.02 11600208     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.05     40.20     0.02 11600208     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.05     40.22     0.02 11600136     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.05     40.24     0.02  5800068     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.05     40.26     0.02  5800068     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.02     40.27     0.01 11600208     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.02     40.28     0.01 11600208     0.00     0.00  std::allocator<int>::~allocator()
  0.02     40.29     0.01  6132954     0.00     0.00  SampleSAT::getTemp()
  0.02     40.30     0.01  5800140     0.00     0.00  operator new(unsigned int, void*)
  0.02     40.31     0.01  3600000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.02     40.32     0.01  2099979     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.02     40.33     0.01        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.02     40.34     0.01        4     0.00     0.01  std::list<int, std::allocator<int> >::list()
  0.02     40.35     0.01                             SatProblem::getClause(int)
  0.01     40.35     0.01 11600208     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.01     40.36     0.01        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00     40.36     0.00  5800068     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.00     40.36     0.00  5800068     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.00     40.36     0.00  2100055     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.00     40.36     0.00     1800     0.00     0.00  std::abs(double)
  0.00     40.36     0.00      406     0.00     0.00  Timer::time()
  0.00     40.36     0.00      148     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00     40.36     0.00      144     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00     40.36     0.00      100     0.00     0.00  SatProblem::updateTheta(double*)
  0.00     40.36     0.00       76     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00     40.36     0.00       76     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00     40.36     0.00       76     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00     40.36     0.00       76     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00     40.36     0.00       76     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00     40.36     0.00       72     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00     40.36     0.00       72     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00     40.36     0.00       72     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00     40.36     0.00       72     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00     40.36     0.00       72     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00     40.36     0.00       72     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00     40.36     0.00       72     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00     40.36     0.00       72     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00     40.36     0.00       72     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00     40.36     0.00       72     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00     40.36     0.00       72     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00       72     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00       72     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00     40.36     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00     40.36     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00     40.36     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00     40.36     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00     40.36     0.00        9     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00     40.36     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00     40.36     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00     40.36     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00     40.36     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00     40.36     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00     40.36     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00     40.36     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00     40.36     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00     40.36     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00     40.36     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00     40.36     0.00        4     0.00     0.00  Timer::Timer()
  0.00     40.36     0.00        4     0.00     0.00  Timer::~Timer()
  0.00     40.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00     40.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00     40.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00     40.36     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00     40.36     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00     40.36     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00     40.36     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00     40.36     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00     40.36     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00     40.36     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00     40.36     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00     40.36     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00     40.36     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00     40.36     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00     40.36     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00     40.36     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00     40.36     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00     40.36     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00     40.36     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00     40.36     0.00        1     0.00     0.00  global constructors keyed to SatProblem::SatProblem(unsigned long, bool)
  0.00     40.36     0.00        1     0.00     0.00  global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00     40.36     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00     40.36     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     40.36     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     40.36     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     40.36     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     40.36     0.00        1     0.00     0.02  SatProblem::parseCnfFile(char*)
  0.00     40.36     0.00        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00     40.36     0.00        1     0.00     0.00  SatProblem::getNumClauses()
  0.00     40.36     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00     40.36     0.00        1     0.00     0.02  SatProblem::allocate()
  0.00     40.36     0.00        1     0.00     0.48  SatProblem::SatProblem(unsigned long, bool)
  0.00     40.36     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00     40.36     0.00        1     0.00     0.00  SliceSampling::printUnitTime()
  0.00     40.36     0.00        1     0.00     0.00  SliceSampling::init()
  0.00     40.36     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00     40.36     0.00        1     0.00     0.01  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00     40.36     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00     40.36     0.00        1     0.00     0.00  Random::Random()
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00     40.36     0.00        1     0.00    39.03  SampleSAT::learn(int*, char*, int)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::readdata(char*, int)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00     40.36     0.00        1     0.00     0.01  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00     40.36     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.02% of 40.36 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.7    0.00   39.84                 main [1]
                0.00   39.03       1/1           SampleSAT::learn(int*, char*, int) [2]
                0.00    0.48       1/1           SatProblem::SatProblem(unsigned long, bool) [24]
                0.27    0.00      20/22          SatProblem::getNumVariables() [29]
                0.00    0.02       1/1           SatProblem::parseCnfFile(char*) [53]
                0.00    0.01       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
                0.00    0.01       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [61]
                0.00    0.00       1/1           SatProblem::~SatProblem() [75]
                0.00    0.00       4/406         Timer::time() [93]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [114]
                0.00    0.00       1/4           Timer::Timer() [123]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [156]
                0.00    0.00       1/1           SatProblem::parseSliFile(char*) [154]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [149]
                0.00    0.00       1/1           printlParameters(learnparams*) [148]
                0.00    0.00       1/1           SliceSampling::printUnitTime() [157]
                0.00    0.00       1/1           SliceSampling::calcFixed(learnparams*) [159]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [168]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [160]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [171]
                0.00    0.00       1/4           Timer::~Timer() [124]
-----------------------------------------------
                0.00   39.03       1/1           main [1]
[2]     96.7    0.00   39.03       1         SampleSAT::learn(int*, char*, int) [2]
                0.61   38.42       1/1           SampleSAT::cdlearn(int) [3]
                0.00    0.00      18/39603618     SatProblem::getTheta(int) [48]
                0.00    0.00       2/406         Timer::time() [93]
                0.00    0.00       1/1           SampleSAT::lallocate(int) [170]
                0.00    0.00       1/1           SampleSAT::readdata(char*, int) [169]
                0.00    0.00       1/9           Timer::printTime(std::ostream&, double const&) [114]
-----------------------------------------------
                0.61   38.42       1/1           SampleSAT::learn(int*, char*, int) [2]
[3]     96.7    0.61   38.42       1         SampleSAT::cdlearn(int) [3]
                0.10   38.20  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
                0.07    0.00  200000/200000      SampleSAT::getProb(int*) [44]
                0.05    0.00 36003600/39603618     SatProblem::getTheta(int) [48]
                0.00    0.00  100000/32034935     SatProblem::getGrand() [18]
                0.00    0.00     400/406         Timer::time() [93]
                0.00    0.00     100/100         SatProblem::updateTheta(double*) [96]
                0.00    0.00       2/9           Timer::printTime(std::ostream&, double const&) [114]
-----------------------------------------------
                0.10   38.20  100000/100000      SampleSAT::cdlearn(int) [3]
[4]     94.9    0.10   38.20  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.31   36.81 12267024/12267024     SampleSAT::walk() [5]
                0.17    0.64  100000/100000      SatProblem::initParams() [22]
                0.04    0.08  100000/100000      SampleSAT::init_model() [36]
                0.03    0.09  100000/100000      SatProblem::initSatCheck(int*) [38]
                0.03    0.00  100000/100000      SatProblem::cpClVector() [51]
-----------------------------------------------
                0.31   36.81 12267024/12267024     SampleSAT::solve(SatProblem*, int*) [4]
[5]     92.0    0.31   36.81 12267024         SampleSAT::walk() [5]
                1.65   23.93 3067718/3067718     SampleSAT::greedyWalk() [6]
                0.19    5.01 6132954/6132954     SampleSAT::simAnnealing() [9]
                1.21    3.97 3066352/3066352     SampleSAT::randomWalk() [10]
                0.03    0.79 18401094/32034935     SatProblem::getGrand() [18]
                0.03    0.00 24001194/40484042     SatProblem::getNumSat() [47]
-----------------------------------------------
                1.65   23.93 3067718/3067718     SampleSAT::walk() [5]
[6]     63.4    1.65   23.93 3067718         SampleSAT::greedyWalk() [6]
                7.44   15.32 55218924/61351878     SatProblem::getNsc2(int*, int) [7]
                0.28    0.77 3067718/11734170     SatProblem::afterFlip(int*, int) [11]
                0.10    0.00 55218924/69683157     SatProblem::getVar(int) [35]
                0.01    0.00 7283542/40484042     SatProblem::getNumSat() [47]
                0.01    0.00 3067718/11734170     SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.83    1.70 6132954/61351878     SampleSAT::simAnnealing() [9]
                7.44   15.32 55218924/61351878     SampleSAT::greedyWalk() [6]
[7]     62.7    8.27   17.02 61351878         SatProblem::getNsc2(int*, int) [7]
                7.03    0.00 231774028/314764359     SatProblem::isSatCnj(int*, int) [8]
                2.15    1.10 708955568/853433851     std::list<int, std::allocator<int> >::end() [12]
                2.43    0.00 463548056/566492523     std::_List_iterator<int>::operator++(int) [14]
                1.29    0.00 954363080/1140275090     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.89    0.38 245407512/281141260     std::list<int, std::allocator<int> >::begin() [17]
                1.04    0.00 708955568/847633783     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [20]
                0.70    0.00 463548056/623728718     std::_List_iterator<int>::operator*() const [21]
-----------------------------------------------
                0.09    0.00 2900000/314764359     SatProblem::initSatCheck(int*) [38]
                0.69    0.00 22854136/314764359     SatProblem::getNsc1(int*, int) [13]
                1.74    0.00 57236195/314764359     SatProblem::afterFlip(int*, int) [11]
                7.03    0.00 231774028/314764359     SatProblem::getNsc2(int*, int) [7]
[8]     23.7    9.55    0.00 314764359         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                0.19    5.01 6132954/6132954     SampleSAT::walk() [5]
[9]     12.9    0.19    5.01 6132954         SampleSAT::simAnnealing() [9]
                0.83    1.70 6132954/61351878     SatProblem::getNsc2(int*, int) [7]
                0.51    1.41 5600100/11734170     SatProblem::afterFlip(int*, int) [11]
                0.02    0.50 11733841/32034935     SatProblem::getGrand() [18]
                0.01    0.00 6132954/69683157     SatProblem::getVar(int) [35]
                0.01    0.00 6132954/6132954     SampleSAT::getTemp() [64]
                0.01    0.00 5600100/11734170     SatProblem::addNumSat(int) [55]
                0.01    0.00 6132954/40484042     SatProblem::getNumSat() [47]
-----------------------------------------------
                1.21    3.97 3066352/3066352     SampleSAT::walk() [5]
[10]    12.8    1.21    3.97 3066352         SampleSAT::randomWalk() [10]
                0.60    2.56 3066352/3066352     SatProblem::getNsc1(int*, int) [13]
                0.35    0.00 88924208/88924208     SatProblem::getFixedClausei(int) [27]
                0.18    0.00 190113824/190113824     SatProblem::getClVecSize() [31]
                0.06    0.03 13062558/13062558     SatProblem::getCnj(int, int) [40]
                0.08    0.00 96080579/96080579     SatProblem::getClVec(int) [42]
                0.08    0.00 22261614/22261614     SatProblem::getCnjSize(int) [43]
                0.01    0.00 6531279/69683157     SatProblem::getVar(int) [35]
                0.01    0.00 3066352/11734170     SatProblem::addNumSat(int) [55]
                0.00    0.00 3066352/40484042     SatProblem::getNumSat() [47]
-----------------------------------------------
                0.28    0.77 3066352/11734170     SatProblem::getNsc1(int*, int) [13]
                0.28    0.77 3067718/11734170     SampleSAT::greedyWalk() [6]
                0.51    1.41 5600100/11734170     SampleSAT::simAnnealing() [9]
[11]    10.0    1.06    2.96 11734170         SatProblem::afterFlip(int*, int) [11]
                1.74    0.00 57236195/314764359     SatProblem::isSatCnj(int*, int) [8]
                0.24    0.13 80704535/853433851     std::list<int, std::allocator<int> >::end() [12]
                0.30    0.00 57236195/566492523     std::_List_iterator<int>::operator++(int) [14]
                0.17    0.00 114472390/623728718     std::_List_iterator<int>::operator*() const [21]
                0.14    0.00 104172875/1140275090     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.09    0.04 23468340/281141260     std::list<int, std::allocator<int> >::begin() [17]
                0.12    0.00 80704535/847633783     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [20]
-----------------------------------------------
                0.02    0.01 5800068/853433851     std::list<int, std::allocator<int> >::push_back(int const&) [25]
                0.18    0.09 57973680/853433851     SatProblem::getNsc1(int*, int) [13]
                0.24    0.13 80704535/853433851     SatProblem::afterFlip(int*, int) [11]
                2.15    1.10 708955568/853433851     SatProblem::getNsc2(int*, int) [7]
[12]     9.7    2.59    1.33 853433851         std::list<int, std::allocator<int> >::end() [12]
                1.33    0.00 853433851/1134575111     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
                0.60    2.56 3066352/3066352     SampleSAT::randomWalk() [10]
[13]     7.8    0.60    2.56 3066352         SatProblem::getNsc1(int*, int) [13]
                0.28    0.77 3066352/11734170     SatProblem::afterFlip(int*, int) [11]
                0.69    0.00 22854136/314764359     SatProblem::isSatCnj(int*, int) [8]
                0.18    0.09 57973680/853433851     std::list<int, std::allocator<int> >::end() [12]
                0.24    0.00 45708272/566492523     std::_List_iterator<int>::operator++(int) [14]
                0.09    0.00 70239088/1140275090     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.09    0.00 57973680/847633783     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [20]
                0.07    0.00 45708272/623728718     std::_List_iterator<int>::operator*() const [21]
                0.04    0.02 12265408/281141260     std::list<int, std::allocator<int> >::begin() [17]
-----------------------------------------------
                0.24    0.00 45708272/566492523     SatProblem::getNsc1(int*, int) [13]
                0.30    0.00 57236195/566492523     SatProblem::afterFlip(int*, int) [11]
                2.43    0.00 463548056/566492523     SatProblem::getNsc2(int*, int) [7]
[14]     7.4    2.97    0.00 566492523         std::_List_iterator<int>::operator++(int) [14]
-----------------------------------------------
                0.44    0.00 281141260/1134575111     std::list<int, std::allocator<int> >::begin() [17]
                1.33    0.00 853433851/1134575111     std::list<int, std::allocator<int> >::end() [12]
[15]     4.4    1.76    0.00 1134575111         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
                0.00    0.00      68/1140275090     SatProblem::parseCnfFile(char*) [53]
                0.02    0.00 11499979/1140275090     SatProblem::initParams() [22]
                0.09    0.00 70239088/1140275090     SatProblem::getNsc1(int*, int) [13]
                0.14    0.00 104172875/1140275090     SatProblem::afterFlip(int*, int) [11]
                1.29    0.00 954363080/1140275090     SatProblem::getNsc2(int*, int) [7]
[16]     3.8    1.54    0.00 1140275090         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
-----------------------------------------------
                0.04    0.02 12265408/281141260     SatProblem::getNsc1(int*, int) [13]
                0.09    0.04 23468340/281141260     SatProblem::afterFlip(int*, int) [11]
                0.89    0.38 245407512/281141260     SatProblem::getNsc2(int*, int) [7]
[17]     3.6    1.02    0.44 281141260         std::list<int, std::allocator<int> >::begin() [17]
                0.44    0.00 281141260/1134575111     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
                0.00    0.00  100000/32034935     SampleSAT::cdlearn(int) [3]
                0.00    0.08 1800000/32034935     SampleSAT::init_model() [36]
                0.02    0.50 11733841/32034935     SampleSAT::simAnnealing() [9]
                0.03    0.79 18401094/32034935     SampleSAT::walk() [5]
[18]     3.5    0.06    1.37 32034935         SatProblem::getGrand() [18]
                1.37    0.00 32034935/32034935     Random::genrand() [19]
-----------------------------------------------
                1.37    0.00 32034935/32034935     SatProblem::getGrand() [18]
[19]     3.4    1.37    0.00 32034935         Random::genrand() [19]
-----------------------------------------------
                0.09    0.00 57973680/847633783     SatProblem::getNsc1(int*, int) [13]
                0.12    0.00 80704535/847633783     SatProblem::afterFlip(int*, int) [11]
                1.04    0.00 708955568/847633783     SatProblem::getNsc2(int*, int) [7]
[20]     3.1    1.25    0.00 847633783         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [20]
-----------------------------------------------
                0.07    0.00 45708272/623728718     SatProblem::getNsc1(int*, int) [13]
                0.17    0.00 114472390/623728718     SatProblem::afterFlip(int*, int) [11]
                0.70    0.00 463548056/623728718     SatProblem::getNsc2(int*, int) [7]
[21]     2.3    0.94    0.00 623728718         std::_List_iterator<int>::operator*() const [21]
-----------------------------------------------
                0.17    0.64  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[22]     2.0    0.17    0.64  100000         SatProblem::initParams() [22]
                0.06    0.38 5800000/5800068     std::list<int, std::allocator<int> >::push_back(int const&) [25]
                0.01    0.16 2099979/2099979     std::list<int, std::allocator<int> >::clear() [32]
                0.02    0.00 11499979/1140275090     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
                0.01    0.00 3600000/3600000     std::list<int, std::allocator<int> >::empty() const [66]
-----------------------------------------------
                0.48    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [24]
[23]     1.2    0.48    0.00       2         std::_List_iterator<int>::_List_iterator() [23]
-----------------------------------------------
                0.00    0.48       1/1           main [1]
[24]     1.2    0.00    0.48       1         SatProblem::SatProblem(unsigned long, bool) [24]
                0.48    0.00       2/2           std::_List_iterator<int>::_List_iterator() [23]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [142]
                0.00    0.00       1/1           Random::Random() [162]
                0.00    0.00       1/4           Timer::Timer() [123]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [161]
-----------------------------------------------
                0.00    0.00      68/5800068     SatProblem::parseCnfFile(char*) [53]
                0.06    0.38 5800000/5800068     SatProblem::initParams() [22]
[25]     1.1    0.06    0.38 5800068         std::list<int, std::allocator<int> >::push_back(int const&) [25]
                0.04    0.32 5800068/5800068     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [26]
                0.02    0.01 5800068/853433851     std::list<int, std::allocator<int> >::end() [12]
-----------------------------------------------
                0.04    0.32 5800068/5800068     std::list<int, std::allocator<int> >::push_back(int const&) [25]
[26]     0.9    0.04    0.32 5800068         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [26]
                0.10    0.22 5800068/5800068     std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
-----------------------------------------------
                0.35    0.00 88924208/88924208     SampleSAT::randomWalk() [10]
[27]     0.9    0.35    0.00 88924208         SatProblem::getFixedClausei(int) [27]
-----------------------------------------------
                0.10    0.22 5800068/5800068     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [26]
[28]     0.8    0.10    0.22 5800068         std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
                0.03    0.09 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_get_node() [37]
                0.05    0.01 5800068/5800068     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
                0.01    0.02 5800068/11600136     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [45]
                0.00    0.00 5800068/11600208     std::allocator<int>::~allocator() [57]
-----------------------------------------------
                0.01    0.00       1/22          SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
                0.01    0.00       1/22          SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [61]
                0.27    0.00      20/22          main [1]
[29]     0.7    0.30    0.00      22         SatProblem::getNumVariables() [29]
-----------------------------------------------
                                                 <spontaneous>
[30]     0.6    0.23    0.00                 std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [30]
-----------------------------------------------
                0.18    0.00 190113824/190113824     SampleSAT::randomWalk() [10]
[31]     0.4    0.18    0.00 190113824         SatProblem::getClVecSize() [31]
-----------------------------------------------
                0.01    0.16 2099979/2099979     SatProblem::initParams() [22]
[32]     0.4    0.01    0.16 2099979         std::list<int, std::allocator<int> >::clear() [32]
                0.09    0.06 2099979/2100055     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.00    0.00 2099979/2100055     std::_List_base<int, std::allocator<int> >::_M_init() [91]
-----------------------------------------------
                0.00    0.00      76/2100055     std::_List_base<int, std::allocator<int> >::~_List_base() [76]
                0.09    0.06 2099979/2100055     std::list<int, std::allocator<int> >::clear() [32]
[33]     0.4    0.10    0.06 2100055         std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.01    0.02 5800068/11600136     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [45]
                0.02    0.00 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [59]
                0.00    0.00 5800068/11600208     std::allocator<int>::~allocator() [57]
                0.00    0.00 5800068/5800068     __gnu_cxx::new_allocator<int>::destroy(int*) [90]
-----------------------------------------------
                                                 <spontaneous>
[34]     0.3    0.14    0.00                 SatProblem::isSat(int*) [34]
-----------------------------------------------
                0.00    0.00 1800000/69683157     SampleSAT::init_model() [36]
                0.01    0.00 6132954/69683157     SampleSAT::simAnnealing() [9]
                0.01    0.00 6531279/69683157     SampleSAT::randomWalk() [10]
                0.10    0.00 55218924/69683157     SampleSAT::greedyWalk() [6]
[35]     0.3    0.13    0.00 69683157         SatProblem::getVar(int) [35]
-----------------------------------------------
                0.04    0.08  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[36]     0.3    0.04    0.08  100000         SampleSAT::init_model() [36]
                0.00    0.08 1800000/32034935     SatProblem::getGrand() [18]
                0.00    0.00 1800000/69683157     SatProblem::getVar(int) [35]
-----------------------------------------------
                0.03    0.09 5800068/5800068     std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
[37]     0.3    0.03    0.09 5800068         std::_List_base<int, std::allocator<int> >::_M_get_node() [37]
                0.07    0.02 5800068/5800068     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [41]
-----------------------------------------------
                0.03    0.09  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[38]     0.3    0.03    0.09  100000         SatProblem::initSatCheck(int*) [38]
                0.09    0.00 2900000/314764359     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.3    0.11    0.00                 std::vector<int, std::allocator<int> >::vector() [39]
-----------------------------------------------
                0.06    0.03 13062558/13062558     SampleSAT::randomWalk() [10]
[40]     0.2    0.06    0.03 13062558         SatProblem::getCnj(int, int) [40]
                0.03    0.00 13062558/13062558     SatProblem::getCnf(int) [50]
-----------------------------------------------
                0.07    0.02 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_get_node() [37]
[41]     0.2    0.07    0.02 5800068         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [41]
                0.02    0.00 5800068/5800068     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [58]
-----------------------------------------------
                0.08    0.00 96080579/96080579     SampleSAT::randomWalk() [10]
[42]     0.2    0.08    0.00 96080579         SatProblem::getClVec(int) [42]
-----------------------------------------------
                0.08    0.00 22261614/22261614     SampleSAT::randomWalk() [10]
[43]     0.2    0.08    0.00 22261614         SatProblem::getCnjSize(int) [43]
-----------------------------------------------
                0.07    0.00  200000/200000      SampleSAT::cdlearn(int) [3]
[44]     0.2    0.07    0.00  200000         SampleSAT::getProb(int*) [44]
                0.00    0.00 3600000/39603618     SatProblem::getTheta(int) [48]
-----------------------------------------------
                0.01    0.02 5800068/11600136     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.01    0.02 5800068/11600136     std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
[45]     0.2    0.02    0.04 11600136         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [45]
                0.02    0.02 11600136/11600208     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [49]
                0.00    0.00 11600136/11600208     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [70]
-----------------------------------------------
                0.05    0.01 5800068/5800068     std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
[46]     0.1    0.05    0.01 5800068         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
                0.01    0.00 5800068/5800140     operator new(unsigned int, void*) [65]
-----------------------------------------------
                0.00    0.00 3066352/40484042     SampleSAT::randomWalk() [10]
                0.01    0.00 6132954/40484042     SampleSAT::simAnnealing() [9]
                0.01    0.00 7283542/40484042     SampleSAT::greedyWalk() [6]
                0.03    0.00 24001194/40484042     SampleSAT::walk() [5]
[47]     0.1    0.05    0.00 40484042         SatProblem::getNumSat() [47]
-----------------------------------------------
                0.00    0.00      18/39603618     SampleSAT::learn(int*, char*, int) [2]
                0.00    0.00 3600000/39603618     SampleSAT::getProb(int*) [44]
                0.05    0.00 36003600/39603618     SampleSAT::cdlearn(int) [3]
[48]     0.1    0.05    0.00 39603618         SatProblem::getTheta(int) [48]
-----------------------------------------------
                0.00    0.00      72/11600208     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
                0.02    0.02 11600136/11600208     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [45]
[49]     0.1    0.02    0.02 11600208         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [49]
                0.02    0.00 11600208/11600208     __gnu_cxx::new_allocator<int>::new_allocator() [56]
-----------------------------------------------
                0.03    0.00 13062558/13062558     SatProblem::getCnj(int, int) [40]
[50]     0.1    0.03    0.00 13062558         SatProblem::getCnf(int) [50]
-----------------------------------------------
                0.03    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[51]     0.1    0.03    0.00  100000         SatProblem::cpClVector() [51]
-----------------------------------------------
                                                 <spontaneous>
[52]     0.1    0.03    0.00                 SatProblem::getCnfij(int, int) [52]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[53]     0.1    0.00    0.02       1         SatProblem::parseCnfFile(char*) [53]
                0.00    0.02       1/1           SatProblem::allocate() [54]
                0.00    0.00      68/5800068     std::list<int, std::allocator<int> >::push_back(int const&) [25]
                0.00    0.00      68/1140275090     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [16]
-----------------------------------------------
                0.00    0.02       1/1           SatProblem::parseCnfFile(char*) [53]
[54]     0.1    0.00    0.02       1         SatProblem::allocate() [54]
                0.01    0.01       4/4           std::list<int, std::allocator<int> >::list() [60]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [73]
                0.00    0.00       4/76          std::list<int, std::allocator<int> >::~list() [77]
-----------------------------------------------
                0.01    0.00 3066352/11734170     SampleSAT::randomWalk() [10]
                0.01    0.00 3067718/11734170     SampleSAT::greedyWalk() [6]
                0.01    0.00 5600100/11734170     SampleSAT::simAnnealing() [9]
[55]     0.0    0.02    0.00 11734170         SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.02    0.00 11600208/11600208     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [49]
[56]     0.0    0.02    0.00 11600208         __gnu_cxx::new_allocator<int>::new_allocator() [56]
-----------------------------------------------
                0.00    0.00      72/11600208     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
                0.00    0.00 5800068/11600208     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.00    0.00 5800068/11600208     std::list<int, std::allocator<int> >::_M_create_node(int const&) [28]
[57]     0.0    0.01    0.01 11600208         std::allocator<int>::~allocator() [57]
                0.01    0.00 11600208/11600208     __gnu_cxx::new_allocator<int>::~new_allocator() [63]
-----------------------------------------------
                0.02    0.00 5800068/5800068     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [41]
[58]     0.0    0.02    0.00 5800068         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [58]
-----------------------------------------------
                0.02    0.00 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
[59]     0.0    0.02    0.00 5800068         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [59]
                0.00    0.00 5800068/5800068     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [89]
-----------------------------------------------
                0.01    0.01       4/4           SatProblem::allocate() [54]
[60]     0.0    0.01    0.01       4         std::list<int, std::allocator<int> >::list() [60]
                0.01    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [67]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[61]     0.0    0.00    0.01       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [61]
                0.01    0.00       1/22          SatProblem::getNumVariables() [29]
                0.00    0.00       1/4           Timer::Timer() [123]
                0.00    0.00       1/1           SliceSampling::init() [158]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[62]     0.0    0.00    0.01       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
                0.01    0.00       1/22          SatProblem::getNumVariables() [29]
                0.00    0.00       1/4           Timer::Timer() [123]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [163]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [164]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [166]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [167]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [165]
                0.00    0.00       1/1           SatProblem::getNumClauses() [155]
-----------------------------------------------
                0.01    0.00 11600208/11600208     std::allocator<int>::~allocator() [57]
[63]     0.0    0.01    0.00 11600208         __gnu_cxx::new_allocator<int>::~new_allocator() [63]
-----------------------------------------------
                0.01    0.00 6132954/6132954     SampleSAT::simAnnealing() [9]
[64]     0.0    0.01    0.00 6132954         SampleSAT::getTemp() [64]
-----------------------------------------------
                0.00    0.00      72/5800140     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [81]
                0.01    0.00 5800068/5800140     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [46]
[65]     0.0    0.01    0.00 5800140         operator new(unsigned int, void*) [65]
-----------------------------------------------
                0.01    0.00 3600000/3600000     SatProblem::initParams() [22]
[66]     0.0    0.01    0.00 3600000         std::list<int, std::allocator<int> >::empty() const [66]
-----------------------------------------------
                0.01    0.00       4/4           std::list<int, std::allocator<int> >::list() [60]
[67]     0.0    0.01    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [67]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [134]
                0.00    0.00       4/2100055     std::_List_base<int, std::allocator<int> >::_M_init() [91]
-----------------------------------------------
                                                 <spontaneous>
[68]     0.0    0.01    0.00                 SatProblem::getClause(int) [68]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [74]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[69]     0.0    0.01    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [80]
-----------------------------------------------
                0.00    0.00      72/11600208     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
                0.00    0.00 11600136/11600208     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [45]
[70]     0.0    0.01    0.00 11600208         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [70]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [72]
[71]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [84]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [111]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [112]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [130]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [141]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [129]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [135]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [73]
[72]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [72]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [54]
[73]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [73]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [72]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [110]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [140]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [75]
[74]     0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [74]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [111]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [139]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[75]     0.0    0.00    0.00       1         SatProblem::~SatProblem() [75]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [74]
                0.00    0.00       1/4           Timer::~Timer() [124]
-----------------------------------------------
                0.00    0.00      76/76          std::list<int, std::allocator<int> >::~list() [77]
[76]     0.0    0.00    0.00      76         std::_List_base<int, std::allocator<int> >::~_List_base() [76]
                0.00    0.00      76/2100055     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
                0.00    0.00      76/76          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [99]
-----------------------------------------------
                0.00    0.00       4/76          SatProblem::allocate() [54]
                0.00    0.00      72/76          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
[77]     0.0    0.00    0.00      76         std::list<int, std::allocator<int> >::~list() [77]
                0.00    0.00      76/76          std::_List_base<int, std::allocator<int> >::~_List_base() [76]
-----------------------------------------------
                0.00    0.00      72/72          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
[78]     0.0    0.00    0.00      72         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
                0.00    0.00      72/76          std::list<int, std::allocator<int> >::~list() [77]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [80]
[79]     0.0    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
                0.00    0.00      72/72          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [78]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [69]
[80]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [80]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [79]
-----------------------------------------------
                0.00    0.00      72/72          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [82]
[81]     0.0    0.00    0.00      72         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [81]
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
                0.00    0.00      72/5800140     operator new(unsigned int, void*) [65]
-----------------------------------------------
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [83]
[82]     0.0    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [82]
                0.00    0.00      72/72          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [81]
-----------------------------------------------
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [84]
[83]     0.0    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [83]
                0.00    0.00       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [82]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[84]     0.0    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [84]
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [83]
-----------------------------------------------
                0.00    0.00      72/72          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [81]
[85]     0.0    0.00    0.00      72         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
                0.00    0.00      72/11600208     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [49]
                0.00    0.00      72/11600208     std::allocator<int>::~allocator() [57]
                0.00    0.00      72/11600208     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [70]
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::end() const [102]
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::begin() const [103]
                0.00    0.00      72/72          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
-----------------------------------------------
                0.00    0.00 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [59]
[89]     0.0    0.00    0.00 5800068         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [89]
-----------------------------------------------
                0.00    0.00 5800068/5800068     std::_List_base<int, std::allocator<int> >::_M_clear() [33]
[90]     0.0    0.00    0.00 5800068         __gnu_cxx::new_allocator<int>::destroy(int*) [90]
-----------------------------------------------
                0.00    0.00       4/2100055     std::_List_base<int, std::allocator<int> >::_List_base() [67]
                0.00    0.00      72/2100055     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
                0.00    0.00 2099979/2100055     std::list<int, std::allocator<int> >::clear() [32]
[91]     0.0    0.00    0.00 2100055         std::_List_base<int, std::allocator<int> >::_M_init() [91]
-----------------------------------------------
                0.00    0.00    1800/1800        SatProblem::updateTheta(double*) [96]
[92]     0.0    0.00    0.00    1800         std::abs(double) [92]
-----------------------------------------------
                0.00    0.00       2/406         SampleSAT::learn(int*, char*, int) [2]
                0.00    0.00       4/406         main [1]
                0.00    0.00     400/406         SampleSAT::cdlearn(int) [3]
[93]     0.0    0.00    0.00     406         Timer::time() [93]
-----------------------------------------------
                0.00    0.00      72/148         std::allocator<std::_List_node<int> >::~allocator() [106]
                0.00    0.00      76/148         std::allocator<std::_List_node<int> >::~allocator() [98]
[94]     0.0    0.00    0.00     148         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [94]
-----------------------------------------------
                0.00    0.00      72/144         std::list<int, std::allocator<int> >::begin() const [103]
                0.00    0.00      72/144         std::list<int, std::allocator<int> >::end() const [102]
[95]     0.0    0.00    0.00     144         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [95]
-----------------------------------------------
                0.00    0.00     100/100         SampleSAT::cdlearn(int) [3]
[96]     0.0    0.00    0.00     100         SatProblem::updateTheta(double*) [96]
                0.00    0.00    1800/1800        std::abs(double) [92]
-----------------------------------------------
                0.00    0.00       4/76          std::allocator<std::_List_node<int> >::allocator() [131]
                0.00    0.00      72/76          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
[97]     0.0    0.00    0.00      76         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [97]
-----------------------------------------------
                0.00    0.00      76/76          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [99]
[98]     0.0    0.00    0.00      76         std::allocator<std::_List_node<int> >::~allocator() [98]
                0.00    0.00      76/148         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [94]
-----------------------------------------------
                0.00    0.00      76/76          std::_List_base<int, std::allocator<int> >::~_List_base() [76]
[99]     0.0    0.00    0.00      76         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [99]
                0.00    0.00      76/76          std::allocator<std::_List_node<int> >::~allocator() [98]
-----------------------------------------------
                0.00    0.00      72/72          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [105]
[100]    0.0    0.00    0.00      72         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [100]
-----------------------------------------------
                0.00    0.00      72/72          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
[101]    0.0    0.00    0.00      72         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [101]
-----------------------------------------------
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
[102]    0.0    0.00    0.00      72         std::list<int, std::allocator<int> >::end() const [102]
                0.00    0.00      72/144         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [95]
-----------------------------------------------
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
[103]    0.0    0.00    0.00      72         std::list<int, std::allocator<int> >::begin() const [103]
                0.00    0.00      72/144         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [95]
-----------------------------------------------
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
[104]    0.0    0.00    0.00      72         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
                0.00    0.00      72/76          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [97]
-----------------------------------------------
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [107]
[105]    0.0    0.00    0.00      72         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [105]
                0.00    0.00      72/72          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [100]
-----------------------------------------------
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
[106]    0.0    0.00    0.00      72         std::allocator<std::_List_node<int> >::~allocator() [106]
                0.00    0.00      72/148         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [94]
-----------------------------------------------
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
[107]    0.0    0.00    0.00      72         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [107]
                0.00    0.00      72/72          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [105]
-----------------------------------------------
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
[108]    0.0    0.00    0.00      72         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [108]
                0.00    0.00      72/72          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [104]
                0.00    0.00      72/72          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [107]
                0.00    0.00      72/72          std::allocator<std::_List_node<int> >::~allocator() [106]
                0.00    0.00      72/2100055     std::_List_base<int, std::allocator<int> >::_M_init() [91]
-----------------------------------------------
                0.00    0.00      72/72          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [85]
[109]    0.0    0.00    0.00      72         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [109]
                0.00    0.00      72/72          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [101]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [73]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [130]
[110]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [110]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [74]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[111]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [111]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [129]
[112]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [112]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [126]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [117]
[113]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [113]
-----------------------------------------------
                0.00    0.00       1/9           SampleSAT::learn(int*, char*, int) [2]
                0.00    0.00       2/9           main [1]
                0.00    0.00       2/9           SampleSAT::cdlearn(int) [3]
                0.00    0.00       4/9           SliceSampling::printUnitTime() [157]
[114]    0.0    0.00    0.00       9         Timer::printTime(std::ostream&, double const&) [114]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [140]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [141]
[115]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [115]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [117]
[116]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [116]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [130]
[117]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [117]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [116]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [113]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [139]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[118]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
[119]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [119]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
[120]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [119]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
[121]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [120]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[122]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [122]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [121]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [24]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [61]
[123]    0.0    0.00    0.00       4         Timer::Timer() [123]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [75]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [171]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [160]
[124]    0.0    0.00    0.00       4         Timer::~Timer() [124]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
[125]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [125]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [135]
[126]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [126]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [113]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [132]
[127]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [127]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
[128]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [128]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[129]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [129]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [112]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[130]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [130]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [110]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [117]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [143]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [134]
[131]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [131]
                0.00    0.00       4/76          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [97]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [136]
[132]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [132]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [127]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [137]
[133]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [128]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [67]
[134]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [134]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[135]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [135]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [126]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [138]
[136]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [136]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [132]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [139]
[137]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [137]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [133]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [142]
[138]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [138]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [136]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [74]
[139]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [139]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [118]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [137]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [73]
[140]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [140]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [115]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [71]
[141]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [141]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [115]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [24]
[142]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [142]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [138]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [130]
[143]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [143]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [293]
[144]    0.0    0.00    0.00       1         global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [144]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [151]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [293]
[145]    0.0    0.00    0.00       1         global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [145]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [153]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [293]
[146]    0.0    0.00    0.00       1         global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [146]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [152]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [293]
[147]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [147]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[148]    0.0    0.00    0.00       1         printlParameters(learnparams*) [148]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[149]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [149]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [147]
[150]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [144]
[151]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [151]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [146]
[152]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [152]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [145]
[153]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [153]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[154]    0.0    0.00    0.00       1         SatProblem::parseSliFile(char*) [154]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[155]    0.0    0.00    0.00       1         SatProblem::getNumClauses() [155]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[156]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [156]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[157]    0.0    0.00    0.00       1         SliceSampling::printUnitTime() [157]
                0.00    0.00       4/9           Timer::printTime(std::ostream&, double const&) [114]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [61]
[158]    0.0    0.00    0.00       1         SliceSampling::init() [158]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[159]    0.0    0.00    0.00       1         SliceSampling::calcFixed(learnparams*) [159]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[160]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [160]
                0.00    0.00       1/4           Timer::~Timer() [124]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [24]
[161]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [161]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [24]
[162]    0.0    0.00    0.00       1         Random::Random() [162]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[163]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [163]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[164]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [164]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[165]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [165]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[166]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [166]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [62]
[167]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[168]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [168]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int) [2]
[169]    0.0    0.00    0.00       1         SampleSAT::readdata(char*, int) [169]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int) [2]
[170]    0.0    0.00    0.00       1         SampleSAT::lallocate(int) [170]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[171]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [171]
                0.00    0.00       1/4           Timer::~Timer() [124]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [144] global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [164] SampleSAT::setNumSample(int) [134] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [145] global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [9] SampleSAT::simAnnealing() [99] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [146] global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [165] SampleSAT::setTemperature(double) [37] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [147] global constructors keyed to cnffilename [166] SampleSAT::setWalkSatProb(double) [59] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [148] printlParameters(learnparams*) [167] SampleSAT::setRandomWalkProb(double) [91] std::_List_base<int, std::allocator<int> >::_M_init()
 [149] printssParameters(samplesatparams*) [5] SampleSAT::walk() [33] std::_List_base<int, std::allocator<int> >::_M_clear()
 [150] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int) [108] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [151] __static_initialization_and_destruction_0(int, int) [4] SampleSAT::solve(SatProblem*, int*) [67] std::_List_base<int, std::allocator<int> >::_List_base()
 [152] __static_initialization_and_destruction_0(int, int) [168] SampleSAT::calcAve(learnparams*) [76] std::_List_base<int, std::allocator<int> >::~_List_base()
 [153] __static_initialization_and_destruction_0(int, int) [3] SampleSAT::cdlearn(int) [79] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [51] SatProblem::cpClVector() [44] SampleSAT::getProb(int*) [135] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  [43] SatProblem::getCnjSize(int) [64] SampleSAT::getTemp() [136] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [22] SatProblem::initParams() [169] SampleSAT::readdata(char*, int) [137] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [96] SatProblem::updateTheta(double*) [170] SampleSAT::lallocate(int) [118] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [31] SatProblem::getClVecSize() [62] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [111] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [38] SatProblem::initSatCheck(int*) [171] SampleSAT::~SampleSAT() [138] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [53] SatProblem::parseCnfFile(char*) [89] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [139] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
 [154] SatProblem::parseSliFile(char*) [41] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [30] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
 [155] SatProblem::getNumClauses() [100] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [15] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
 [156] SatProblem::parseProbFile(char*) [97] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [23] std::_List_iterator<int>::_List_iterator()
  [27] SatProblem::getFixedClausei(int) [94] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [14] std::_List_iterator<int>::operator++(int)
  [29] SatProblem::getNumVariables() [125] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [95] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  [34] SatProblem::isSat(int*) [126] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [119] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [50] SatProblem::getCnf(int) [127] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [82] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [40] SatProblem::getCnj(int, int) [128] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [28] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [35] SatProblem::getVar(int) [90] __gnu_cxx::new_allocator<int>::destroy(int*) [109] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [13] SatProblem::getNsc1(int*, int) [46] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [12] std::list<int, std::allocator<int> >::end()
   [7] SatProblem::getNsc2(int*, int) [56] __gnu_cxx::new_allocator<int>::new_allocator() [17] std::list<int, std::allocator<int> >::begin()
  [54] SatProblem::allocate() [63] __gnu_cxx::new_allocator<int>::~new_allocator() [32] std::list<int, std::allocator<int> >::clear()
  [42] SatProblem::getClVec(int) [115] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [26] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [52] SatProblem::getCnfij(int, int) [129] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [25] std::list<int, std::allocator<int> >::push_back(int const&)
  [18] SatProblem::getGrand() [58] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [85] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [48] SatProblem::getTheta(int) [113] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [60] std::list<int, std::allocator<int> >::list()
   [8] SatProblem::isSatCnj(int*, int) [112] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [77] std::list<int, std::allocator<int> >::~list()
  [55] SatProblem::addNumSat(int) [45] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [71] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [11] SatProblem::afterFlip(int*, int) [70] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [140] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [68] SatProblem::getClause(int) [116] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [141] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [47] SatProblem::getNumSat() [21] std::_List_iterator<int>::operator*() const [72] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [24] SatProblem::SatProblem(unsigned long, bool) [20] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [73] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  [75] SatProblem::~SatProblem() [101] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [142] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
 [157] SliceSampling::printUnitTime() [102] std::list<int, std::allocator<int> >::end() const [74] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
 [158] SliceSampling::init() [103] std::list<int, std::allocator<int> >::begin() const [16] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
 [159] SliceSampling::calcFixed(learnparams*) [66] std::list<int, std::allocator<int> >::empty() const [39] std::vector<int, std::allocator<int> >::vector()
  [61] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [130] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [81] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [160] SliceSampling::~SliceSampling() [110] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [120] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [93] Timer::time()         [117] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [83] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [114] Timer::printTime(std::ostream&, double const&) [104] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [121] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [123] Timer::Timer()        [105] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [122] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [124] Timer::~Timer()       [131] std::allocator<std::_List_node<int> >::allocator() [84] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  [19] Random::genrand()     [106] std::allocator<std::_List_node<int> >::~allocator() [92] std::abs(double)
 [161] Random::sgenrand(unsigned long) [98] std::allocator<std::_List_node<int> >::~allocator() [143] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [162] Random::Random()      [132] std::allocator<std::list<int, std::allocator<int> > >::allocator() [80] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
   [6] SampleSAT::greedyWalk() [133] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [69] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [36] SampleSAT::init_model() [49] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [78] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  [10] SampleSAT::randomWalk() [57] std::allocator<int>::~allocator() [65] operator new(unsigned int, void*)
 [163] SampleSAT::setWalkMax(int) [107] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
