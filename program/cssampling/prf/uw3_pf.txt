Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ks/call  Ks/call  name    
 25.99   5358.41  5358.41 10149007171     0.00     0.00  SatProblem::isSatCnj(int*, int)
 23.33  10167.97  4809.56 556605646     0.00     0.00  SatProblem::getNsc2(int*, int)
  7.92  11800.77  1632.80        1     1.63    19.57  SampleSAT::islearn(int, char*)
  6.63  13167.27  1366.50 14911028733     0.00     0.00  std::_List_iterator<int>::operator++(int)
  4.69  14133.34   966.07 4136872275     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  4.55  15070.72   937.38 17254368411     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  4.46  15990.39   919.67 21480740785     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  4.38  16894.30   903.91 18579014342     0.00     0.00  std::_List_iterator<int>::operator*() const
  4.32  17785.24   890.94 18973401781     0.00     0.00  std::list<int, std::allocator<int> >::end()
  3.91  18590.80   805.56   200000     0.00     0.00  SampleSAT::modelcheck(int)
  1.42  18884.05   293.25 10000770     0.00     0.00  SampleSAT::randomWalk()
  1.34  19160.81   276.75 7510312528     0.00     0.00  SatProblem::getTheta(int)
  0.91  19348.44   187.63 154547540     0.00     0.00  SatProblem::getClVecSize()
  0.78  19508.38   159.94 5350327040     0.00     0.00  SatProblem::getRealProb(int)
  0.68  19649.02   140.63 57272230     0.00     0.00  SatProblem::getFixedClausei(int)
  0.67  19786.46   137.44 1766393182     0.00     0.00  SatProblem::getClVec(int)
  0.60  19909.89   123.43 2343339678     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.54  20021.86   111.97      488     0.00     0.00  SatProblem::getNumVariables()
  0.53  20131.75   109.89 10003250     0.00     0.00  SampleSAT::greedyWalk()
  0.52  20238.24   106.49        2     0.05     0.05  std::_List_iterator<int>::_List_iterator()
  0.51  20343.07   104.83 67401262     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.25  20394.48    51.41   100000     0.00     0.00  SatProblem::initParams()
  0.24  20444.97    50.49 67401262     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.18  20482.38    37.41 38457007     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.12  20508.14    25.76 10000770     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.06  20520.27    12.13                             SatProblem::getNumFixedClause()
  0.04  20528.67     8.40 633798032     0.00     0.00  SatProblem::getVar(int)
  0.04  20536.92     8.24 1719033370     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.03  20543.83     6.92 3438066740     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.03  20550.38     6.55 1719033370     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.02  20554.97     4.58   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.02  20559.31     4.34 3438068672     0.00     0.00  std::allocator<int>::~allocator()
  0.02  20563.56     4.26   100000     0.00     0.00  SatProblem::cpClVector()
  0.02  20567.40     3.84 1719033370     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*)
  0.02  20571.02     3.62 3438068672     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.02  20574.60     3.58 144717541     0.00     0.00  Random::genrand()
  0.02  20577.96     3.35                             SatProblem::getClause(int)
  0.02  20581.13     3.17 1719033370     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.02  20584.22     3.10 1719033370     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.01  20587.17     2.95 3438068672     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.01  20590.04     2.87 3438068672     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.01  20592.65     2.60 1719033370     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.01  20595.22     2.58 1719033370     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.01  20597.58     2.36 3438068672     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.01  20599.53     1.94 1719033370     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long)
  0.01  20601.44     1.92 1719033370     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.01  20603.06     1.61     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.01  20604.62     1.57 1719035302     0.00     0.00  operator new(unsigned long, void*)
  0.01  20605.99     1.36 96600000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.01  20607.21     1.23 1719033370     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00  20607.87     0.66        1     0.00     0.81  SampleSAT::readdata(char*, int)
  0.00  20608.51     0.64 200100000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.00  20609.08     0.57 151938933     0.00     0.00  SatProblem::getNumSat()
  0.00  20609.65     0.56                             SatProblem::getCnfij(int, int)
  0.00  20610.19     0.55     1932     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00  20610.70     0.51 40007212     0.00     0.00  SampleSAT::walk()
  0.00  20611.20     0.50     1932     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00  20611.69     0.49   100000     0.00     0.00  SampleSAT::init_model()
  0.00  20612.15     0.46   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00  20612.58     0.42 87787082     0.00     0.00  SatProblem::getCnjSize(int)
  0.00  20612.99     0.41        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00  20613.40     0.41 20003192     0.00     0.00  SampleSAT::simAnnealing()
  0.00  20613.78     0.38                             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00  20614.12     0.34 57784772     0.00     0.00  SatProblem::getCnf(int)
  0.00  20614.44     0.32        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00  20614.73     0.29 57784772     0.00     0.00  SatProblem::getCnj(int, int)
  0.00  20615.01     0.28                             void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00  20615.29     0.28 67399326     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00  20615.53     0.24                             operator delete(void*, void*)
  0.00  20615.77     0.23        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  20616.00     0.23 144717541     0.00     0.00  SatProblem::getGrand()
  0.00  20616.22     0.23     3868     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00  20616.44     0.22        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00  20616.67     0.22                             int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00  20616.87     0.20        1     0.00    20.38  SampleSAT::learn(int*, char*, int, char*)
  0.00  20617.06     0.19        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00  20617.22     0.17 20003192     0.00     0.00  SampleSAT::getTemp()
  0.00  20617.38     0.15        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  20617.50     0.12        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00  20617.56     0.07 38457007     0.00     0.00  SatProblem::addNumSat(int)
  0.00  20617.60     0.04        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00  20617.63     0.03                             SatProblem::setUnitFlag()
  0.00  20617.65     0.03                             SatProblem::getSampleSize()
  0.00  20617.68     0.03                             SatProblem::setFixedAtomi(int, int)
  0.00  20617.69     0.01     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00  20617.70     0.01                             SatProblem::getNumFixedAtom()
  0.00  20617.70     0.00     8006     0.00     0.00  Timer::time()
  0.00  20617.70     0.00     3868     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00  20617.70     0.00     3864     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00  20617.70     0.00     1936     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00  20617.70     0.00     1936     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00  20617.70     0.00     1936     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00  20617.70     0.00     1936     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00  20617.70     0.00     1932     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00  20617.70     0.00     1932     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00  20617.70     0.00     1932     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00  20617.70     0.00     1932     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00  20617.70     0.00     1932     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00  20617.70     0.00     1932     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00  20617.70     0.00     1932     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00  20617.70     0.00     1932     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00     1932     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00     1932     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00  20617.70     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00  20617.70     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00  20617.70     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00  20617.70     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00  20617.70     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00  20617.70     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00  20617.70     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00  20617.70     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00  20617.70     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  20617.70     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  20617.70     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  20617.70     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00  20617.70     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  20617.70     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00  20617.70     0.00        4     0.00     0.00  Timer::Timer()
  0.00  20617.70     0.00        4     0.00     0.00  Timer::~Timer()
  0.00  20617.70     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00  20617.70     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*)
  0.00  20617.70     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00  20617.70     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00  20617.70     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const
  0.00  20617.70     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00  20617.70     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00  20617.70     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00  20617.70     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00  20617.70     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  0.00  20617.70     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00  20617.70     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00  20617.70     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00  20617.70     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00  20617.70     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00  20617.70     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00  20617.70     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00  20617.70     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00  20617.70     0.00        4     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00  20617.70     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00  20617.70     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00  20617.70     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00  20617.70     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00  20617.70     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00  20617.70     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  20617.70     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  20617.70     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  20617.70     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00  20617.70     0.00        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00  20617.70     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00  20617.70     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00  20617.70     0.00        1     0.00     0.11  SatProblem::SatProblem(unsigned long, bool)
  0.00  20617.70     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00  20617.70     0.00        1     0.00     0.00  SliceSampling::init()
  0.00  20617.70     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00  20617.70     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00  20617.70     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00  20617.70     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00  20617.70     0.00        1     0.00     0.00  Random::Random()
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00  20617.70     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 20617.70 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00 20600.18                 main [1]
                0.20 20378.93       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
              111.28    0.00     485/488         SatProblem::getNumVariables() [31]
                0.00  106.49       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
                0.00    2.27       1/1           SatProblem::parseCnfFile(char*) [55]
                0.00    0.23       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
                0.00    0.23       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [92]
                0.00    0.23       1/1           SliceSampling::calcFixed(learnparams*) [91]
                0.19    0.00       1/1           SatProblem::parseSliFile(char*) [98]
                0.00    0.13       1/1           SatProblem::~SatProblem() [101]
                0.00    0.00       4/8006        Timer::time() [118]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [137]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [168]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [163]
                0.00    0.00       1/1           printlParameters(learnparams*) [162]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [178]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [170]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.20 20378.93       1/1           main [1]
[2]     98.8    0.20 20378.93       1         SampleSAT::learn(int*, char*, int, char*) [2]
             1632.80 17939.79       1/1           SampleSAT::islearn(int, char*) [3]
                0.66  805.56       1/1           SampleSAT::readdata(char*, int) [19]
                0.12    0.00       1/1           SampleSAT::lallocate(int) [102]
                0.00    0.00       2/8006        Timer::time() [118]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [137]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [179]
-----------------------------------------------
             1632.80 17939.79       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     94.9 1632.80 17939.79       1         SampleSAT::islearn(int, char*) [3]
                0.46 17500.37  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
              276.75    0.00 7510312528/7510312528     SatProblem::getTheta(int) [24]
              159.94    0.00 5350327040/5350327040     SatProblem::getRealProb(int) [28]
                1.61    0.64    3000/3000        SampleSAT::normalize(double*, int) [57]
                0.01    0.00    1000/1000        SatProblem::updateTheta(double*) [112]
                0.00    0.00  100000/144717541     SatProblem::getGrand() [48]
                0.00    0.00    8000/8006        Timer::time() [118]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [137]
-----------------------------------------------
                0.46 17500.37  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     84.9    0.46 17500.37  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.51 16567.38 40007212/40007212     SampleSAT::walk() [5]
               51.41  416.03  100000/100000      SatProblem::initParams() [22]
                4.58  453.79  100000/100000      SatProblem::initSatCheck(int*) [23]
                4.26    0.00  100000/100000      SatProblem::cpClVector() [47]
                0.49    1.91  100000/100000      SampleSAT::init_model() [53]
-----------------------------------------------
                0.51 16567.38 40007212/40007212     SampleSAT::solve(SatProblem*, int*) [4]
[5]     80.4    0.51 16567.38 40007212         SampleSAT::walk() [5]
              109.89 11494.41 10003250/10003250     SampleSAT::greedyWalk() [6]
              293.25 2679.48 10000770/10000770     SampleSAT::randomWalk() [10]
                0.41 1988.06 20003192/20003192     SampleSAT::simAnnealing() [12]
                0.10    1.48 60011232/144717541     SatProblem::getGrand() [48]
                0.30    0.00 78464219/151938933     SatProblem::getNumSat() [75]
-----------------------------------------------
              109.89 11494.41 10003250/10003250     SampleSAT::walk() [5]
[6]     56.3  109.89 11494.41 10003250         SampleSAT::greedyWalk() [6]
             4636.71 5988.20 536602454/556605646     SatProblem::getNsc2(int*, int) [7]
                9.73  852.47 10003250/38457007     SatProblem::afterFlip(int*, int) [9]
                7.12    0.00 536602454/633798032     SatProblem::getVar(int) [40]
                0.16    0.00 43470752/151938933     SatProblem::getNumSat() [75]
                0.02    0.00 10003250/38457007     SatProblem::addNumSat(int) [107]
-----------------------------------------------
              172.85  223.23 20003192/556605646     SampleSAT::simAnnealing() [12]
             4636.71 5988.20 536602454/556605646     SampleSAT::greedyWalk() [6]
[7]     53.5 4809.56 6211.42 556605646         SatProblem::getNsc2(int*, int) [7]
             2364.23    0.00 4477937353/10149007171     SatProblem::isSatCnj(int*, int) [8]
              820.75    0.00 8955874706/14911028733     std::_List_iterator<int>::operator++(int) [13]
              525.09  246.85 11182297290/18973401781     std::list<int, std::allocator<int> >::end() [14]
              117.27  519.93 2226422584/2343339678     std::list<int, std::allocator<int> >::begin() [21]
              607.50    0.00 11182297290/17254368411     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [16]
              574.08    0.00 13408719874/21480740785     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
              435.72    0.00 8955874706/18579014342     std::_List_iterator<int>::operator*() const [18]
-----------------------------------------------
              453.79    0.00 859500000/10149007171     SatProblem::initSatCheck(int*) [23]
              603.78    0.00 1143584209/10149007171     SatProblem::getNsc1(int*, int) [11]
             1936.60    0.00 3667985609/10149007171     SatProblem::afterFlip(int*, int) [9]
             2364.23    0.00 4477937353/10149007171     SatProblem::getNsc2(int*, int) [7]
[8]     26.0 5358.41    0.00 10149007171         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                9.73  852.26 10000770/38457007     SatProblem::getNsc1(int*, int) [11]
                9.73  852.47 10003250/38457007     SampleSAT::greedyWalk() [6]
               17.95 1572.54 18452987/38457007     SampleSAT::simAnnealing() [12]
[9]     16.1   37.41 3277.27 38457007         SatProblem::afterFlip(int*, int) [9]
             1936.60    0.00 3667985609/10149007171     SatProblem::isSatCnj(int*, int) [8]
              356.91    0.00 7335971218/18579014342     std::_List_iterator<int>::operator*() const [18]
              336.15    0.00 3667985609/14911028733     std::_List_iterator<int>::operator++(int) [13]
              175.85   82.67 3744899623/18973401781     std::list<int, std::allocator<int> >::end() [14]
              203.45    0.00 3744899623/17254368411     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [16]
              163.63    0.00 3821813637/21480740785     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
                4.05   17.96 76914014/2343339678     std::list<int, std::allocator<int> >::begin() [21]
-----------------------------------------------
              293.25 2679.48 10000770/10000770     SampleSAT::walk() [5]
[10]    14.4  293.25 2679.48 10000770         SampleSAT::randomWalk() [10]
               25.76 2186.52 10000770/10000770     SatProblem::getNsc1(int*, int) [11]
              187.63    0.00 154547540/154547540     SatProblem::getClVecSize() [25]
              140.63    0.00 57272230/57272230     SatProblem::getFixedClausei(int) [29]
              137.44    0.00 1766393182/1766393182     SatProblem::getClVec(int) [30]
                0.29    0.34 57784772/57784772     SatProblem::getCnj(int, int) [74]
                0.42    0.00 87787082/87787082     SatProblem::getCnjSize(int) [78]
                0.38    0.00 28892386/633798032     SatProblem::getVar(int) [40]
                0.04    0.00 10000770/151938933     SatProblem::getNumSat() [75]
                0.02    0.00 10000770/38457007     SatProblem::addNumSat(int) [107]
-----------------------------------------------
               25.76 2186.52 10000770/10000770     SampleSAT::randomWalk() [10]
[11]    10.7   25.76 2186.52 10000770         SatProblem::getNsc1(int*, int) [11]
                9.73  852.26 10000770/38457007     SatProblem::afterFlip(int*, int) [9]
              603.78    0.00 1143584209/10149007171     SatProblem::isSatCnj(int*, int) [8]
              209.60    0.00 2287168418/14911028733     std::_List_iterator<int>::operator++(int) [13]
              109.28   51.37 2327171498/18973401781     std::list<int, std::allocator<int> >::end() [14]
              126.43    0.00 2327171498/17254368411     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [16]
              111.28    0.00 2287168418/18579014342     std::_List_iterator<int>::operator*() const [18]
              101.35    0.00 2367174578/21480740785     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
                2.11    9.34 40003080/2343339678     std::list<int, std::allocator<int> >::begin() [21]
-----------------------------------------------
                0.41 1988.06 20003192/20003192     SampleSAT::walk() [5]
[12]     9.6    0.41 1988.06 20003192         SampleSAT::simAnnealing() [12]
               17.95 1572.54 18452987/38457007     SatProblem::afterFlip(int*, int) [9]
              172.85  223.23 20003192/556605646     SatProblem::getNsc2(int*, int) [7]
                0.06    0.90 36306309/144717541     SatProblem::getGrand() [48]
                0.27    0.00 20003192/633798032     SatProblem::getVar(int) [40]
                0.17    0.00 20003192/20003192     SampleSAT::getTemp() [99]
                0.08    0.00 20003192/151938933     SatProblem::getNumSat() [75]
                0.03    0.00 18452987/38457007     SatProblem::addNumSat(int) [107]
-----------------------------------------------
              209.60    0.00 2287168418/14911028733     SatProblem::getNsc1(int*, int) [11]
              336.15    0.00 3667985609/14911028733     SatProblem::afterFlip(int*, int) [9]
              820.75    0.00 8955874706/14911028733     SatProblem::getNsc2(int*, int) [7]
[13]     6.6 1366.50    0.00 14911028733         std::_List_iterator<int>::operator++(int) [13]
-----------------------------------------------
               80.72   37.95 1719033370/18973401781     std::list<int, std::allocator<int> >::push_back(int const&) [27]
              109.28   51.37 2327171498/18973401781     SatProblem::getNsc1(int*, int) [11]
              175.85   82.67 3744899623/18973401781     SatProblem::afterFlip(int*, int) [9]
              525.09  246.85 11182297290/18973401781     SatProblem::getNsc2(int*, int) [7]
[14]     6.4  890.94  418.84 18973401781         std::list<int, std::allocator<int> >::end() [14]
              418.84    0.00 1793532597/4136872275     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
              418.84    0.00 1793532597/4136872275     std::list<int, std::allocator<int> >::end() [14]
              547.23    0.00 2343339678/4136872275     std::list<int, std::allocator<int> >::begin() [21]
[15]     4.7  966.07    0.00 4136872275         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
              126.43    0.00 2327171498/17254368411     SatProblem::getNsc1(int*, int) [11]
              203.45    0.00 3744899623/17254368411     SatProblem::afterFlip(int*, int) [9]
              607.50    0.00 11182297290/17254368411     SatProblem::getNsc2(int*, int) [7]
[16]     4.5  937.38    0.00 17254368411         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [16]
-----------------------------------------------
                0.00    0.00   33370/21480740785     SatProblem::parseCnfFile(char*) [55]
               80.62    0.00 1882999326/21480740785     SatProblem::initParams() [22]
              101.35    0.00 2367174578/21480740785     SatProblem::getNsc1(int*, int) [11]
              163.63    0.00 3821813637/21480740785     SatProblem::afterFlip(int*, int) [9]
              574.08    0.00 13408719874/21480740785     SatProblem::getNsc2(int*, int) [7]
[17]     4.5  919.67    0.00 21480740785         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
-----------------------------------------------
              111.28    0.00 2287168418/18579014342     SatProblem::getNsc1(int*, int) [11]
              356.91    0.00 7335971218/18579014342     SatProblem::afterFlip(int*, int) [9]
              435.72    0.00 8955874706/18579014342     SatProblem::getNsc2(int*, int) [7]
[18]     4.4  903.91    0.00 18579014342         std::_List_iterator<int>::operator*() const [18]
-----------------------------------------------
                0.66  805.56       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[19]     3.9    0.66  805.56       1         SampleSAT::readdata(char*, int) [19]
              805.56    0.00  200000/200000      SampleSAT::modelcheck(int) [20]
-----------------------------------------------
              805.56    0.00  200000/200000      SampleSAT::readdata(char*, int) [19]
[20]     3.9  805.56    0.00  200000         SampleSAT::modelcheck(int) [20]
-----------------------------------------------
                2.11    9.34 40003080/2343339678     SatProblem::getNsc1(int*, int) [11]
                4.05   17.96 76914014/2343339678     SatProblem::afterFlip(int*, int) [9]
              117.27  519.93 2226422584/2343339678     SatProblem::getNsc2(int*, int) [7]
[21]     3.3  123.43  547.23 2343339678         std::list<int, std::allocator<int> >::begin() [21]
              547.23    0.00 2343339678/4136872275     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [15]
-----------------------------------------------
               51.41  416.03  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[22]     2.3   51.41  416.03  100000         SatProblem::initParams() [22]
                0.28  173.28 67399326/67399326     std::list<int, std::allocator<int> >::clear() [26]
                3.17  157.32 1719000000/1719033370     std::list<int, std::allocator<int> >::push_back(int const&) [27]
               80.62    0.00 1882999326/21480740785     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
                1.36    0.00 96600000/96600000     std::list<int, std::allocator<int> >::empty() const [64]
-----------------------------------------------
                4.58  453.79  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[23]     2.2    4.58  453.79  100000         SatProblem::initSatCheck(int*) [23]
              453.79    0.00 859500000/10149007171     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
              276.75    0.00 7510312528/7510312528     SampleSAT::islearn(int, char*) [3]
[24]     1.3  276.75    0.00 7510312528         SatProblem::getTheta(int) [24]
-----------------------------------------------
              187.63    0.00 154547540/154547540     SampleSAT::randomWalk() [10]
[25]     0.9  187.63    0.00 154547540         SatProblem::getClVecSize() [25]
-----------------------------------------------
                0.28  173.28 67399326/67399326     SatProblem::initParams() [22]
[26]     0.8    0.28  173.28 67399326         std::list<int, std::allocator<int> >::clear() [26]
              104.83    0.00 67399326/67401262     std::_List_base<int, std::allocator<int> >::_M_init() [34]
               50.49   17.96 67399326/67401262     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
                0.00    0.00   33370/1719033370     SatProblem::parseCnfFile(char*) [55]
                3.17  157.32 1719000000/1719033370     SatProblem::initParams() [22]
[27]     0.8    3.17  157.32 1719033370         std::list<int, std::allocator<int> >::push_back(int const&) [27]
               80.72   37.95 1719033370/18973401781     std::list<int, std::allocator<int> >::end() [14]
                8.24   30.41 1719033370/1719033370     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
-----------------------------------------------
              159.94    0.00 5350327040/5350327040     SampleSAT::islearn(int, char*) [3]
[28]     0.8  159.94    0.00 5350327040         SatProblem::getRealProb(int) [28]
-----------------------------------------------
              140.63    0.00 57272230/57272230     SampleSAT::randomWalk() [10]
[29]     0.7  140.63    0.00 57272230         SatProblem::getFixedClausei(int) [29]
-----------------------------------------------
              137.44    0.00 1766393182/1766393182     SampleSAT::randomWalk() [10]
[30]     0.7  137.44    0.00 1766393182         SatProblem::getClVec(int) [30]
-----------------------------------------------
                0.23    0.00       1/488         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
                0.23    0.00       1/488         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [92]
                0.23    0.00       1/488         SliceSampling::calcFixed(learnparams*) [91]
              111.28    0.00     485/488         main [1]
[31]     0.5  111.97    0.00     488         SatProblem::getNumVariables() [31]
-----------------------------------------------
              106.49    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [33]
[32]     0.5  106.49    0.00       2         std::_List_iterator<int>::_List_iterator() [32]
-----------------------------------------------
                0.00  106.49       1/1           main [1]
[33]     0.5    0.00  106.49       1         SatProblem::SatProblem(unsigned long, bool) [33]
              106.49    0.00       2/2           std::_List_iterator<int>::_List_iterator() [32]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
                0.00    0.00       1/1           Random::Random() [172]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [171]
-----------------------------------------------
                0.00    0.00       4/67401262     std::_List_base<int, std::allocator<int> >::_List_base() [81]
                0.00    0.00    1932/67401262     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
              104.83    0.00 67399326/67401262     std::list<int, std::allocator<int> >::clear() [26]
[34]     0.5  104.83    0.00 67401262         std::_List_base<int, std::allocator<int> >::_M_init() [34]
-----------------------------------------------
                0.00    0.00    1936/67401262     std::_List_base<int, std::allocator<int> >::~_List_base() [103]
               50.49   17.96 67399326/67401262     std::list<int, std::allocator<int> >::clear() [26]
[35]     0.3   50.49   17.96 67401262         std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                3.46    4.46 1719033370/3438066740     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                2.58    1.94 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [46]
                2.17    1.43 1719033370/3438068672     std::allocator<int>::~allocator() [42]
                1.92    0.00 1719033370/1719033370     __gnu_cxx::new_allocator<int>::destroy(int*) [59]
-----------------------------------------------
                8.24   30.41 1719033370/1719033370     std::list<int, std::allocator<int> >::push_back(int const&) [27]
[36]     0.2    8.24   30.41 1719033370         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
                6.55   23.86 1719033370/1719033370     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
-----------------------------------------------
                6.55   23.86 1719033370/1719033370     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
[37]     0.1    6.55   23.86 1719033370         std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
                3.46    4.46 1719033370/3438066740     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                2.60    5.07 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
                3.10    1.57 1719033370/1719033370     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [45]
                2.17    1.43 1719033370/3438068672     std::allocator<int>::~allocator() [42]
-----------------------------------------------
                3.46    4.46 1719033370/3438066740     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                3.46    4.46 1719033370/3438066740     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[38]     0.1    6.92    8.92 3438066740         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                3.61    2.36 3438066740/3438068672     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [43]
                2.95    0.00 3438066740/3438068672     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.1   12.13    0.00                 SatProblem::getNumFixedClause() [39]
-----------------------------------------------
                0.27    0.00 20003192/633798032     SampleSAT::simAnnealing() [12]
                0.38    0.00 28892386/633798032     SampleSAT::randomWalk() [10]
                0.64    0.00 48300000/633798032     SampleSAT::init_model() [53]
                7.12    0.00 536602454/633798032     SampleSAT::greedyWalk() [6]
[40]     0.0    8.40    0.00 633798032         SatProblem::getVar(int) [40]
-----------------------------------------------
                2.60    5.07 1719033370/1719033370     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[41]     0.0    2.60    5.07 1719033370         std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
                3.84    1.23 1719033370/1719033370     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [44]
-----------------------------------------------
                0.00    0.00    1932/3438068672     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                2.17    1.43 1719033370/3438068672     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                2.17    1.43 1719033370/3438068672     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[42]     0.0    4.34    2.87 3438068672         std::allocator<int>::~allocator() [42]
                2.87    0.00 3438068672/3438068672     __gnu_cxx::new_allocator<int>::~new_allocator() [52]
-----------------------------------------------
                0.00    0.00    1932/3438068672     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                3.61    2.36 3438066740/3438068672     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[43]     0.0    3.62    2.36 3438068672         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [43]
                2.36    0.00 3438068672/3438068672     __gnu_cxx::new_allocator<int>::new_allocator() [54]
-----------------------------------------------
                3.84    1.23 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
[44]     0.0    3.84    1.23 1719033370         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [44]
                1.23    0.00 1719033370/1719033370     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [65]
-----------------------------------------------
                3.10    1.57 1719033370/1719033370     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[45]     0.0    3.10    1.57 1719033370         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [45]
                1.57    0.00 1719033370/1719035302     operator new(unsigned long, void*) [60]
-----------------------------------------------
                2.58    1.94 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[46]     0.0    2.58    1.94 1719033370         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [46]
                1.94    0.00 1719033370/1719033370     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [58]
-----------------------------------------------
                4.26    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[47]     0.0    4.26    0.00  100000         SatProblem::cpClVector() [47]
-----------------------------------------------
                0.00    0.00  100000/144717541     SampleSAT::islearn(int, char*) [3]
                0.06    0.90 36306309/144717541     SampleSAT::simAnnealing() [12]
                0.08    1.19 48300000/144717541     SampleSAT::init_model() [53]
                0.10    1.48 60011232/144717541     SampleSAT::walk() [5]
[48]     0.0    0.23    3.58 144717541         SatProblem::getGrand() [48]
                3.58    0.00 144717541/144717541     Random::genrand() [49]
-----------------------------------------------
                3.58    0.00 144717541/144717541     SatProblem::getGrand() [48]
[49]     0.0    3.58    0.00 144717541         Random::genrand() [49]
-----------------------------------------------
                                                 <spontaneous>
[50]     0.0    3.35    0.00                 SatProblem::getClause(int) [50]
-----------------------------------------------
                0.00    0.00    1932/3438068672     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                2.95    0.00 3438066740/3438068672     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[51]     0.0    2.95    0.00 3438068672         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
-----------------------------------------------
                2.87    0.00 3438068672/3438068672     std::allocator<int>::~allocator() [42]
[52]     0.0    2.87    0.00 3438068672         __gnu_cxx::new_allocator<int>::~new_allocator() [52]
-----------------------------------------------
                0.49    1.91  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[53]     0.0    0.49    1.91  100000         SampleSAT::init_model() [53]
                0.08    1.19 48300000/144717541     SatProblem::getGrand() [48]
                0.64    0.00 48300000/633798032     SatProblem::getVar(int) [40]
-----------------------------------------------
                2.36    0.00 3438068672/3438068672     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [43]
[54]     0.0    2.36    0.00 3438068672         __gnu_cxx::new_allocator<int>::new_allocator() [54]
-----------------------------------------------
                0.00    2.27       1/1           main [1]
[55]     0.0    0.00    2.27       1         SatProblem::parseCnfFile(char*) [55]
                0.00    2.27       1/1           SatProblem::allocate() [56]
                0.00    0.00   33370/1719033370     std::list<int, std::allocator<int> >::push_back(int const&) [27]
                0.00    0.00   33370/21480740785     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [17]
-----------------------------------------------
                0.00    2.27       1/1           SatProblem::parseCnfFile(char*) [55]
[56]     0.0    0.00    2.27       1         SatProblem::allocate() [56]
                0.00    1.53       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.41    0.32       4/4           std::list<int, std::allocator<int> >::list() [72]
                0.00    0.00       4/1936        std::list<int, std::allocator<int> >::~list() [104]
-----------------------------------------------
                1.61    0.64    3000/3000        SampleSAT::islearn(int, char*) [3]
[57]     0.0    1.61    0.64    3000         SampleSAT::normalize(double*, int) [57]
                0.64    0.00 200100000/200100000     double const& std::max<double>(double const&, double const&) [73]
-----------------------------------------------
                1.94    0.00 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [46]
[58]     0.0    1.94    0.00 1719033370         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [58]
-----------------------------------------------
                1.92    0.00 1719033370/1719033370     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[59]     0.0    1.92    0.00 1719033370         __gnu_cxx::new_allocator<int>::destroy(int*) [59]
-----------------------------------------------
                0.00    0.00    1932/1719035302     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
                1.57    0.00 1719033370/1719035302     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [45]
[60]     0.0    1.57    0.00 1719035302         operator new(unsigned long, void*) [60]
-----------------------------------------------
                0.00    1.53       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
[61]     0.0    0.00    1.53       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
                0.00    1.16       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    0.23       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
                0.00    0.13       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [85]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
-----------------------------------------------
                0.00    1.53       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
[62]     0.0    0.00    1.53       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
                0.00    1.53       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
-----------------------------------------------
                0.00    1.53       4/4           SatProblem::allocate() [56]
[63]     0.0    0.00    1.53       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.00    1.53       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [62]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
-----------------------------------------------
                1.36    0.00 96600000/96600000     SatProblem::initParams() [22]
[64]     0.0    1.36    0.00 96600000         std::list<int, std::allocator<int> >::empty() const [64]
-----------------------------------------------
                1.23    0.00 1719033370/1719033370     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [44]
[65]     0.0    1.23    0.00 1719033370         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [65]
-----------------------------------------------
                0.00    1.16    1932/1932        void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
[66]     0.0    0.00    1.16    1932         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
                0.00    1.16    1932/1932        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                0.00    0.00    1932/1719035302     operator new(unsigned long, void*) [60]
-----------------------------------------------
                0.00    1.16       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
[67]     0.0    0.00    1.16       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
                0.00    1.16    1932/1932        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
-----------------------------------------------
                0.00    1.16       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
[68]     0.0    0.00    1.16       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
                0.00    1.16       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [67]
-----------------------------------------------
                0.00    1.16       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[69]     0.0    0.00    1.16       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [69]
                0.00    1.16       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [68]
-----------------------------------------------
                0.00    1.16    1932/1932        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [66]
[70]     0.0    0.00    1.16    1932         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
                0.55    0.62    1932/1932        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.00    0.00    1932/3438068672     std::allocator<int>::~allocator() [42]
                0.00    0.00    1932/3438068672     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [43]
                0.00    0.00    1932/3438068672     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
                0.00    0.00    1932/1932        std::list<int, std::allocator<int> >::end() const [123]
                0.00    0.00    1932/1932        std::list<int, std::allocator<int> >::begin() const [124]
                0.00    0.00    1932/1932        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [127]
-----------------------------------------------
                0.55    0.62    1932/1932        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[71]     0.0    0.55    0.62    1932         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.50    0.00    1932/1932        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [77]
                0.00    0.11    1932/3868        std::allocator<std::_List_node<int> >::~allocator() [95]
                0.00    0.00    1932/67401262     std::_List_base<int, std::allocator<int> >::_M_init() [34]
                0.00    0.00    1932/1932        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [126]
-----------------------------------------------
                0.41    0.32       4/4           SatProblem::allocate() [56]
[72]     0.0    0.41    0.32       4         std::list<int, std::allocator<int> >::list() [72]
                0.32    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [81]
-----------------------------------------------
                0.64    0.00 200100000/200100000     SampleSAT::normalize(double*, int) [57]
[73]     0.0    0.64    0.00 200100000         double const& std::max<double>(double const&, double const&) [73]
-----------------------------------------------
                0.29    0.34 57784772/57784772     SampleSAT::randomWalk() [10]
[74]     0.0    0.29    0.34 57784772         SatProblem::getCnj(int, int) [74]
                0.34    0.00 57784772/57784772     SatProblem::getCnf(int) [80]
-----------------------------------------------
                0.04    0.00 10000770/151938933     SampleSAT::randomWalk() [10]
                0.08    0.00 20003192/151938933     SampleSAT::simAnnealing() [12]
                0.16    0.00 43470752/151938933     SampleSAT::greedyWalk() [6]
                0.30    0.00 78464219/151938933     SampleSAT::walk() [5]
[75]     0.0    0.57    0.00 151938933         SatProblem::getNumSat() [75]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.0    0.56    0.00                 SatProblem::getCnfij(int, int) [76]
-----------------------------------------------
                0.50    0.00    1932/1932        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
[77]     0.0    0.50    0.00    1932         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [77]
                0.00    0.00    1932/1936        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [120]
-----------------------------------------------
                0.42    0.00 87787082/87787082     SampleSAT::randomWalk() [10]
[78]     0.0    0.42    0.00 87787082         SatProblem::getCnjSize(int) [78]
-----------------------------------------------
                                                 <spontaneous>
[79]     0.0    0.38    0.00                 std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [79]
-----------------------------------------------
                0.34    0.00 57784772/57784772     SatProblem::getCnj(int, int) [74]
[80]     0.0    0.34    0.00 57784772         SatProblem::getCnf(int) [80]
-----------------------------------------------
                0.32    0.00       4/4           std::list<int, std::allocator<int> >::list() [72]
[81]     0.0    0.32    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [81]
                0.00    0.00       4/67401262     std::_List_base<int, std::allocator<int> >::_M_init() [34]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
-----------------------------------------------
                                                 <spontaneous>
[82]     0.0    0.28    0.00                 void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [82]
-----------------------------------------------
                0.15    0.11       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
[83]     0.0    0.15    0.11       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
                0.00    0.11    1932/1932        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [105]
-----------------------------------------------
                0.00    0.27       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [85]
[84]     0.0    0.00    0.27       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
                0.15    0.11       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
-----------------------------------------------
                0.00    0.13       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [100]
                0.00    0.13       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[85]     0.0    0.00    0.27       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [85]
                0.00    0.27       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
-----------------------------------------------
                                                 <spontaneous>
[86]     0.0    0.00    0.26                 __do_global_ctors_aux [86]
                0.22    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [96]
                0.04    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
                0.00    0.00       1/1           global constructors keyed to cnffilename [161]
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
-----------------------------------------------
                                                 <spontaneous>
[87]     0.0    0.24    0.00                 operator delete(void*, void*) [87]
-----------------------------------------------
                0.23    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [89]
[88]     0.0    0.23    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
-----------------------------------------------
                0.00    0.23       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
[89]     0.0    0.00    0.23       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [89]
                0.23    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
-----------------------------------------------
                0.00    0.23       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[90]     0.0    0.00    0.23       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
                0.00    0.23       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [89]
-----------------------------------------------
                0.00    0.23       1/1           main [1]
[91]     0.0    0.00    0.23       1         SliceSampling::calcFixed(learnparams*) [91]
                0.23    0.00       1/488         SatProblem::getNumVariables() [31]
                0.00    0.00       1/2           SatProblem::getNumClauses() [159]
-----------------------------------------------
                0.00    0.23       1/1           main [1]
[92]     0.0    0.00    0.23       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [92]
                0.23    0.00       1/488         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SliceSampling::init() [169]
-----------------------------------------------
                0.00    0.23       1/1           main [1]
[93]     0.0    0.00    0.23       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
                0.23    0.00       1/488         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [173]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [174]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [176]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [177]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [175]
                0.00    0.00       1/2           SatProblem::getNumClauses() [159]
-----------------------------------------------
                0.23    0.00    3868/3868        std::allocator<std::_List_node<int> >::~allocator() [95]
[94]     0.0    0.23    0.00    3868         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [94]
-----------------------------------------------
                0.00    0.11    1932/3868        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
                0.00    0.11    1936/3868        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [106]
[95]     0.0    0.00    0.23    3868         std::allocator<std::_List_node<int> >::~allocator() [95]
                0.23    0.00    3868/3868        __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [94]
-----------------------------------------------
                0.22    0.00       1/1           __do_global_ctors_aux [86]
[96]     0.0    0.22    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [96]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.0    0.22    0.00                 int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [97]
-----------------------------------------------
                0.19    0.00       1/1           main [1]
[98]     0.0    0.19    0.00       1         SatProblem::parseSliFile(char*) [98]
-----------------------------------------------
                0.17    0.00 20003192/20003192     SampleSAT::simAnnealing() [12]
[99]     0.0    0.17    0.00 20003192         SampleSAT::getTemp() [99]
-----------------------------------------------
                0.00    0.13       4/4           SatProblem::~SatProblem() [101]
[100]    0.0    0.00    0.13       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [100]
                0.00    0.13       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [85]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[101]    0.0    0.00    0.13       1         SatProblem::~SatProblem() [101]
                0.00    0.13       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [100]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.12    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[102]    0.0    0.12    0.00       1         SampleSAT::lallocate(int) [102]
-----------------------------------------------
                0.00    0.11    1936/1936        std::list<int, std::allocator<int> >::~list() [104]
[103]    0.0    0.00    0.11    1936         std::_List_base<int, std::allocator<int> >::~_List_base() [103]
                0.00    0.11    1936/1936        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [106]
                0.00    0.00    1936/67401262     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
                0.00    0.00       4/1936        SatProblem::allocate() [56]
                0.00    0.11    1932/1936        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [105]
[104]    0.0    0.00    0.11    1936         std::list<int, std::allocator<int> >::~list() [104]
                0.00    0.11    1936/1936        std::_List_base<int, std::allocator<int> >::~_List_base() [103]
-----------------------------------------------
                0.00    0.11    1932/1932        void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [83]
[105]    0.0    0.00    0.11    1932         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [105]
                0.00    0.11    1932/1936        std::list<int, std::allocator<int> >::~list() [104]
-----------------------------------------------
                0.00    0.11    1936/1936        std::_List_base<int, std::allocator<int> >::~_List_base() [103]
[106]    0.0    0.00    0.11    1936         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [106]
                0.00    0.11    1936/3868        std::allocator<std::_List_node<int> >::~allocator() [95]
-----------------------------------------------
                0.02    0.00 10000770/38457007     SampleSAT::randomWalk() [10]
                0.02    0.00 10003250/38457007     SampleSAT::greedyWalk() [6]
                0.03    0.00 18452987/38457007     SampleSAT::simAnnealing() [12]
[107]    0.0    0.07    0.00 38457007         SatProblem::addNumSat(int) [107]
-----------------------------------------------
                0.04    0.00       1/1           __do_global_ctors_aux [86]
[108]    0.0    0.04    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                                                 <spontaneous>
[109]    0.0    0.03    0.00                 SatProblem::setUnitFlag() [109]
-----------------------------------------------
                                                 <spontaneous>
[110]    0.0    0.03    0.00                 SatProblem::getSampleSize() [110]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.0    0.03    0.00                 SatProblem::setFixedAtomi(int, int) [111]
-----------------------------------------------
                0.01    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[112]    0.0    0.01    0.00    1000         SatProblem::updateTheta(double*) [112]
-----------------------------------------------
                                                 <spontaneous>
[113]    0.0    0.01    0.00                 SatProblem::getNumFixedAtom() [113]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[118]    0.0    0.00    0.00    8006         Timer::time() [118]
-----------------------------------------------
                0.00    0.00    1932/3864        std::list<int, std::allocator<int> >::begin() const [124]
                0.00    0.00    1932/3864        std::list<int, std::allocator<int> >::end() const [123]
[119]    0.0    0.00    0.00    3864         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [119]
-----------------------------------------------
                0.00    0.00       4/1936        std::allocator<std::_List_node<int> >::allocator() [146]
                0.00    0.00    1932/1936        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [77]
[120]    0.0    0.00    0.00    1936         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [120]
-----------------------------------------------
                0.00    0.00    1932/1932        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [125]
[121]    0.0    0.00    0.00    1932         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [121]
-----------------------------------------------
                0.00    0.00    1932/1932        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [127]
[122]    0.0    0.00    0.00    1932         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [122]
-----------------------------------------------
                0.00    0.00    1932/1932        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[123]    0.0    0.00    0.00    1932         std::list<int, std::allocator<int> >::end() const [123]
                0.00    0.00    1932/3864        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [119]
-----------------------------------------------
                0.00    0.00    1932/1932        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[124]    0.0    0.00    0.00    1932         std::list<int, std::allocator<int> >::begin() const [124]
                0.00    0.00    1932/3864        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [119]
-----------------------------------------------
                0.00    0.00    1932/1932        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [126]
[125]    0.0    0.00    0.00    1932         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [125]
                0.00    0.00    1932/1932        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [121]
-----------------------------------------------
                0.00    0.00    1932/1932        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [71]
[126]    0.0    0.00    0.00    1932         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [126]
                0.00    0.00    1932/1932        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [125]
-----------------------------------------------
                0.00    0.00    1932/1932        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [70]
[127]    0.0    0.00    0.00    1932         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [127]
                0.00    0.00    1932/1932        std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [122]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[128]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [100]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[129]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
[130]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
[131]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
[132]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
[133]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [133]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[134]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [133]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[135]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [140]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
[136]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[137]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [137]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [33]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [92]
[138]    0.0    0.00    0.00       4         Timer::Timer() [138]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [101]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [170]
[139]    0.0    0.00    0.00       4         Timer::~Timer() [139]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
[140]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [140]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
[141]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
[142]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
[143]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[144]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[145]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
                0.00    0.00       4/4           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
[146]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [146]
                0.00    0.00       4/1936        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [120]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
[147]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
[148]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [81]
[149]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [146]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[150]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
[151]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
[152]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
[153]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [100]
[154]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [63]
[155]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [61]
[156]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [33]
[157]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[158]    0.0    0.00    0.00       4         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [91]
[159]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [159]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [86]
[160]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [86]
[161]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [161]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[162]    0.0    0.00    0.00       1         printlParameters(learnparams*) [162]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[163]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [163]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [161]
[164]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [96]
[165]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [108]
[166]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
[167]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[168]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [168]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [92]
[169]    0.0    0.00    0.00       1         SliceSampling::init() [169]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[170]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [170]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
[171]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [171]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [33]
[172]    0.0    0.00    0.00       1         Random::Random() [172]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
[173]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [173]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
[174]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [174]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
[175]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [175]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
[176]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [176]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [93]
[177]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [177]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[178]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [178]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[179]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [179]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[180]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [96] global constructors keyed to _ZN10SatProblemC2Emb [20] SampleSAT::modelcheck(int) [126] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
 [160] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [10] SampleSAT::randomWalk() [149] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [108] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [173] SampleSAT::setWalkMax(int) [106] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [161] global constructors keyed to cnffilename [174] SampleSAT::setNumSample(int) [41] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [162] printlParameters(learnparams*) [12] SampleSAT::simAnnealing() [46] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [163] printssParameters(samplesatparams*) [175] SampleSAT::setTemperature(double) [34] std::_List_base<int, std::allocator<int> >::_M_init()
 [164] __static_initialization_and_destruction_0(int, int) [176] SampleSAT::setWalkSatProb(double) [35] std::_List_base<int, std::allocator<int> >::_M_clear()
 [165] __static_initialization_and_destruction_0(int, int) [177] SampleSAT::setRandomWalkProb(double) [71] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [166] __static_initialization_and_destruction_0(int, int) [5] SampleSAT::walk() [81] std::_List_base<int, std::allocator<int> >::_List_base()
 [167] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int, char*) [103] std::_List_base<int, std::allocator<int> >::~_List_base()
  [47] SatProblem::cpClVector() [4] SampleSAT::solve(SatProblem*, int*) [83] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [78] SatProblem::getCnjSize(int) [178] SampleSAT::calcAve(learnparams*) [150] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  [22] SatProblem::initParams() [99] SampleSAT::getTemp() [151] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [28] SatProblem::getRealProb(int) [3] SampleSAT::islearn(int, char*) [152] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
 [109] SatProblem::setUnitFlag() [19] SampleSAT::readdata(char*, int) [135] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
 [112] SatProblem::updateTheta(double*) [179] SampleSAT::destlearn(int) [129] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [25] SatProblem::getClVecSize() [102] SampleSAT::lallocate(int) [153] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [23] SatProblem::initSatCheck(int*) [57] SampleSAT::normalize(double*, int) [154] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [55] SatProblem::parseCnfFile(char*) [93] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [15] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [98] SatProblem::parseSliFile(char*) [180] SampleSAT::~SampleSAT() [32] std::_List_iterator<int>::_List_iterator()
 [159] SatProblem::getNumClauses() [58] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [13] std::_List_iterator<int>::operator++(int)
 [110] SatProblem::getSampleSize() [44] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [119] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [168] SatProblem::parseProbFile(char*) [120] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [136] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [111] SatProblem::setFixedAtomi(int, int) [121] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [67] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  [29] SatProblem::getFixedClausei(int) [94] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [37] std::list<int, std::allocator<int> >::_M_create_node(int const&)
 [113] SatProblem::getNumFixedAtom() [140] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [127] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [31] SatProblem::getNumVariables() [141] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [14] std::list<int, std::allocator<int> >::end()
  [39] SatProblem::getNumFixedClause() [142] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [21] std::list<int, std::allocator<int> >::begin()
  [80] SatProblem::getCnf(int) [143] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [26] std::list<int, std::allocator<int> >::clear()
  [74] SatProblem::getCnj(int, int) [59] __gnu_cxx::new_allocator<int>::destroy(int*) [36] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [40] SatProblem::getVar(int) [45] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [27] std::list<int, std::allocator<int> >::push_back(int const&)
  [11] SatProblem::getNsc1(int*, int) [54] __gnu_cxx::new_allocator<int>::new_allocator() [70] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
   [7] SatProblem::getNsc2(int*, int) [52] __gnu_cxx::new_allocator<int>::~new_allocator() [72] std::list<int, std::allocator<int> >::list()
  [56] SatProblem::allocate() [132] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [104] std::list<int, std::allocator<int> >::~list()
  [30] SatProblem::getClVec(int) [144] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [61] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  [76] SatProblem::getCnfij(int, int) [65] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [155] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [48] SatProblem::getGrand() [131] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [156] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [24] SatProblem::getTheta(int) [130] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [62] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
   [8] SatProblem::isSatCnj(int*, int) [38] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [63] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
 [107] SatProblem::addNumSat(int) [51] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [157] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
   [9] SatProblem::afterFlip(int*, int) [133] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [100] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [50] SatProblem::getClause(int) [18] std::_List_iterator<int>::operator*() const [17] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  [75] SatProblem::getNumSat() [16] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [79] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [33] SatProblem::SatProblem(unsigned long, bool) [122] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [66] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
 [101] SatProblem::~SatProblem() [123] std::list<int, std::allocator<int> >::end() const [88] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [169] SliceSampling::init() [124] std::list<int, std::allocator<int> >::begin() const [97] int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  [91] SliceSampling::calcFixed(learnparams*) [64] std::list<int, std::allocator<int> >::empty() const [68] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  [92] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [145] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [89] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [170] SliceSampling::~SliceSampling() [128] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [90] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [118] Timer::time()         [134] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [69] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [137] Timer::printTime(std::ostream&, double const&) [125] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [73] double const& std::max<double>(double const&, double const&)
 [138] Timer::Timer()        [146] std::allocator<std::_List_node<int> >::allocator() [158] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [139] Timer::~Timer()        [77] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [84] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [49] Random::genrand()      [95] std::allocator<std::_List_node<int> >::~allocator() [85] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [171] Random::sgenrand(unsigned long) [147] std::allocator<std::list<int, std::allocator<int> > >::allocator() [82] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [172] Random::Random()      [148] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [105] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
   [6] SampleSAT::greedyWalk() [43] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [87] operator delete(void*, void*)
  [53] SampleSAT::init_model() [42] std::allocator<int>::~allocator() [60] operator new(unsigned long, void*)
