Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ks/call  Ks/call  name    
 26.19   2248.71  2248.71 10085542631     0.00     0.00  SatProblem::isSatCnj(int*, int)
 24.20   4326.41  2077.70 2211974225     0.00     0.00  SatProblem::getNsc2(int*, int)
 11.37   5302.64   976.23        1     0.98     7.91  SampleSAT::islearn(int, char*)
  7.02   5905.37   602.73   200000     0.00     0.00  SampleSAT::modelcheck(int)
  5.03   6337.38   432.00 17604931076     0.00     0.00  std::_List_iterator<int>::operator++(int)
  4.38   6713.80   376.43 19422285262     0.00     0.00  std::_List_iterator<int>::operator*() const
  3.41   7006.84   293.04 9360853670     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  3.37   7295.88   289.04 19143459060     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  3.19   7570.15   274.27 1865590272     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  3.03   7829.89   259.74 10109667678     0.00     0.00  std::list<int, std::allocator<int> >::end()
  1.85   7988.96   159.07 10320372672     0.00     0.00  SatProblem::getTheta(int)
  1.02   8076.27    87.31 3430196224     0.00     0.00  SatProblem::getRealProb(int)
  1.02   8163.43    87.16  7517415     0.00     0.00  SampleSAT::randomWalk()
  0.68   8221.84    58.42 4780865628     0.00     0.00  SatProblem::getClVecSize()
  0.55   8268.84    46.99  7523738     0.00     0.00  SampleSAT::greedyWalk()
  0.50   8311.34    42.50 2375397984     0.00     0.00  SatProblem::getFixedClausei(int)
  0.48   8352.77    41.43 8935791778     0.00     0.00  std::list<int, std::allocator<int> >::begin()
  0.46   8392.59    39.82 3022547445     0.00     0.00  SatProblem::getClVec(int)
  0.44   8430.18    37.59      297     0.00     0.00  SatProblem::getNumVariables()
  0.38   8463.16    32.98 39600776     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.29   8488.24    25.07        2     0.01     0.01  std::_List_iterator<int>::_List_iterator()
  0.20   8505.59    17.36   100000     0.00     0.00  SatProblem::initParams()
  0.17   8520.30    14.70 28912609     0.00     0.00  SatProblem::afterFlip(int*, int)
  0.13   8531.62    11.33 39600776     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.11   8541.17     9.55  7517415     0.00     0.00  SatProblem::getNsc1(int*, int)
  0.04   8544.77     3.60                             SatProblem::getNumFixedClause()
  0.04   8548.25     3.48 2263156286     0.00     0.00  SatProblem::getVar(int)
  0.03   8550.94     2.69 1497628016     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.03   8553.60     2.66 748814008     0.00     0.00  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.03   8555.95     2.35 748814008     0.00     0.00  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.03   8558.19     2.24 101769952     0.00     0.00  Random::genrand()
  0.03   8560.34     2.15   100000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.02   8562.11     1.77   100000     0.00     0.00  SatProblem::cpClVector()
  0.02   8563.87     1.76 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*)
  0.02   8565.45     1.58     3000     0.00     0.00  SampleSAT::normalize(double*, int)
  0.02   8566.93     1.49 1497629184     0.00     0.00  std::allocator<int>::~allocator()
  0.02   8568.38     1.44 748814008     0.00     0.00  std::list<int, std::allocator<int> >::push_back(int const&)
  0.02   8569.75     1.38 1497629184     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.02   8571.13     1.38 1497629184     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.01   8572.22     1.09 748814008     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.01   8573.30     1.07                             SatProblem::getClause(int)
  0.01   8574.36     1.06 748814008     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.01   8575.36     1.00 1497629184     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.01   8576.29     0.93 1497629184     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.01   8577.17     0.88 748814008     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.01   8578.03     0.86 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long)
  0.01   8578.75     0.71 748814008     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.01   8579.37     0.62 200100000     0.00     0.00  double const& std::max<double>(double const&, double const&)
  0.01   8579.90     0.53 30083882     0.00     0.00  SampleSAT::walk()
  0.01   8580.40     0.50 748815176     0.00     0.00  operator new(unsigned long, void*)
  0.01   8580.84     0.44 748814008     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00   8581.23     0.39        1     0.00     0.60  SampleSAT::readdata(char*, int)
  0.00   8581.61     0.39 15042729     0.00     0.00  SampleSAT::simAnnealing()
  0.00   8581.95     0.34   100000     0.00     0.00  SampleSAT::solve(SatProblem*, int*)
  0.00   8582.28     0.33 111998876     0.00     0.00  SatProblem::getNumSat()
  0.00   8582.55     0.27 58400000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00   8582.77     0.22 66516367     0.00     0.00  SatProblem::getCnjSize(int)
  0.00   8582.99     0.22        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00   8583.18     0.20                             SatProblem::getSampleSize()
  0.00   8583.37     0.18        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00   8583.54     0.17 101769952     0.00     0.00  SatProblem::getGrand()
  0.00   8583.68     0.14        1     0.00     0.00  SatProblem::parseSliFile(char*)
  0.00   8583.80     0.12        1     0.00     8.52  SampleSAT::learn(int*, char*, int, char*)
  0.00   8583.92     0.12 43964122     0.00     0.00  SatProblem::getCnj(int, int)
  0.00   8584.03     0.12     1168     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00   8584.14     0.11                             void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00   8584.24     0.10 39599604     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00   8584.34     0.10   100000     0.00     0.00  SampleSAT::init_model()
  0.00   8584.44     0.10        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8584.54     0.10                             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00   8584.64     0.10     2340     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00   8584.73     0.09        1     0.00     0.00  global constructors keyed to _ZN10SatProblemC2Emb
  0.00   8584.82     0.09                             operator delete(void*, void*)
  0.00   8584.89     0.07        1     0.00     0.00  SampleSAT::lallocate(int)
  0.00   8584.95     0.07                             int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  0.00   8585.01     0.06        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8585.07     0.06 28912609     0.00     0.00  SatProblem::addNumSat(int)
  0.00   8585.12     0.05 15042729     0.00     0.00  SampleSAT::getTemp()
  0.00   8585.17     0.05     1168     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00   8585.22     0.05                             SatProblem::getCnfij(int, int)
  0.00   8585.25     0.04 43964122     0.00     0.00  SatProblem::getCnf(int)
  0.00   8585.28     0.03        1     0.00     0.00  global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams
  0.00   8585.30     0.01                             SatProblem::setFixedAtomi(int, int)
  0.00   8585.31     0.01                             SatProblem::setUnitFlag()
  0.00   8585.32     0.01                             SatProblem::getNumFixedAtom()
  0.00   8585.32     0.01     2340     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00   8585.32     0.00     8006     0.00     0.00  Timer::time()
  0.00   8585.32     0.00     2336     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00   8585.32     0.00     1172     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00   8585.32     0.00     1172     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00   8585.32     0.00     1172     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00   8585.32     0.00     1172     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00   8585.32     0.00     1168     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00   8585.32     0.00     1168     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00   8585.32     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00   8585.32     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00   8585.32     0.00     1168     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00   8585.32     0.00     1168     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00   8585.32     0.00     1168     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00   8585.32     0.00     1168     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00     1168     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00     1168     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00   8585.32     0.00     1000     0.00     0.00  SatProblem::updateTheta(double*)
  0.00   8585.32     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00   8585.32     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00   8585.32     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00   8585.32     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00   8585.32     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00   8585.32     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00   8585.32     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00   8585.32     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00   8585.32     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8585.32     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8585.32     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8585.32     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00   8585.32     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8585.32     0.00        6     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00   8585.32     0.00        4     0.00     0.00  Timer::Timer()
  0.00   8585.32     0.00        4     0.00     0.00  Timer::~Timer()
  0.00   8585.32     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long)
  0.00   8585.32     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*)
  0.00   8585.32     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00   8585.32     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00   8585.32     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const
  0.00   8585.32     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00   8585.32     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00   8585.32     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00   8585.32     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00   8585.32     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  0.00   8585.32     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00   8585.32     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00   8585.32     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00   8585.32     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00   8585.32     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00   8585.32     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00   8585.32     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  0.00   8585.32     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00   8585.32     0.00        4     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00   8585.32     0.00        2     0.00     0.00  SatProblem::getNumClauses()
  0.00   8585.32     0.00        1     0.00     0.00  global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams
  0.00   8585.32     0.00        1     0.00     0.00  global constructors keyed to cnffilename
  0.00   8585.32     0.00        1     0.00     0.00  printlParameters(learnparams*)
  0.00   8585.32     0.00        1     0.00     0.00  printssParameters(samplesatparams*)
  0.00   8585.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8585.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8585.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8585.32     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00   8585.32     0.00        1     0.00     0.00  SatProblem::parseCnfFile(char*)
  0.00   8585.32     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*)
  0.00   8585.32     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00   8585.32     0.00        1     0.00     0.03  SatProblem::SatProblem(unsigned long, bool)
  0.00   8585.32     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00   8585.32     0.00        1     0.00     0.00  SliceSampling::init()
  0.00   8585.32     0.00        1     0.00     0.00  SliceSampling::calcFixed(learnparams*)
  0.00   8585.32     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*)
  0.00   8585.32     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00   8585.32     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00   8585.32     0.00        1     0.00     0.00  Random::Random()
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::calcAve(learnparams*)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::destlearn(int)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*)
  0.00   8585.32     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 8585.32 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00 8579.88                 main [1]
                0.12 8516.12       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
               37.21    0.00     294/297         SatProblem::getNumVariables() [31]
                0.00   25.07       1/1           SatProblem::SatProblem(unsigned long, bool) [34]
                0.00    0.78       1/1           SatProblem::parseCnfFile(char*) [57]
                0.14    0.00       1/1           SatProblem::parseSliFile(char*) [79]
                0.00    0.13       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.13       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.00    0.13       1/1           SliceSampling::calcFixed(learnparams*) [80]
                0.00    0.06       1/1           SatProblem::~SatProblem() [99]
                0.00    0.00       4/8006        Timer::time() [117]
                0.00    0.00       2/6           Timer::printTime(std::ostream&, double const&) [137]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*) [168]
                0.00    0.00       1/1           printssParameters(samplesatparams*) [163]
                0.00    0.00       1/1           printlParameters(learnparams*) [162]
                0.00    0.00       1/1           SampleSAT::calcAve(learnparams*) [178]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [170]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.12 8516.12       1/1           main [1]
[2]     99.2    0.12 8516.12       1         SampleSAT::learn(int*, char*, int, char*) [2]
              976.23 6936.70       1/1           SampleSAT::islearn(int, char*) [3]
                0.39  602.73       1/1           SampleSAT::readdata(char*, int) [11]
                0.07    0.00       1/1           SampleSAT::lallocate(int) [96]
                0.00    0.00       2/8006        Timer::time() [117]
                0.00    0.00       1/6           Timer::printTime(std::ostream&, double const&) [137]
                0.00    0.00       1/1           SampleSAT::destlearn(int) [179]
-----------------------------------------------
              976.23 6936.70       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[3]     92.2  976.23 6936.70       1         SampleSAT::islearn(int, char*) [3]
                0.34 6687.77  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
              159.07    0.00 10320372672/10320372672     SatProblem::getTheta(int) [21]
               87.31    0.00 3430196224/3430196224     SatProblem::getRealProb(int) [24]
                1.58    0.62    3000/3000        SampleSAT::normalize(double*, int) [46]
                0.00    0.00  100000/101769952     SatProblem::getGrand() [43]
                0.00    0.00    8000/8006        Timer::time() [117]
                0.00    0.00    1000/1000        SatProblem::updateTheta(double*) [127]
                0.00    0.00       3/6           Timer::printTime(std::ostream&, double const&) [137]
-----------------------------------------------
                0.34 6687.77  100000/100000      SampleSAT::islearn(int, char*) [3]
[4]     77.9    0.34 6687.77  100000         SampleSAT::solve(SatProblem*, int*) [4]
                0.53 6465.78 30083882/30083882     SampleSAT::walk() [5]
               17.36  115.87  100000/100000      SatProblem::initParams() [22]
                2.15   83.48  100000/100000      SatProblem::initSatCheck(int*) [25]
                1.77    0.00  100000/100000      SatProblem::cpClVector() [49]
                0.10    0.74  100000/100000      SampleSAT::init_model() [56]
-----------------------------------------------
                0.53 6465.78 30083882/30083882     SampleSAT::solve(SatProblem*, int*) [4]
[5]     75.3    0.53 6465.78 30083882         SampleSAT::walk() [5]
               46.99 5330.60 7523738/7523738     SampleSAT::greedyWalk() [6]
               87.16  621.31 7517415/7517415     SampleSAT::randomWalk() [10]
                0.39  378.10 15042729/15042729     SampleSAT::simAnnealing() [16]
                0.08    0.99 45125035/101769952     SatProblem::getGrand() [43]
                0.17    0.00 58996491/111998876     SatProblem::getNumSat() [67]
-----------------------------------------------
               46.99 5330.60 7523738/7523738     SampleSAT::walk() [5]
[6]     62.6   46.99 5330.60 7523738         SampleSAT::greedyWalk() [6]
             2063.57 3078.00 2196931496/2211974225     SatProblem::getNsc2(int*, int) [7]
                3.83  181.73 7523738/28912609     SatProblem::afterFlip(int*, int) [9]
                3.37    0.00 2196931496/2263156286     SatProblem::getVar(int) [40]
                0.09    0.00 30442241/111998876     SatProblem::getNumSat() [67]
                0.01    0.00 7523738/28912609     SatProblem::addNumSat(int) [100]
-----------------------------------------------
               14.13   21.08 15042729/2211974225     SampleSAT::simAnnealing() [16]
             2063.57 3078.00 2196931496/2211974225     SampleSAT::greedyWalk() [6]
[7]     60.3 2077.70 3099.07 2211974225         SatProblem::getNsc2(int*, int) [7]
             1634.26    0.00 7329706660/10085542631     SatProblem::isSatCnj(int*, int) [8]
              359.73    0.00 14659413320/17604931076     std::_List_iterator<int>::operator++(int) [15]
              162.57  139.84 6327441036/10109667678     std::list<int, std::allocator<int> >::end() [13]
              284.12    0.00 14659413320/19422285262     std::_List_iterator<int>::operator*() const [17]
              229.12    0.00 15175337936/19143459060     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
              198.08    0.00 6327441036/9360853670     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               41.02   50.35 8847896900/8935791778     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               83.48    0.00 374400000/10085542631     SatProblem::initSatCheck(int*) [25]
              125.77    0.00 564081785/10085542631     SatProblem::getNsc1(int*, int) [14]
              405.20    0.00 1817354186/10085542631     SatProblem::afterFlip(int*, int) [9]
             1634.26    0.00 7329706660/10085542631     SatProblem::getNsc2(int*, int) [7]
[8]     26.2 2248.71    0.00 10085542631         SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
                3.82  181.57 7517415/28912609     SatProblem::getNsc1(int*, int) [14]
                3.83  181.73 7523738/28912609     SampleSAT::greedyWalk() [6]
                7.05  335.05 13871456/28912609     SampleSAT::simAnnealing() [16]
[9]      8.3   14.70  698.35 28912609         SatProblem::afterFlip(int*, int) [9]
              405.20    0.00 1817354186/10085542631     SatProblem::isSatCnj(int*, int) [8]
               48.18   41.44 1875179404/10109667678     std::list<int, std::allocator<int> >::end() [13]
               70.44    0.00 3634708372/19422285262     std::_List_iterator<int>::operator*() const [17]
               58.70    0.00 1875179404/9360853670     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               44.60    0.00 1817354186/17604931076     std::_List_iterator<int>::operator++(int) [15]
               29.19    0.00 1933004622/19143459060     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
                0.27    0.33 57825218/8935791778     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               87.16  621.31 7517415/7517415     SampleSAT::walk() [5]
[10]     8.3   87.16  621.31 7517415         SampleSAT::randomWalk() [10]
                9.55  470.58 7517415/7517415     SatProblem::getNsc1(int*, int) [14]
               58.42    0.00 4780865628/4780865628     SatProblem::getClVecSize() [26]
               42.50    0.00 2375397984/2375397984     SatProblem::getFixedClausei(int) [29]
               39.82    0.00 3022547445/3022547445     SatProblem::getClVec(int) [30]
                0.22    0.00 66516367/66516367     SatProblem::getCnjSize(int) [69]
                0.12    0.04 43964122/43964122     SatProblem::getCnj(int, int) [78]
                0.03    0.00 21982061/2263156286     SatProblem::getVar(int) [40]
                0.02    0.00 7517415/111998876     SatProblem::getNumSat() [67]
                0.01    0.00 7517415/28912609     SatProblem::addNumSat(int) [100]
-----------------------------------------------
                0.39  602.73       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[11]     7.0    0.39  602.73       1         SampleSAT::readdata(char*, int) [11]
              602.73    0.00  200000/200000      SampleSAT::modelcheck(int) [12]
-----------------------------------------------
              602.73    0.00  200000/200000      SampleSAT::readdata(char*, int) [11]
[12]     7.0  602.73    0.00  200000         SampleSAT::modelcheck(int) [12]
-----------------------------------------------
               19.24   16.55 748814008/10109667678     std::list<int, std::allocator<int> >::push_back(int const&) [28]
               29.76   25.60 1158233230/10109667678     SatProblem::getNsc1(int*, int) [14]
               48.18   41.44 1875179404/10109667678     SatProblem::afterFlip(int*, int) [9]
              162.57  139.84 6327441036/10109667678     SatProblem::getNsc2(int*, int) [7]
[13]     5.6  259.74  223.42 10109667678         std::list<int, std::allocator<int> >::end() [13]
              223.42    0.00 1519733086/1865590272     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [20]
-----------------------------------------------
                9.55  470.58 7517415/7517415     SampleSAT::randomWalk() [10]
[14]     5.6    9.55  470.58 7517415         SatProblem::getNsc1(int*, int) [14]
                3.82  181.57 7517415/28912609     SatProblem::afterFlip(int*, int) [9]
              125.77    0.00 564081785/10085542631     SatProblem::isSatCnj(int*, int) [8]
               29.76   25.60 1158233230/10109667678     std::list<int, std::allocator<int> >::end() [13]
               36.26    0.00 1158233230/9360853670     std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
               27.68    0.00 1128163570/17604931076     std::_List_iterator<int>::operator++(int) [15]
               21.87    0.00 1128163570/19422285262     std::_List_iterator<int>::operator*() const [17]
               17.94    0.00 1188302890/19143459060     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
                0.14    0.17 30069660/8935791778     std::list<int, std::allocator<int> >::begin() [23]
-----------------------------------------------
               27.68    0.00 1128163570/17604931076     SatProblem::getNsc1(int*, int) [14]
               44.60    0.00 1817354186/17604931076     SatProblem::afterFlip(int*, int) [9]
              359.73    0.00 14659413320/17604931076     SatProblem::getNsc2(int*, int) [7]
[15]     5.0  432.00    0.00 17604931076         std::_List_iterator<int>::operator++(int) [15]
-----------------------------------------------
                0.39  378.10 15042729/15042729     SampleSAT::walk() [5]
[16]     4.4    0.39  378.10 15042729         SampleSAT::simAnnealing() [16]
                7.05  335.05 13871456/28912609     SatProblem::afterFlip(int*, int) [9]
               14.13   21.08 15042729/2211974225     SatProblem::getNsc2(int*, int) [7]
                0.05    0.60 27344917/101769952     SatProblem::getGrand() [43]
                0.05    0.00 15042729/15042729     SampleSAT::getTemp() [105]
                0.04    0.00 15042729/111998876     SatProblem::getNumSat() [67]
                0.03    0.00 13871456/28912609     SatProblem::addNumSat(int) [100]
                0.02    0.00 15042729/2263156286     SatProblem::getVar(int) [40]
-----------------------------------------------
               21.87    0.00 1128163570/19422285262     SatProblem::getNsc1(int*, int) [14]
               70.44    0.00 3634708372/19422285262     SatProblem::afterFlip(int*, int) [9]
              284.12    0.00 14659413320/19422285262     SatProblem::getNsc2(int*, int) [7]
[17]     4.4  376.43    0.00 19422285262         std::_List_iterator<int>::operator*() const [17]
-----------------------------------------------
               36.26    0.00 1158233230/9360853670     SatProblem::getNsc1(int*, int) [14]
               58.70    0.00 1875179404/9360853670     SatProblem::afterFlip(int*, int) [9]
              198.08    0.00 6327441036/9360853670     SatProblem::getNsc2(int*, int) [7]
[18]     3.4  293.04    0.00 9360853670         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [18]
-----------------------------------------------
                0.00    0.00   14008/19143459060     SatProblem::parseCnfFile(char*) [57]
               12.79    0.00 846799604/19143459060     SatProblem::initParams() [22]
               17.94    0.00 1188302890/19143459060     SatProblem::getNsc1(int*, int) [14]
               29.19    0.00 1933004622/19143459060     SatProblem::afterFlip(int*, int) [9]
              229.12    0.00 15175337936/19143459060     SatProblem::getNsc2(int*, int) [7]
[19]     3.4  289.04    0.00 19143459060         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
-----------------------------------------------
               50.85    0.00 345857186/1865590272     std::list<int, std::allocator<int> >::begin() [23]
              223.42    0.00 1519733086/1865590272     std::list<int, std::allocator<int> >::end() [13]
[20]     3.2  274.27    0.00 1865590272         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [20]
-----------------------------------------------
              159.07    0.00 10320372672/10320372672     SampleSAT::islearn(int, char*) [3]
[21]     1.9  159.07    0.00 10320372672         SatProblem::getTheta(int) [21]
-----------------------------------------------
               17.36  115.87  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[22]     1.6   17.36  115.87  100000         SatProblem::initParams() [22]
                0.10   51.38 39599604/39599604     std::list<int, std::allocator<int> >::clear() [27]
                1.44   49.89 748800000/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [28]
               12.79    0.00 846799604/19143459060     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
                0.27    0.00 58400000/58400000     std::list<int, std::allocator<int> >::empty() const [68]
-----------------------------------------------
                0.14    0.17 30069660/8935791778     SatProblem::getNsc1(int*, int) [14]
                0.27    0.33 57825218/8935791778     SatProblem::afterFlip(int*, int) [9]
               41.02   50.35 8847896900/8935791778     SatProblem::getNsc2(int*, int) [7]
[23]     1.1   41.43   50.85 8935791778         std::list<int, std::allocator<int> >::begin() [23]
               50.85    0.00 345857186/1865590272     std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [20]
-----------------------------------------------
               87.31    0.00 3430196224/3430196224     SampleSAT::islearn(int, char*) [3]
[24]     1.0   87.31    0.00 3430196224         SatProblem::getRealProb(int) [24]
-----------------------------------------------
                2.15   83.48  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[25]     1.0    2.15   83.48  100000         SatProblem::initSatCheck(int*) [25]
               83.48    0.00 374400000/10085542631     SatProblem::isSatCnj(int*, int) [8]
-----------------------------------------------
               58.42    0.00 4780865628/4780865628     SampleSAT::randomWalk() [10]
[26]     0.7   58.42    0.00 4780865628         SatProblem::getClVecSize() [26]
-----------------------------------------------
                0.10   51.38 39599604/39599604     SatProblem::initParams() [22]
[27]     0.6    0.10   51.38 39599604         std::list<int, std::allocator<int> >::clear() [27]
               32.98    0.00 39599604/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [32]
               11.33    7.07 39599604/39600776     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
                0.00    0.00   14008/748814008     SatProblem::parseCnfFile(char*) [57]
                1.44   49.89 748800000/748814008     SatProblem::initParams() [22]
[28]     0.6    1.44   49.90 748814008         std::list<int, std::allocator<int> >::push_back(int const&) [28]
               19.24   16.55 748814008/10109667678     std::list<int, std::allocator<int> >::end() [13]
                2.35   11.76 748814008/748814008     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
-----------------------------------------------
               42.50    0.00 2375397984/2375397984     SampleSAT::randomWalk() [10]
[29]     0.5   42.50    0.00 2375397984         SatProblem::getFixedClausei(int) [29]
-----------------------------------------------
               39.82    0.00 3022547445/3022547445     SampleSAT::randomWalk() [10]
[30]     0.5   39.82    0.00 3022547445         SatProblem::getClVec(int) [30]
-----------------------------------------------
                0.13    0.00       1/297         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.13    0.00       1/297         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.13    0.00       1/297         SliceSampling::calcFixed(learnparams*) [80]
               37.21    0.00     294/297         main [1]
[31]     0.4   37.59    0.00     297         SatProblem::getNumVariables() [31]
-----------------------------------------------
                0.00    0.00       4/39600776     std::_List_base<int, std::allocator<int> >::_List_base() [77]
                0.00    0.00    1168/39600776     std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
               32.98    0.00 39599604/39600776     std::list<int, std::allocator<int> >::clear() [27]
[32]     0.4   32.98    0.00 39600776         std::_List_base<int, std::allocator<int> >::_M_init() [32]
-----------------------------------------------
               25.07    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [34]
[33]     0.3   25.07    0.00       2         std::_List_iterator<int>::_List_iterator() [33]
-----------------------------------------------
                0.00   25.07       1/1           main [1]
[34]     0.3    0.00   25.07       1         SatProblem::SatProblem(unsigned long, bool) [34]
               25.07    0.00       2/2           std::_List_iterator<int>::_List_iterator() [33]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
                0.00    0.00       1/1           Random::Random() [172]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [171]
-----------------------------------------------
                0.00    0.00    1172/39600776     std::_List_base<int, std::allocator<int> >::~_List_base() [101]
               11.33    7.07 39599604/39600776     std::list<int, std::allocator<int> >::clear() [27]
[35]     0.2   11.33    7.07 39600776         std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                1.35    1.84 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                1.06    0.86 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
                0.74    0.50 748814008/1497629184     std::allocator<int>::~allocator() [42]
                0.71    0.00 748814008/748814008     __gnu_cxx::new_allocator<int>::destroy(int*) [59]
-----------------------------------------------
                2.35   11.76 748814008/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [28]
[36]     0.2    2.35   11.76 748814008         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
                2.66    9.10 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
-----------------------------------------------
                2.66    9.10 748814008/748814008     std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [36]
[37]     0.1    2.66    9.10 748814008         std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
                1.35    1.84 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                0.88    2.20 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
                1.09    0.50 748814008/748814008     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [50]
                0.74    0.50 748814008/1497629184     std::allocator<int>::~allocator() [42]
-----------------------------------------------
                1.35    1.84 748814008/1497628016     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                1.35    1.84 748814008/1497628016     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[38]     0.1    2.69    3.68 1497628016         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
                1.37    0.93 1497628016/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                1.38    0.00 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.0    3.60    0.00                 SatProblem::getNumFixedClause() [39]
-----------------------------------------------
                0.02    0.00 15042729/2263156286     SampleSAT::simAnnealing() [16]
                0.03    0.00 21982061/2263156286     SampleSAT::randomWalk() [10]
                0.04    0.00 29200000/2263156286     SampleSAT::init_model() [56]
                3.37    0.00 2196931496/2263156286     SampleSAT::greedyWalk() [6]
[40]     0.0    3.48    0.00 2263156286         SatProblem::getVar(int) [40]
-----------------------------------------------
                0.88    2.20 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[41]     0.0    0.88    2.20 748814008         std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
                1.76    0.44 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
                0.74    0.50 748814008/1497629184     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
                0.74    0.50 748814008/1497629184     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[42]     0.0    1.49    1.00 1497629184         std::allocator<int>::~allocator() [42]
                1.00    0.00 1497629184/1497629184     __gnu_cxx::new_allocator<int>::~new_allocator() [53]
-----------------------------------------------
                0.00    0.00  100000/101769952     SampleSAT::islearn(int, char*) [3]
                0.05    0.60 27344917/101769952     SampleSAT::simAnnealing() [16]
                0.05    0.64 29200000/101769952     SampleSAT::init_model() [56]
                0.08    0.99 45125035/101769952     SampleSAT::walk() [5]
[43]     0.0    0.17    2.24 101769952         SatProblem::getGrand() [43]
                2.24    0.00 101769952/101769952     Random::genrand() [45]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
                1.37    0.93 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[44]     0.0    1.38    0.93 1497629184         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.93    0.00 1497629184/1497629184     __gnu_cxx::new_allocator<int>::new_allocator() [54]
-----------------------------------------------
                2.24    0.00 101769952/101769952     SatProblem::getGrand() [43]
[45]     0.0    2.24    0.00 101769952         Random::genrand() [45]
-----------------------------------------------
                1.58    0.62    3000/3000        SampleSAT::islearn(int, char*) [3]
[46]     0.0    1.58    0.62    3000         SampleSAT::normalize(double*, int) [46]
                0.62    0.00 200100000/200100000     double const& std::max<double>(double const&, double const&) [60]
-----------------------------------------------
                1.76    0.44 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_get_node() [41]
[47]     0.0    1.76    0.44 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
                0.44    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [62]
-----------------------------------------------
                1.06    0.86 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[48]     0.0    1.06    0.86 748814008         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
                0.86    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [55]
-----------------------------------------------
                1.77    0.00  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[49]     0.0    1.77    0.00  100000         SatProblem::cpClVector() [49]
-----------------------------------------------
                1.09    0.50 748814008/748814008     std::list<int, std::allocator<int> >::_M_create_node(int const&) [37]
[50]     0.0    1.09    0.50 748814008         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [50]
                0.50    0.00 748814008/748815176     operator new(unsigned long, void*) [61]
-----------------------------------------------
                0.00    0.00    1168/1497629184     std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
                1.38    0.00 1497628016/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [38]
[51]     0.0    1.38    0.00 1497629184         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
-----------------------------------------------
                                                 <spontaneous>
[52]     0.0    1.07    0.00                 SatProblem::getClause(int) [52]
-----------------------------------------------
                1.00    0.00 1497629184/1497629184     std::allocator<int>::~allocator() [42]
[53]     0.0    1.00    0.00 1497629184         __gnu_cxx::new_allocator<int>::~new_allocator() [53]
-----------------------------------------------
                0.93    0.00 1497629184/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
[54]     0.0    0.93    0.00 1497629184         __gnu_cxx::new_allocator<int>::new_allocator() [54]
-----------------------------------------------
                0.86    0.00 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [48]
[55]     0.0    0.86    0.00 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [55]
-----------------------------------------------
                0.10    0.74  100000/100000      SampleSAT::solve(SatProblem*, int*) [4]
[56]     0.0    0.10    0.74  100000         SampleSAT::init_model() [56]
                0.05    0.64 29200000/101769952     SatProblem::getGrand() [43]
                0.04    0.00 29200000/2263156286     SatProblem::getVar(int) [40]
-----------------------------------------------
                0.00    0.78       1/1           main [1]
[57]     0.0    0.00    0.78       1         SatProblem::parseCnfFile(char*) [57]
                0.00    0.78       1/1           SatProblem::allocate() [58]
                0.00    0.00   14008/748814008     std::list<int, std::allocator<int> >::push_back(int const&) [28]
                0.00    0.00   14008/19143459060     std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long) [19]
-----------------------------------------------
                0.00    0.78       1/1           SatProblem::parseCnfFile(char*) [57]
[58]     0.0    0.00    0.78       1         SatProblem::allocate() [58]
                0.22    0.19       4/4           std::list<int, std::allocator<int> >::list() [63]
                0.00    0.37       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [66]
                0.00    0.00       4/1172        std::list<int, std::allocator<int> >::~list() [102]
-----------------------------------------------
                0.71    0.00 748814008/748814008     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
[59]     0.0    0.71    0.00 748814008         __gnu_cxx::new_allocator<int>::destroy(int*) [59]
-----------------------------------------------
                0.62    0.00 200100000/200100000     SampleSAT::normalize(double*, int) [46]
[60]     0.0    0.62    0.00 200100000         double const& std::max<double>(double const&, double const&) [60]
-----------------------------------------------
                0.00    0.00    1168/748815176     void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
                0.50    0.00 748814008/748815176     __gnu_cxx::new_allocator<int>::construct(int*, int const&) [50]
[61]     0.0    0.50    0.00 748815176         operator new(unsigned long, void*) [61]
-----------------------------------------------
                0.44    0.00 748814008/748814008     __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [47]
[62]     0.0    0.44    0.00 748814008         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [62]
-----------------------------------------------
                0.22    0.19       4/4           SatProblem::allocate() [58]
[63]     0.0    0.22    0.19       4         std::list<int, std::allocator<int> >::list() [63]
                0.18    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [77]
-----------------------------------------------
                0.00    0.37       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [65]
[64]     0.0    0.00    0.37       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
                0.00    0.22       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
                0.00    0.10       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [91]
                0.00    0.06       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [86]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
-----------------------------------------------
                0.00    0.37       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [66]
[65]     0.0    0.00    0.37       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [65]
                0.00    0.37       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
-----------------------------------------------
                0.00    0.37       4/4           SatProblem::allocate() [58]
[66]     0.0    0.00    0.37       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [66]
                0.00    0.37       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [65]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
-----------------------------------------------
                0.02    0.00 7517415/111998876     SampleSAT::randomWalk() [10]
                0.04    0.00 15042729/111998876     SampleSAT::simAnnealing() [16]
                0.09    0.00 30442241/111998876     SampleSAT::greedyWalk() [6]
                0.17    0.00 58996491/111998876     SampleSAT::walk() [5]
[67]     0.0    0.33    0.00 111998876         SatProblem::getNumSat() [67]
-----------------------------------------------
                0.27    0.00 58400000/58400000     SatProblem::initParams() [22]
[68]     0.0    0.27    0.00 58400000         std::list<int, std::allocator<int> >::empty() const [68]
-----------------------------------------------
                0.22    0.00 66516367/66516367     SampleSAT::randomWalk() [10]
[69]     0.0    0.22    0.00 66516367         SatProblem::getCnjSize(int) [69]
-----------------------------------------------
                0.00    0.22    1168/1168        void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [71]
[70]     0.0    0.00    0.22    1168         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
                0.00    0.22    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
                0.00    0.00    1168/748815176     operator new(unsigned long, void*) [61]
-----------------------------------------------
                0.00    0.22       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [72]
[71]     0.0    0.00    0.22       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [71]
                0.00    0.22    1168/1168        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
-----------------------------------------------
                0.00    0.22       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
[72]     0.0    0.00    0.22       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [72]
                0.00    0.22       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [71]
-----------------------------------------------
                0.00    0.22       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[73]     0.0    0.00    0.22       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [73]
                0.00    0.22       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&) [72]
-----------------------------------------------
                0.00    0.22    1168/1168        void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [70]
[74]     0.0    0.00    0.22    1168         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
                0.12    0.10    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
                0.00    0.00    1168/1497629184     std::allocator<int>::~allocator() [42]
                0.00    0.00    1168/1497629184     std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [44]
                0.00    0.00    1168/1497629184     std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [51]
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::end() const [122]
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::begin() const [123]
                0.00    0.00    1168/1168        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [126]
-----------------------------------------------
                0.12    0.10    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
[75]     0.0    0.12    0.10    1168         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
                0.05    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [106]
                0.00    0.05    1168/2340        std::allocator<std::_List_node<int> >::~allocator() [88]
                0.00    0.00    1168/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [32]
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [125]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.0    0.20    0.00                 SatProblem::getSampleSize() [76]
-----------------------------------------------
                0.18    0.00       4/4           std::list<int, std::allocator<int> >::list() [63]
[77]     0.0    0.18    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [77]
                0.00    0.00       4/39600776     std::_List_base<int, std::allocator<int> >::_M_init() [32]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
-----------------------------------------------
                0.12    0.04 43964122/43964122     SampleSAT::randomWalk() [10]
[78]     0.0    0.12    0.04 43964122         SatProblem::getCnj(int, int) [78]
                0.04    0.00 43964122/43964122     SatProblem::getCnf(int) [108]
-----------------------------------------------
                0.14    0.00       1/1           main [1]
[79]     0.0    0.14    0.00       1         SatProblem::parseSliFile(char*) [79]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[80]     0.0    0.00    0.13       1         SliceSampling::calcFixed(learnparams*) [80]
                0.13    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/2           SatProblem::getNumClauses() [159]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[81]     0.0    0.00    0.13       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
                0.13    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SliceSampling::init() [169]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[82]     0.0    0.00    0.13       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.13    0.00       1/297         SatProblem::getNumVariables() [31]
                0.00    0.00       1/4           Timer::Timer() [138]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [173]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [174]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [176]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [177]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [175]
                0.00    0.00       1/2           SatProblem::getNumClauses() [159]
-----------------------------------------------
                                                 <spontaneous>
[83]     0.0    0.00    0.12                 __do_global_ctors_aux [83]
                0.09    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [94]
                0.03    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [109]
                0.00    0.00       1/1           global constructors keyed to cnffilename [161]
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
-----------------------------------------------
                0.06    0.05       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [85]
[84]     0.0    0.06    0.05       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
                0.00    0.05    1168/1168        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
-----------------------------------------------
                0.00    0.11       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [86]
[85]     0.0    0.00    0.11       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [85]
                0.06    0.05       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
-----------------------------------------------
                0.00    0.06       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [98]
                0.00    0.06       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[86]     0.0    0.00    0.11       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [86]
                0.00    0.11       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [85]
-----------------------------------------------
                                                 <spontaneous>
[87]     0.0    0.11    0.00                 void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [87]
-----------------------------------------------
                0.00    0.05    1168/2340        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
                0.00    0.05    1172/2340        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
[88]     0.0    0.01    0.10    2340         std::allocator<std::_List_node<int> >::~allocator() [88]
                0.10    0.00    2340/2340        __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [93]
-----------------------------------------------
                0.10    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
[89]     0.0    0.10    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [89]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
-----------------------------------------------
                0.00    0.10       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [91]
[90]     0.0    0.00    0.10       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
                0.10    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [89]
-----------------------------------------------
                0.00    0.10       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[91]     0.0    0.00    0.10       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [91]
                0.00    0.10       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [90]
-----------------------------------------------
                                                 <spontaneous>
[92]     0.0    0.10    0.00                 std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [92]
-----------------------------------------------
                0.10    0.00    2340/2340        std::allocator<std::_List_node<int> >::~allocator() [88]
[93]     0.0    0.10    0.00    2340         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [93]
-----------------------------------------------
                0.09    0.00       1/1           __do_global_ctors_aux [83]
[94]     0.0    0.09    0.00       1         global constructors keyed to _ZN10SatProblemC2Emb [94]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                                                 <spontaneous>
[95]     0.0    0.09    0.00                 operator delete(void*, void*) [95]
-----------------------------------------------
                0.07    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[96]     0.0    0.07    0.00       1         SampleSAT::lallocate(int) [96]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.0    0.07    0.00                 int* std::uninitialized_copy<int*, int*>(int*, int*, int*) [97]
-----------------------------------------------
                0.00    0.06       4/4           SatProblem::~SatProblem() [99]
[98]     0.0    0.00    0.06       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [98]
                0.00    0.06       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [86]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
-----------------------------------------------
                0.00    0.06       1/1           main [1]
[99]     0.0    0.00    0.06       1         SatProblem::~SatProblem() [99]
                0.00    0.06       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [98]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.01    0.00 7517415/28912609     SampleSAT::randomWalk() [10]
                0.01    0.00 7523738/28912609     SampleSAT::greedyWalk() [6]
                0.03    0.00 13871456/28912609     SampleSAT::simAnnealing() [16]
[100]    0.0    0.06    0.00 28912609         SatProblem::addNumSat(int) [100]
-----------------------------------------------
                0.00    0.05    1172/1172        std::list<int, std::allocator<int> >::~list() [102]
[101]    0.0    0.00    0.05    1172         std::_List_base<int, std::allocator<int> >::~_List_base() [101]
                0.00    0.05    1172/1172        std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
                0.00    0.00    1172/39600776     std::_List_base<int, std::allocator<int> >::_M_clear() [35]
-----------------------------------------------
                0.00    0.00       4/1172        SatProblem::allocate() [58]
                0.00    0.05    1168/1172        void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
[102]    0.0    0.00    0.05    1172         std::list<int, std::allocator<int> >::~list() [102]
                0.00    0.05    1172/1172        std::_List_base<int, std::allocator<int> >::~_List_base() [101]
-----------------------------------------------
                0.00    0.05    1168/1168        void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [84]
[103]    0.0    0.00    0.05    1168         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [103]
                0.00    0.05    1168/1172        std::list<int, std::allocator<int> >::~list() [102]
-----------------------------------------------
                0.00    0.05    1172/1172        std::_List_base<int, std::allocator<int> >::~_List_base() [101]
[104]    0.0    0.00    0.05    1172         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [104]
                0.00    0.05    1172/2340        std::allocator<std::_List_node<int> >::~allocator() [88]
-----------------------------------------------
                0.05    0.00 15042729/15042729     SampleSAT::simAnnealing() [16]
[105]    0.0    0.05    0.00 15042729         SampleSAT::getTemp() [105]
-----------------------------------------------
                0.05    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
[106]    0.0    0.05    0.00    1168         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [106]
                0.00    0.00    1168/1172        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [119]
-----------------------------------------------
                                                 <spontaneous>
[107]    0.0    0.05    0.00                 SatProblem::getCnfij(int, int) [107]
-----------------------------------------------
                0.04    0.00 43964122/43964122     SatProblem::getCnj(int, int) [78]
[108]    0.0    0.04    0.00 43964122         SatProblem::getCnf(int) [108]
-----------------------------------------------
                0.03    0.00       1/1           __do_global_ctors_aux [83]
[109]    0.0    0.03    0.00       1         global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [109]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                                                 <spontaneous>
[110]    0.0    0.01    0.00                 SatProblem::setFixedAtomi(int, int) [110]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.0    0.01    0.00                 SatProblem::setUnitFlag() [111]
-----------------------------------------------
                                                 <spontaneous>
[112]    0.0    0.01    0.00                 SatProblem::getNumFixedAtom() [112]
-----------------------------------------------
                0.00    0.00       2/8006        SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       4/8006        main [1]
                0.00    0.00    8000/8006        SampleSAT::islearn(int, char*) [3]
[117]    0.0    0.00    0.00    8006         Timer::time() [117]
-----------------------------------------------
                0.00    0.00    1168/2336        std::list<int, std::allocator<int> >::begin() const [123]
                0.00    0.00    1168/2336        std::list<int, std::allocator<int> >::end() const [122]
[118]    0.0    0.00    0.00    2336         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [118]
-----------------------------------------------
                0.00    0.00       4/1172        std::allocator<std::_List_node<int> >::allocator() [146]
                0.00    0.00    1168/1172        std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [106]
[119]    0.0    0.00    0.00    1172         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [119]
-----------------------------------------------
                0.00    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [124]
[120]    0.0    0.00    0.00    1168         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [120]
-----------------------------------------------
                0.00    0.00    1168/1168        void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [126]
[121]    0.0    0.00    0.00    1168         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [121]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
[122]    0.0    0.00    0.00    1168         std::list<int, std::allocator<int> >::end() const [122]
                0.00    0.00    1168/2336        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [118]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
[123]    0.0    0.00    0.00    1168         std::list<int, std::allocator<int> >::begin() const [123]
                0.00    0.00    1168/2336        std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [118]
-----------------------------------------------
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [125]
[124]    0.0    0.00    0.00    1168         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [124]
                0.00    0.00    1168/1168        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [120]
-----------------------------------------------
                0.00    0.00    1168/1168        std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [75]
[125]    0.0    0.00    0.00    1168         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [125]
                0.00    0.00    1168/1168        std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [124]
-----------------------------------------------
                0.00    0.00    1168/1168        std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [74]
[126]    0.0    0.00    0.00    1168         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [126]
                0.00    0.00    1168/1168        std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [121]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::islearn(int, char*) [3]
[127]    0.0    0.00    0.00    1000         SatProblem::updateTheta(double*) [127]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [66]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[128]    0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [98]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[129]    0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [129]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
[130]    0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
[131]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
[132]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
[133]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [133]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[134]    0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [133]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[135]    0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [140]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [89]
[136]    0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [136]
-----------------------------------------------
                0.00    0.00       1/6           SampleSAT::learn(int*, char*, int, char*) [2]
                0.00    0.00       2/6           main [1]
                0.00    0.00       3/6           SampleSAT::islearn(int, char*) [3]
[137]    0.0    0.00    0.00       6         Timer::printTime(std::ostream&, double const&) [137]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::SatProblem(unsigned long, bool) [34]
                0.00    0.00       1/4           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.00       1/4           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
[138]    0.0    0.00    0.00       4         Timer::Timer() [138]
-----------------------------------------------
                0.00    0.00       1/4           main [1]
                0.00    0.00       1/4           SatProblem::~SatProblem() [99]
                0.00    0.00       1/4           SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           SliceSampling::~SliceSampling() [170]
[139]    0.0    0.00    0.00       4         Timer::~Timer() [139]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
[140]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [140]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
[141]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [131]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
[142]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
[143]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[144]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [144]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [130]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[145]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [128]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [134]
                0.00    0.00       4/4           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
[146]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [146]
                0.00    0.00       4/1172        __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [119]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
[147]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [142]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
[148]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [143]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [77]
[149]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [149]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [146]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[150]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long) [150]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [141]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
[151]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [147]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
[152]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [148]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
[153]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [151]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [98]
[154]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [154]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [152]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long) [135]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >) [66]
[155]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [155]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&) [64]
[156]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [156]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [132]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [34]
[157]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [157]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [153]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [145]
[158]    0.0    0.00    0.00       4         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [158]
-----------------------------------------------
                0.00    0.00       1/2           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
                0.00    0.00       1/2           SliceSampling::calcFixed(learnparams*) [80]
[159]    0.0    0.00    0.00       2         SatProblem::getNumClauses() [159]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [83]
[160]    0.0    0.00    0.00       1         global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [83]
[161]    0.0    0.00    0.00       1         global constructors keyed to cnffilename [161]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[162]    0.0    0.00    0.00       1         printlParameters(learnparams*) [162]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[163]    0.0    0.00    0.00       1         printssParameters(samplesatparams*) [163]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to cnffilename [161]
[164]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [164]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN10SatProblemC2Emb [94]
[165]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [165]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [109]
[166]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [166]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [160]
[167]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [167]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[168]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*) [168]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [81]
[169]    0.0    0.00    0.00       1         SliceSampling::init() [169]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[170]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [170]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [34]
[171]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [171]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [34]
[172]    0.0    0.00    0.00       1         Random::Random() [172]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[173]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [173]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[174]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [174]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[175]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [175]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[176]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [176]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [82]
[177]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [177]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[178]    0.0    0.00    0.00       1         SampleSAT::calcAve(learnparams*) [178]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::learn(int*, char*, int, char*) [2]
[179]    0.0    0.00    0.00       1         SampleSAT::destlearn(int) [179]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[180]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [180]
                0.00    0.00       1/4           Timer::~Timer() [139]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [94] global constructors keyed to _ZN10SatProblemC2Emb [12] SampleSAT::modelcheck(int) [125] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
 [160] global constructors keyed to _ZN13SliceSamplingC2EP9SampleSATP10SatProblemP11learnparams [10] SampleSAT::randomWalk() [149] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
 [109] global constructors keyed to _ZN9SampleSATC2EP10SatProblemP15samplesatparamsbP11learnparams [173] SampleSAT::setWalkMax(int) [104] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
 [161] global constructors keyed to cnffilename [174] SampleSAT::setNumSample(int) [41] std::_List_base<int, std::allocator<int> >::_M_get_node()
 [162] printlParameters(learnparams*) [16] SampleSAT::simAnnealing() [48] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [163] printssParameters(samplesatparams*) [175] SampleSAT::setTemperature(double) [32] std::_List_base<int, std::allocator<int> >::_M_init()
 [164] __static_initialization_and_destruction_0(int, int) [176] SampleSAT::setWalkSatProb(double) [35] std::_List_base<int, std::allocator<int> >::_M_clear()
 [165] __static_initialization_and_destruction_0(int, int) [177] SampleSAT::setRandomWalkProb(double) [75] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
 [166] __static_initialization_and_destruction_0(int, int) [5] SampleSAT::walk() [77] std::_List_base<int, std::allocator<int> >::_List_base()
 [167] __static_initialization_and_destruction_0(int, int) [2] SampleSAT::learn(int*, char*, int, char*) [101] std::_List_base<int, std::allocator<int> >::~_List_base()
  [49] SatProblem::cpClVector() [4] SampleSAT::solve(SatProblem*, int*) [84] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [69] SatProblem::getCnjSize(int) [178] SampleSAT::calcAve(learnparams*) [150] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned long)
  [22] SatProblem::initParams() [105] SampleSAT::getTemp() [151] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  [24] SatProblem::getRealProb(int) [3] SampleSAT::islearn(int, char*) [152] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
 [111] SatProblem::setUnitFlag() [11] SampleSAT::readdata(char*, int) [135] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned long)
 [127] SatProblem::updateTheta(double*) [179] SampleSAT::destlearn(int) [129] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  [26] SatProblem::getClVecSize() [96] SampleSAT::lallocate(int) [153] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [25] SatProblem::initSatCheck(int*) [46] SampleSAT::normalize(double*, int) [154] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [57] SatProblem::parseCnfFile(char*) [82] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool, learnparams*) [20] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [79] SatProblem::parseSliFile(char*) [180] SampleSAT::~SampleSAT() [33] std::_List_iterator<int>::_List_iterator()
 [159] SatProblem::getNumClauses() [55] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned long) [15] std::_List_iterator<int>::operator++(int)
  [76] SatProblem::getSampleSize() [47] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned long, void const*) [118] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
 [168] SatProblem::parseProbFile(char*) [119] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [136] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [110] SatProblem::setFixedAtomi(int, int) [120] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [71] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  [29] SatProblem::getFixedClausei(int) [93] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [37] std::list<int, std::allocator<int> >::_M_create_node(int const&)
 [112] SatProblem::getNumFixedAtom() [140] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned long) [126] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [31] SatProblem::getNumVariables() [141] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned long, void const*) [13] std::list<int, std::allocator<int> >::end()
  [39] SatProblem::getNumFixedClause() [142] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [23] std::list<int, std::allocator<int> >::begin()
 [108] SatProblem::getCnf(int) [143] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [27] std::list<int, std::allocator<int> >::clear()
  [78] SatProblem::getCnj(int, int) [59] __gnu_cxx::new_allocator<int>::destroy(int*) [36] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [40] SatProblem::getVar(int) [50] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [28] std::list<int, std::allocator<int> >::push_back(int const&)
  [14] SatProblem::getNsc1(int*, int) [54] __gnu_cxx::new_allocator<int>::new_allocator() [74] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
   [7] SatProblem::getNsc2(int*, int) [53] __gnu_cxx::new_allocator<int>::~new_allocator() [63] std::list<int, std::allocator<int> >::list()
  [58] SatProblem::allocate() [132] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [102] std::list<int, std::allocator<int> >::~list()
  [30] SatProblem::getClVec(int) [144] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [64] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
 [107] SatProblem::getCnfij(int, int) [62] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [155] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  [43] SatProblem::getGrand() [131] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [156] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  [21] SatProblem::getTheta(int) [130] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [65] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned long, std::list<int, std::allocator<int> > const&)
   [8] SatProblem::isSatCnj(int*, int) [38] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [66] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned long, std::list<int, std::allocator<int> >)
 [100] SatProblem::addNumSat(int) [51] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [157] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
   [9] SatProblem::afterFlip(int*, int) [133] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [98] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  [52] SatProblem::getClause(int) [17] std::_List_iterator<int>::operator*() const [19] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned long)
  [67] SatProblem::getNumSat() [18] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [92] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [34] SatProblem::SatProblem(unsigned long, bool) [121] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [70] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  [99] SatProblem::~SatProblem() [122] std::list<int, std::allocator<int> >::end() const [89] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [169] SliceSampling::init() [123] std::list<int, std::allocator<int> >::begin() const [97] int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
  [80] SliceSampling::calcFixed(learnparams*) [68] std::list<int, std::allocator<int> >::empty() const [72] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&)
  [81] SliceSampling::SliceSampling(SampleSAT*, SatProblem*, learnparams*) [145] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned long, char const*) const [90] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [170] SliceSampling::~SliceSampling() [128] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [91] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [117] Timer::time()         [134] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [73] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned long, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [137] Timer::printTime(std::ostream&, double const&) [124] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [60] double const& std::max<double>(double const&, double const&)
 [138] Timer::Timer()        [146] std::allocator<std::_List_node<int> >::allocator() [158] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [139] Timer::~Timer()       [106] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [85] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [45] Random::genrand()      [88] std::allocator<std::_List_node<int> >::~allocator() [86] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [171] Random::sgenrand(unsigned long) [147] std::allocator<std::list<int, std::allocator<int> > >::allocator() [87] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [172] Random::Random()      [148] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [103] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
   [6] SampleSAT::greedyWalk() [44] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [95] operator delete(void*, void*)
  [56] SampleSAT::init_model() [42] std::allocator<int>::~allocator() [61] operator new(unsigned long, void*)
