Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 40.00      0.02     0.02    15004     1.33     2.32  SatProblem::getNsc2(int*, int)
 20.00      0.03     0.01   385746     0.03     0.03  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
 20.00      0.04     0.01    70562     0.14     0.14  std::list<int, std::allocator<int> >::begin()
 20.00      0.05     0.01    42060     0.24     0.24  __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*)
  0.00      0.05     0.00   340761     0.00     0.00  std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  0.00      0.05     0.00   270199     0.00     0.00  std::list<int, std::allocator<int> >::end()
  0.00      0.05     0.00   228139     0.00     0.00  std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const
  0.00      0.05     0.00   179356     0.00     0.00  std::_List_iterator<int>::operator*() const
  0.00      0.05     0.00   157577     0.00     0.00  std::_List_iterator<int>::operator++(int)
  0.00      0.05     0.00   110678     0.00     0.00  SatProblem::isSatCnj(int*, int)
  0.00      0.05     0.00    84180     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.05     0.00    84180     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.05     0.00    84180     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const
  0.00      0.05     0.00    84180     0.00     0.00  std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&)
  0.00      0.05     0.00    84180     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.05     0.00    84120     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      0.05     0.00    42120     0.00     0.00  operator new(unsigned int, void*)
  0.00      0.05     0.00    42060     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int)
  0.00      0.05     0.00    42060     0.00     0.00  __gnu_cxx::new_allocator<int>::destroy(int*)
  0.00      0.05     0.00    42060     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.00      0.05     0.00    42060     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const
  0.00      0.05     0.00    42060     0.00     0.24  std::_List_base<int, std::allocator<int> >::_M_get_node()
  0.00      0.05     0.00    42060     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
  0.00      0.05     0.00    42060     0.00     0.24  std::list<int, std::allocator<int> >::_M_create_node(int const&)
  0.00      0.05     0.00    42060     0.00     0.24  std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  0.00      0.05     0.00    42060     0.00     0.24  std::list<int, std::allocator<int> >::push_back(int const&)
  0.00      0.05     0.00    41216     0.00     0.00  SatProblem::getClVecSize()
  0.00      0.05     0.00    32305     0.00     0.00  SatProblem::getVar(int)
  0.00      0.05     0.00    31019     0.00     0.00  SatProblem::getNumVariables()
  0.00      0.05     0.00    30000     0.00     0.00  std::list<int, std::allocator<int> >::empty() const
  0.00      0.05     0.00    23608     0.00     0.00  SatProblem::getGrand()
  0.00      0.05     0.00    23608     0.00     0.00  Random::genrand()
  0.00      0.05     0.00    20928     0.00     0.00  SatProblem::getClVec(int)
  0.00      0.05     0.00    18816     0.00     0.00  SatProblem::getFixedClausei(int)
  0.00      0.05     0.00    15049     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_init()
  0.00      0.05     0.00    15049     0.00     0.00  std::_List_base<int, std::allocator<int> >::_M_clear()
  0.00      0.05     0.00    14985     0.00     0.00  std::list<int, std::allocator<int> >::clear()
  0.00      0.05     0.00    11603     0.00     0.00  SatProblem::getNumSat()
  0.00      0.05     0.00     7290     0.00     0.00  SatProblem::getCnjSize(int)
  0.00      0.05     0.00     4602     0.00     0.00  SatProblem::getCnf(int)
  0.00      0.05     0.00     4602     0.00     0.00  SatProblem::getCnj(int, int)
  0.00      0.05     0.00     3608     0.00    10.46  SampleSAT::walk()
  0.00      0.05     0.00     3481     0.00     0.00  SatProblem::addNumSat(int)
  0.00      0.05     0.00     3481     0.00     0.55  SatProblem::afterFlip(int*, int)
  0.00      0.05     0.00     1834     0.00     2.83  SampleSAT::simAnnealing()
  0.00      0.05     0.00     1834     0.00     0.00  SampleSAT::getTemp()
  0.00      0.05     0.00     1000     0.00     0.00  printModel(std::ostream&, int*, SatProblem*)
  0.00      0.05     0.00     1000     0.00     0.00  SatProblem::cpClVector()
  0.00      0.05     0.00     1000     0.00    12.24  SatProblem::initParams()
  0.00      0.05     0.00     1000     0.00     0.00  SatProblem::initSatCheck(int*)
  0.00      0.05     0.00     1000     0.00     0.00  SampleSAT::init_model()
  0.00      0.05     0.00     1000     0.00    49.98  SampleSAT::solve(SatProblem*, int*)
  0.00      0.05     0.00      896     0.00     1.76  SatProblem::getNsc1(int*, int)
  0.00      0.05     0.00      896     0.00     1.76  SampleSAT::randomWalk()
  0.00      0.05     0.00      878     0.00    35.28  SampleSAT::greedyWalk()
  0.00      0.05     0.00      124     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator()
  0.00      0.05     0.00      120     0.00     0.00  std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  0.00      0.05     0.00       64     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator()
  0.00      0.05     0.00       64     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.05     0.00       64     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  0.00      0.05     0.00       64     0.00     0.00  std::_List_base<int, std::allocator<int> >::~_List_base()
  0.00      0.05     0.00       64     0.00     0.00  std::list<int, std::allocator<int> >::~list()
  0.00      0.05     0.00       60     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&)
  0.00      0.05     0.00       60     0.00     0.00  std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const
  0.00      0.05     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::end() const
  0.00      0.05     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::begin() const
  0.00      0.05     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&)
  0.00      0.05     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&)
  0.00      0.05     0.00       60     0.00     0.00  std::allocator<std::_List_node<int> >::~allocator()
  0.00      0.05     0.00       60     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&)
  0.00      0.05     0.00       60     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  0.00      0.05     0.00       60     0.00     0.00  void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  0.00      0.05     0.00       60     0.00     0.00  std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00       60     0.00     0.00  void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00       60     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  0.00      0.05     0.00       24     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const
  0.00      0.05     0.00       20     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
  0.00      0.05     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const
  0.00      0.05     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const
  0.00      0.05     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&)
  0.00      0.05     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const
  0.00      0.05     0.00        8     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const
  0.00      0.05     0.00        8     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.05     0.00        8     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.05     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.05     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.05     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.05     0.00        8     0.00     0.00  std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.05     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  0.00      0.05     0.00        8     0.00     0.00  void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.05     0.00        7     0.00     0.00  Timer::printTime(std::ostream&, double const&)
  0.00      0.05     0.00        4     0.00     0.00  Timer::time()
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*)
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator()
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator()
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&)
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const
  0.00      0.05     0.00        4     0.00     0.00  std::allocator<std::_List_node<int> >::allocator()
  0.00      0.05     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::allocator()
  0.00      0.05     0.00        4     0.00     0.00  std::allocator<std::list<int, std::allocator<int> > >::~allocator()
  0.00      0.05     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl()
  0.00      0.05     0.00        4     0.00     0.00  std::_List_base<int, std::allocator<int> >::_List_base()
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  0.00      0.05     0.00        4     0.00     0.00  void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00        4     0.00     0.00  std::list<int, std::allocator<int> >::list()
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
  0.00      0.05     0.00        4     0.00     0.00  std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
  0.00      0.05     0.00        4     0.00     0.00  void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  0.00      0.05     0.00        4     0.00     0.00  void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
  0.00      0.05     0.00        4     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      0.05     0.00        2     0.00     0.00  Timer::Timer()
  0.00      0.05     0.00        2     0.00     0.00  Timer::~Timer()
  0.00      0.05     0.00        2     0.00     0.00  std::_List_iterator<int>::_List_iterator()
  0.00      0.05     0.00        2     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00      0.05     0.00        1     0.00     0.00  global constructors keyed to SatProblem::SatProblem(unsigned long, bool)
  0.00      0.05     0.00        1     0.00     0.00  global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*)
  0.00      0.05     0.00        1     0.00     0.00  global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool)
  0.00      0.05     0.00        1     0.00     0.00  global constructors keyed to inCnfFile
  0.00      0.05     0.00        1     0.00     0.00  printParameters(samplesatparams*)
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00    15.82  SatProblem::parseCnfFile(char*)
  0.00      0.05     0.00        1     0.00     0.00  SatProblem::getNumClauses()
  0.00      0.05     0.00        1     0.00     0.00  SatProblem::parseProbFile(char*, std::basic_ofstream<char, std::char_traits<char> >&)
  0.00      0.05     0.00        1     0.00     0.00  SatProblem::allocate()
  0.00      0.05     0.00        1     0.00     0.00  SatProblem::SatProblem(unsigned long, bool)
  0.00      0.05     0.00        1     0.00     0.00  SatProblem::~SatProblem()
  0.00      0.05     0.00        1     0.00     0.00  SliceSampling::printUnitTime()
  0.00      0.05     0.00        1     0.00     0.00  SliceSampling::init()
  0.00      0.05     0.00        1     0.00     0.00  SliceSampling::calcFixed(int)
  0.00      0.05     0.00        1     0.00     0.00  SliceSampling::SliceSampling(SampleSAT*, SatProblem*)
  0.00      0.05     0.00        1     0.00     0.00  SliceSampling::~SliceSampling()
  0.00      0.05     0.00        1     0.00     0.00  Random::sgenrand(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  Random::Random()
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::setWalkMax(int)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::setNumSample(int)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::setTemperature(double)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::setWalkSatProb(double)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::setRandomWalkProb(double)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::calcAve()
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool)
  0.00      0.05     0.00        1     0.00     0.00  SampleSAT::~SampleSAT()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 20.00% of 0.05 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.05                 main [1]
                0.00    0.05    1000/1000        SampleSAT::solve(SatProblem*, int*) [2]
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [18]
                0.00    0.00    1000/1000        printModel(std::ostream&, int*, SatProblem*) [57]
                0.00    0.00      17/31019       SatProblem::getNumVariables() [42]
                0.00    0.00       4/4           Timer::time() [97]
                0.00    0.00       2/2           std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [129]
                0.00    0.00       2/7           Timer::printTime(std::ostream&, double const&) [96]
                0.00    0.00       1/2           Timer::Timer() [126]
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [142]
                0.00    0.00       1/1           SatProblem::parseProbFile(char*, std::basic_ofstream<char, std::char_traits<char> >&) [140]
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
                0.00    0.00       1/1           printParameters(samplesatparams*) [134]
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [147]
                0.00    0.00       1/1           SliceSampling::printUnitTime() [144]
                0.00    0.00       1/1           SliceSampling::calcFixed(int) [146]
                0.00    0.00       1/1           SampleSAT::calcAve() [156]
                0.00    0.00       1/1           SliceSampling::~SliceSampling() [148]
                0.00    0.00       1/1           SampleSAT::~SampleSAT() [158]
                0.00    0.00       1/1           SatProblem::~SatProblem() [143]
                0.00    0.00       1/2           Timer::~Timer() [127]
-----------------------------------------------
                0.00    0.05    1000/1000        main [1]
[2]    100.0    0.00    0.05    1000         SampleSAT::solve(SatProblem*, int*) [2]
                0.00    0.04    3608/3608        SampleSAT::walk() [3]
                0.00    0.01    1000/1000        SatProblem::initParams() [6]
                0.00    0.00    1000/1000        SatProblem::cpClVector() [58]
                0.00    0.00    1000/1000        SampleSAT::init_model() [60]
                0.00    0.00    1000/1000        SatProblem::initSatCheck(int*) [59]
-----------------------------------------------
                0.00    0.04    3608/3608        SampleSAT::solve(SatProblem*, int*) [2]
[3]     75.5    0.00    0.04    3608         SampleSAT::walk() [3]
                0.00    0.03     878/878         SampleSAT::greedyWalk() [5]
                0.00    0.01    1834/1834        SampleSAT::simAnnealing() [14]
                0.00    0.00     896/896         SampleSAT::randomWalk() [17]
                0.00    0.00    7089/11603       SatProblem::getNumSat() [51]
                0.00    0.00    5382/23608       SatProblem::getGrand() [44]
-----------------------------------------------
                0.00    0.00    1834/15004       SampleSAT::simAnnealing() [14]
                0.02    0.01   13170/15004       SampleSAT::greedyWalk() [5]
[4]     69.5    0.02    0.01   15004         SatProblem::getNsc2(int*, int) [4]
                0.01    0.00   60016/70562       std::list<int, std::allocator<int> >::begin() [8]
                0.01    0.00  240584/385746      std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
                0.00    0.00  180568/270199      std::list<int, std::allocator<int> >::end() [23]
                0.00    0.00  180568/228139      std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [24]
                0.00    0.00  120552/179356      std::_List_iterator<int>::operator*() const [25]
                0.00    0.00  120552/157577      std::_List_iterator<int>::operator++(int) [26]
                0.00    0.00   60276/110678      SatProblem::isSatCnj(int*, int) [27]
-----------------------------------------------
                0.00    0.03     878/878         SampleSAT::walk() [3]
[5]     62.0    0.00    0.03     878         SampleSAT::greedyWalk() [5]
                0.02    0.01   13170/15004       SatProblem::getNsc2(int*, int) [4]
                0.00    0.00     878/3481        SatProblem::afterFlip(int*, int) [15]
                0.00    0.00   13170/32305       SatProblem::getVar(int) [41]
                0.00    0.00    1784/11603       SatProblem::getNumSat() [51]
                0.00    0.00     878/3481        SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.00    0.01    1000/1000        SampleSAT::solve(SatProblem*, int*) [2]
[6]     24.5    0.00    0.01    1000         SatProblem::initParams() [6]
                0.00    0.01   42000/42060       std::list<int, std::allocator<int> >::push_back(int const&) [13]
                0.00    0.00   86985/385746      std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
                0.00    0.00   30000/30000       std::list<int, std::allocator<int> >::empty() const [43]
                0.00    0.00   14985/14985       std::list<int, std::allocator<int> >::clear() [50]
-----------------------------------------------
                0.00    0.00      60/385746      SatProblem::parseCnfFile(char*) [18]
                0.00    0.00   22414/385746      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   35703/385746      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00   86985/385746      SatProblem::initParams() [6]
                0.01    0.00  240584/385746      SatProblem::getNsc2(int*, int) [4]
[7]     20.0    0.01    0.00  385746         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
-----------------------------------------------
                0.00    0.00    3584/70562       SatProblem::getNsc1(int*, int) [16]
                0.00    0.00    6962/70562       SatProblem::afterFlip(int*, int) [15]
                0.01    0.00   60016/70562       SatProblem::getNsc2(int*, int) [4]
[8]     20.0    0.01    0.00   70562         std::list<int, std::allocator<int> >::begin() [8]
                0.00    0.00   70562/340761      std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.01    0.00   42060/42060       std::_List_base<int, std::allocator<int> >::_M_get_node() [10]
[9]     20.0    0.01    0.00   42060         __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [9]
                0.00    0.00   42060/42060       __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [38]
-----------------------------------------------
                0.00    0.01   42060/42060       std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
[10]    20.0    0.00    0.01   42060         std::_List_base<int, std::allocator<int> >::_M_get_node() [10]
                0.01    0.00   42060/42060       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [9]
-----------------------------------------------
                0.00    0.01   42060/42060       std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [12]
[11]    20.0    0.00    0.01   42060         std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
                0.00    0.01   42060/42060       std::_List_base<int, std::allocator<int> >::_M_get_node() [10]
                0.00    0.00   42060/84120       std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [33]
                0.00    0.00   42060/42060       __gnu_cxx::new_allocator<int>::construct(int*, int const&) [37]
                0.00    0.00   42060/84180       std::allocator<int>::~allocator() [32]
-----------------------------------------------
                0.00    0.01   42060/42060       std::list<int, std::allocator<int> >::push_back(int const&) [13]
[12]    20.0    0.00    0.01   42060         std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [12]
                0.00    0.01   42060/42060       std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
-----------------------------------------------
                0.00    0.00      60/42060       SatProblem::parseCnfFile(char*) [18]
                0.00    0.01   42000/42060       SatProblem::initParams() [6]
[13]    20.0    0.00    0.01   42060         std::list<int, std::allocator<int> >::push_back(int const&) [13]
                0.00    0.01   42060/42060       std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&) [12]
                0.00    0.00   42060/270199      std::list<int, std::allocator<int> >::end() [23]
-----------------------------------------------
                0.00    0.01    1834/1834        SampleSAT::walk() [3]
[14]    10.4    0.00    0.01    1834         SampleSAT::simAnnealing() [14]
                0.00    0.00    1834/15004       SatProblem::getNsc2(int*, int) [4]
                0.00    0.00    1707/3481        SatProblem::afterFlip(int*, int) [15]
                0.00    0.00    3226/23608       SatProblem::getGrand() [44]
                0.00    0.00    1834/1834        SampleSAT::getTemp() [56]
                0.00    0.00    1834/32305       SatProblem::getVar(int) [41]
                0.00    0.00    1834/11603       SatProblem::getNumSat() [51]
                0.00    0.00    1707/3481        SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.00    0.00     878/3481        SampleSAT::greedyWalk() [5]
                0.00    0.00     896/3481        SatProblem::getNsc1(int*, int) [16]
                0.00    0.00    1707/3481        SampleSAT::simAnnealing() [14]
[15]     3.8    0.00    0.00    3481         SatProblem::afterFlip(int*, int) [15]
                0.00    0.00    6962/70562       std::list<int, std::allocator<int> >::begin() [8]
                0.00    0.00   35703/385746      std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
                0.00    0.00   43558/179356      std::_List_iterator<int>::operator*() const [25]
                0.00    0.00   28741/270199      std::list<int, std::allocator<int> >::end() [23]
                0.00    0.00   28741/228139      std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [24]
                0.00    0.00   21779/110678      SatProblem::isSatCnj(int*, int) [27]
                0.00    0.00   21779/157577      std::_List_iterator<int>::operator++(int) [26]
-----------------------------------------------
                0.00    0.00     896/896         SampleSAT::randomWalk() [17]
[16]     3.2    0.00    0.00     896         SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   22414/385746      std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
                0.00    0.00    3584/70562       std::list<int, std::allocator<int> >::begin() [8]
                0.00    0.00     896/3481        SatProblem::afterFlip(int*, int) [15]
                0.00    0.00   18830/270199      std::list<int, std::allocator<int> >::end() [23]
                0.00    0.00   18830/228139      std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [24]
                0.00    0.00   15246/179356      std::_List_iterator<int>::operator*() const [25]
                0.00    0.00   15246/157577      std::_List_iterator<int>::operator++(int) [26]
                0.00    0.00    7623/110678      SatProblem::isSatCnj(int*, int) [27]
-----------------------------------------------
                0.00    0.00     896/896         SampleSAT::walk() [3]
[17]     3.2    0.00    0.00     896         SampleSAT::randomWalk() [17]
                0.00    0.00     896/896         SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   41216/41216       SatProblem::getClVecSize() [40]
                0.00    0.00   20928/20928       SatProblem::getClVec(int) [46]
                0.00    0.00   18816/18816       SatProblem::getFixedClausei(int) [47]
                0.00    0.00    7290/7290        SatProblem::getCnjSize(int) [52]
                0.00    0.00    4602/4602        SatProblem::getCnj(int, int) [54]
                0.00    0.00    2301/32305       SatProblem::getVar(int) [41]
                0.00    0.00     896/11603       SatProblem::getNumSat() [51]
                0.00    0.00     896/3481        SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[18]     0.0    0.00    0.00       1         SatProblem::parseCnfFile(char*) [18]
                0.00    0.00      60/42060       std::list<int, std::allocator<int> >::push_back(int const&) [13]
                0.00    0.00      60/385746      std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int) [7]
                0.00    0.00       1/1           SatProblem::allocate() [141]
-----------------------------------------------
                0.00    0.00   70562/340761      std::list<int, std::allocator<int> >::begin() [8]
                0.00    0.00  270199/340761      std::list<int, std::allocator<int> >::end() [23]
[22]     0.0    0.00    0.00  340761         std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.00    0.00   18830/270199      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   28741/270199      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00   42060/270199      std::list<int, std::allocator<int> >::push_back(int const&) [13]
                0.00    0.00  180568/270199      SatProblem::getNsc2(int*, int) [4]
[23]     0.0    0.00    0.00  270199         std::list<int, std::allocator<int> >::end() [23]
                0.00    0.00  270199/340761      std::_List_iterator<int>::_List_iterator(std::_List_node_base*) [22]
-----------------------------------------------
                0.00    0.00   18830/228139      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   28741/228139      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00  180568/228139      SatProblem::getNsc2(int*, int) [4]
[24]     0.0    0.00    0.00  228139         std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [24]
-----------------------------------------------
                0.00    0.00   15246/179356      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   43558/179356      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00  120552/179356      SatProblem::getNsc2(int*, int) [4]
[25]     0.0    0.00    0.00  179356         std::_List_iterator<int>::operator*() const [25]
-----------------------------------------------
                0.00    0.00   15246/157577      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   21779/157577      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00  120552/157577      SatProblem::getNsc2(int*, int) [4]
[26]     0.0    0.00    0.00  157577         std::_List_iterator<int>::operator++(int) [26]
-----------------------------------------------
                0.00    0.00    7623/110678      SatProblem::getNsc1(int*, int) [16]
                0.00    0.00   21000/110678      SatProblem::initSatCheck(int*) [59]
                0.00    0.00   21779/110678      SatProblem::afterFlip(int*, int) [15]
                0.00    0.00   60276/110678      SatProblem::getNsc2(int*, int) [4]
[27]     0.0    0.00    0.00  110678         SatProblem::isSatCnj(int*, int) [27]
-----------------------------------------------
                0.00    0.00   84180/84180       std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [31]
[28]     0.0    0.00    0.00   84180         __gnu_cxx::new_allocator<int>::new_allocator() [28]
-----------------------------------------------
                0.00    0.00   84180/84180       std::allocator<int>::~allocator() [32]
[29]     0.0    0.00    0.00   84180         __gnu_cxx::new_allocator<int>::~new_allocator() [29]
-----------------------------------------------
                0.00    0.00      60/84180       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
                0.00    0.00   84120/84180       std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [33]
[30]     0.0    0.00    0.00   84180         std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [30]
-----------------------------------------------
                0.00    0.00      60/84180       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
                0.00    0.00   84120/84180       std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [33]
[31]     0.0    0.00    0.00   84180         std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [31]
                0.00    0.00   84180/84180       __gnu_cxx::new_allocator<int>::new_allocator() [28]
-----------------------------------------------
                0.00    0.00      60/84180       std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
                0.00    0.00   42060/84180       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
                0.00    0.00   42060/84180       std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
[32]     0.0    0.00    0.00   84180         std::allocator<int>::~allocator() [32]
                0.00    0.00   84180/84180       __gnu_cxx::new_allocator<int>::~new_allocator() [29]
-----------------------------------------------
                0.00    0.00   42060/84120       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
                0.00    0.00   42060/84120       std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
[33]     0.0    0.00    0.00   84120         std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [33]
                0.00    0.00   84120/84180       std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [30]
                0.00    0.00   84120/84180       std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [31]
-----------------------------------------------
                0.00    0.00      60/42120       void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [79]
                0.00    0.00   42060/42120       __gnu_cxx::new_allocator<int>::construct(int*, int const&) [37]
[34]     0.0    0.00    0.00   42120         operator new(unsigned int, void*) [34]
-----------------------------------------------
                0.00    0.00   42060/42060       std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [39]
[35]     0.0    0.00    0.00   42060         __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [35]
-----------------------------------------------
                0.00    0.00   42060/42060       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
[36]     0.0    0.00    0.00   42060         __gnu_cxx::new_allocator<int>::destroy(int*) [36]
-----------------------------------------------
                0.00    0.00   42060/42060       std::list<int, std::allocator<int> >::_M_create_node(int const&) [11]
[37]     0.0    0.00    0.00   42060         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [37]
                0.00    0.00   42060/42120       operator new(unsigned int, void*) [34]
-----------------------------------------------
                0.00    0.00   42060/42060       __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [9]
[38]     0.0    0.00    0.00   42060         __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [38]
-----------------------------------------------
                0.00    0.00   42060/42060       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
[39]     0.0    0.00    0.00   42060         std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [39]
                0.00    0.00   42060/42060       __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [35]
-----------------------------------------------
                0.00    0.00   41216/41216       SampleSAT::randomWalk() [17]
[40]     0.0    0.00    0.00   41216         SatProblem::getClVecSize() [40]
-----------------------------------------------
                0.00    0.00    1834/32305       SampleSAT::simAnnealing() [14]
                0.00    0.00    2301/32305       SampleSAT::randomWalk() [17]
                0.00    0.00   13170/32305       SampleSAT::greedyWalk() [5]
                0.00    0.00   15000/32305       SampleSAT::init_model() [60]
[41]     0.0    0.00    0.00   32305         SatProblem::getVar(int) [41]
-----------------------------------------------
                0.00    0.00       1/31019       SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
                0.00    0.00       1/31019       SliceSampling::init() [145]
                0.00    0.00      17/31019       main [1]
                0.00    0.00   31000/31019       printModel(std::ostream&, int*, SatProblem*) [57]
[42]     0.0    0.00    0.00   31019         SatProblem::getNumVariables() [42]
-----------------------------------------------
                0.00    0.00   30000/30000       SatProblem::initParams() [6]
[43]     0.0    0.00    0.00   30000         std::list<int, std::allocator<int> >::empty() const [43]
-----------------------------------------------
                0.00    0.00    3226/23608       SampleSAT::simAnnealing() [14]
                0.00    0.00    5382/23608       SampleSAT::walk() [3]
                0.00    0.00   15000/23608       SampleSAT::init_model() [60]
[44]     0.0    0.00    0.00   23608         SatProblem::getGrand() [44]
                0.00    0.00   23608/23608       Random::genrand() [45]
-----------------------------------------------
                0.00    0.00   23608/23608       SatProblem::getGrand() [44]
[45]     0.0    0.00    0.00   23608         Random::genrand() [45]
-----------------------------------------------
                0.00    0.00   20928/20928       SampleSAT::randomWalk() [17]
[46]     0.0    0.00    0.00   20928         SatProblem::getClVec(int) [46]
-----------------------------------------------
                0.00    0.00   18816/18816       SampleSAT::randomWalk() [17]
[47]     0.0    0.00    0.00   18816         SatProblem::getFixedClausei(int) [47]
-----------------------------------------------
                0.00    0.00       4/15049       std::_List_base<int, std::allocator<int> >::_List_base() [108]
                0.00    0.00      60/15049       std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
                0.00    0.00   14985/15049       std::list<int, std::allocator<int> >::clear() [50]
[48]     0.0    0.00    0.00   15049         std::_List_base<int, std::allocator<int> >::_M_init() [48]
-----------------------------------------------
                0.00    0.00      64/15049       std::_List_base<int, std::allocator<int> >::~_List_base() [66]
                0.00    0.00   14985/15049       std::list<int, std::allocator<int> >::clear() [50]
[49]     0.0    0.00    0.00   15049         std::_List_base<int, std::allocator<int> >::_M_clear() [49]
                0.00    0.00   42060/84120       std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [33]
                0.00    0.00   42060/42060       __gnu_cxx::new_allocator<int>::destroy(int*) [36]
                0.00    0.00   42060/84180       std::allocator<int>::~allocator() [32]
                0.00    0.00   42060/42060       std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*) [39]
-----------------------------------------------
                0.00    0.00   14985/14985       SatProblem::initParams() [6]
[50]     0.0    0.00    0.00   14985         std::list<int, std::allocator<int> >::clear() [50]
                0.00    0.00   14985/15049       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
                0.00    0.00   14985/15049       std::_List_base<int, std::allocator<int> >::_M_init() [48]
-----------------------------------------------
                0.00    0.00     896/11603       SampleSAT::randomWalk() [17]
                0.00    0.00    1784/11603       SampleSAT::greedyWalk() [5]
                0.00    0.00    1834/11603       SampleSAT::simAnnealing() [14]
                0.00    0.00    7089/11603       SampleSAT::walk() [3]
[51]     0.0    0.00    0.00   11603         SatProblem::getNumSat() [51]
-----------------------------------------------
                0.00    0.00    7290/7290        SampleSAT::randomWalk() [17]
[52]     0.0    0.00    0.00    7290         SatProblem::getCnjSize(int) [52]
-----------------------------------------------
                0.00    0.00    4602/4602        SatProblem::getCnj(int, int) [54]
[53]     0.0    0.00    0.00    4602         SatProblem::getCnf(int) [53]
-----------------------------------------------
                0.00    0.00    4602/4602        SampleSAT::randomWalk() [17]
[54]     0.0    0.00    0.00    4602         SatProblem::getCnj(int, int) [54]
                0.00    0.00    4602/4602        SatProblem::getCnf(int) [53]
-----------------------------------------------
                0.00    0.00     878/3481        SampleSAT::greedyWalk() [5]
                0.00    0.00     896/3481        SampleSAT::randomWalk() [17]
                0.00    0.00    1707/3481        SampleSAT::simAnnealing() [14]
[55]     0.0    0.00    0.00    3481         SatProblem::addNumSat(int) [55]
-----------------------------------------------
                0.00    0.00    1834/1834        SampleSAT::simAnnealing() [14]
[56]     0.0    0.00    0.00    1834         SampleSAT::getTemp() [56]
-----------------------------------------------
                0.00    0.00    1000/1000        main [1]
[57]     0.0    0.00    0.00    1000         printModel(std::ostream&, int*, SatProblem*) [57]
                0.00    0.00   31000/31019       SatProblem::getNumVariables() [42]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::solve(SatProblem*, int*) [2]
[58]     0.0    0.00    0.00    1000         SatProblem::cpClVector() [58]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::solve(SatProblem*, int*) [2]
[59]     0.0    0.00    0.00    1000         SatProblem::initSatCheck(int*) [59]
                0.00    0.00   21000/110678      SatProblem::isSatCnj(int*, int) [27]
-----------------------------------------------
                0.00    0.00    1000/1000        SampleSAT::solve(SatProblem*, int*) [2]
[60]     0.0    0.00    0.00    1000         SampleSAT::init_model() [60]
                0.00    0.00   15000/32305       SatProblem::getVar(int) [41]
                0.00    0.00   15000/23608       SatProblem::getGrand() [44]
-----------------------------------------------
                0.00    0.00      60/124         std::allocator<std::_List_node<int> >::~allocator() [74]
                0.00    0.00      64/124         std::allocator<std::_List_node<int> >::~allocator() [64]
[61]     0.0    0.00    0.00     124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [61]
-----------------------------------------------
                0.00    0.00      60/120         std::list<int, std::allocator<int> >::begin() const [71]
                0.00    0.00      60/120         std::list<int, std::allocator<int> >::end() const [70]
[62]     0.0    0.00    0.00     120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [62]
-----------------------------------------------
                0.00    0.00       4/64          std::allocator<std::_List_node<int> >::allocator() [104]
                0.00    0.00      60/64          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [72]
[63]     0.0    0.00    0.00      64         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [63]
-----------------------------------------------
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [65]
[64]     0.0    0.00    0.00      64         std::allocator<std::_List_node<int> >::~allocator() [64]
                0.00    0.00      64/124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [61]
-----------------------------------------------
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::~_List_base() [66]
[65]     0.0    0.00    0.00      64         std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [65]
                0.00    0.00      64/64          std::allocator<std::_List_node<int> >::~allocator() [64]
-----------------------------------------------
                0.00    0.00      64/64          std::list<int, std::allocator<int> >::~list() [67]
[66]     0.0    0.00    0.00      64         std::_List_base<int, std::allocator<int> >::~_List_base() [66]
                0.00    0.00      64/15049       std::_List_base<int, std::allocator<int> >::_M_clear() [49]
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl() [65]
-----------------------------------------------
                0.00    0.00       4/64          SatProblem::allocate() [141]
                0.00    0.00      60/64          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [80]
[67]     0.0    0.00    0.00      64         std::list<int, std::allocator<int> >::~list() [67]
                0.00    0.00      64/64          std::_List_base<int, std::allocator<int> >::~_List_base() [66]
-----------------------------------------------
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [73]
[68]     0.0    0.00    0.00      60         __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [68]
-----------------------------------------------
                0.00    0.00      60/60          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [77]
[69]     0.0    0.00    0.00      60         std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [69]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
[70]     0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::end() const [70]
                0.00    0.00      60/120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [62]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
[71]     0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::begin() const [71]
                0.00    0.00      60/120         std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*) [62]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
[72]     0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [72]
                0.00    0.00      60/64          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [63]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [75]
[73]     0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [73]
                0.00    0.00      60/60          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [68]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
[74]     0.0    0.00    0.00      60         std::allocator<std::_List_node<int> >::~allocator() [74]
                0.00    0.00      60/124         __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [61]
-----------------------------------------------
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
[75]     0.0    0.00    0.00      60         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [75]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [73]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
[76]     0.0    0.00    0.00      60         std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [72]
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [75]
                0.00    0.00      60/60          std::allocator<std::_List_node<int> >::~allocator() [74]
                0.00    0.00      60/15049       std::_List_base<int, std::allocator<int> >::_M_init() [48]
-----------------------------------------------
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
[77]     0.0    0.00    0.00      60         void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [77]
                0.00    0.00      60/60          std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [69]
-----------------------------------------------
                0.00    0.00      60/60          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [79]
[78]     0.0    0.00    0.00      60         std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
                0.00    0.00      60/84180       std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [30]
                0.00    0.00      60/84180       std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [31]
                0.00    0.00      60/60          std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&) [76]
                0.00    0.00      60/84180       std::allocator<int>::~allocator() [32]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::end() const [70]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::begin() const [71]
                0.00    0.00      60/60          void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type) [77]
-----------------------------------------------
                0.00    0.00      60/60          void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [114]
[79]     0.0    0.00    0.00      60         void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [79]
                0.00    0.00      60/42120       operator new(unsigned int, void*) [34]
                0.00    0.00      60/60          std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&) [78]
-----------------------------------------------
                0.00    0.00      60/60          void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
[80]     0.0    0.00    0.00      60         void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [80]
                0.00    0.00      60/64          std::list<int, std::allocator<int> >::~list() [67]
-----------------------------------------------
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [120]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [103]
[81]     0.0    0.00    0.00      24         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [81]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [122]
                0.00    0.00      16/20          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[82]     0.0    0.00    0.00      20         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [82]
-----------------------------------------------
                0.00    0.00       8/16          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [102]
[83]     0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [83]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [99]
                0.00    0.00       8/12          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [87]
[84]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [84]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [117]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [118]
[85]     0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [85]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [87]
[86]     0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [86]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [103]
[87]     0.0    0.00    0.00       8         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [87]
                0.00    0.00       8/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [86]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [84]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [94]
[88]     0.0    0.00    0.00       8         void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
                0.00    0.00      60/60          void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*) [80]
-----------------------------------------------
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [113]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[89]     0.0    0.00    0.00       8         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [89]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [98]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
[90]     0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [90]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
[91]     0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [90]
-----------------------------------------------
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [93]
[92]     0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [91]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[93]     0.0    0.00    0.00       8         std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [93]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [92]
-----------------------------------------------
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [95]
[94]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [94]
                0.00    0.00       8/8           void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [88]
-----------------------------------------------
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [122]
                0.00    0.00       4/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[95]     0.0    0.00    0.00       8         void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [95]
                0.00    0.00       8/8           void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*) [94]
-----------------------------------------------
                0.00    0.00       2/7           main [1]
                0.00    0.00       5/7           SliceSampling::printUnitTime() [144]
[96]     0.0    0.00    0.00       7         Timer::printTime(std::ostream&, double const&) [96]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[97]     0.0    0.00    0.00       4         Timer::time() [97]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [89]
[98]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [98]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [109]
[99]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [99]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [84]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [105]
[100]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [100]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [106]
[101]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [101]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[102]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [102]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [83]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[103]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [103]
                0.00    0.00      16/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [81]
                0.00    0.00       8/8           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [87]
                0.00    0.00       4/4           unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [125]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [107]
[104]    0.0    0.00    0.00       4         std::allocator<std::_List_node<int> >::allocator() [104]
                0.00    0.00       4/64          __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [63]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [110]
[105]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::allocator() [105]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [100]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [111]
[106]    0.0    0.00    0.00       4         std::allocator<std::list<int, std::allocator<int> > >::~allocator() [106]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [101]
-----------------------------------------------
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [108]
[107]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [107]
                0.00    0.00       4/4           std::allocator<std::_List_node<int> >::allocator() [104]
-----------------------------------------------
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [115]
[108]    0.0    0.00    0.00       4         std::_List_base<int, std::allocator<int> >::_List_base() [108]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [107]
                0.00    0.00       4/15049       std::_List_base<int, std::allocator<int> >::_M_init() [48]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[109]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [109]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [99]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [112]
[110]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [110]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::allocator() [105]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [113]
[111]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [111]
                0.00    0.00       4/4           std::allocator<std::list<int, std::allocator<int> > >::~allocator() [106]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [121]
[112]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [112]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl() [110]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [122]
[113]    0.0    0.00    0.00       4         std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [113]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [89]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl() [111]
-----------------------------------------------
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [123]
[114]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [114]
                0.00    0.00      60/60          void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&) [79]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [141]
[115]    0.0    0.00    0.00       4         std::list<int, std::allocator<int> >::list() [115]
                0.00    0.00       4/4           std::_List_base<int, std::allocator<int> >::_List_base() [108]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [119]
[116]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
                0.00    0.00      16/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [82]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [83]
                0.00    0.00       8/8           std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [93]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [103]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [118]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [102]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int) [109]
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [95]
                0.00    0.00       4/8           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int) [89]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [120]
[117]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [117]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [85]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[118]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin() [118]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [85]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [120]
[119]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [119]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::allocate() [141]
[120]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [120]
                0.00    0.00       8/24          std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [81]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end() [117]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [119]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::SatProblem(unsigned long, bool) [142]
[121]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [121]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base() [112]
-----------------------------------------------
                0.00    0.00       4/4           SatProblem::~SatProblem() [143]
[122]    0.0    0.00    0.00       4         std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [122]
                0.00    0.00       4/20          std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() [82]
                0.00    0.00       4/8           void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&) [95]
                0.00    0.00       4/4           std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base() [113]
-----------------------------------------------
                0.00    0.00       4/4           void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [124]
[123]    0.0    0.00    0.00       4         void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [123]
                0.00    0.00       4/4           void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [114]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&) [116]
[124]    0.0    0.00    0.00       4         void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&) [124]
                0.00    0.00       4/4           void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&) [123]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [103]
[125]    0.0    0.00    0.00       4         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [125]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [147]
[126]    0.0    0.00    0.00       2         Timer::Timer() [126]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           SliceSampling::~SliceSampling() [148]
[127]    0.0    0.00    0.00       2         Timer::~Timer() [127]
-----------------------------------------------
                0.00    0.00       2/2           SatProblem::SatProblem(unsigned long, bool) [142]
[128]    0.0    0.00    0.00       2         std::_List_iterator<int>::_List_iterator() [128]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[129]    0.0    0.00    0.00       2         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [129]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [265]
[130]    0.0    0.00    0.00       1         global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [130]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [136]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [265]
[131]    0.0    0.00    0.00       1         global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [131]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [138]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [265]
[132]    0.0    0.00    0.00       1         global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [132]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [137]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [265]
[133]    0.0    0.00    0.00       1         global constructors keyed to inCnfFile [133]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [135]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[134]    0.0    0.00    0.00       1         printParameters(samplesatparams*) [134]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to inCnfFile [133]
[135]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [135]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [130]
[136]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [136]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [132]
[137]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [137]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [131]
[138]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [138]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[139]    0.0    0.00    0.00       1         SatProblem::getNumClauses() [139]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[140]    0.0    0.00    0.00       1         SatProblem::parseProbFile(char*, std::basic_ofstream<char, std::char_traits<char> >&) [140]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::parseCnfFile(char*) [18]
[141]    0.0    0.00    0.00       1         SatProblem::allocate() [141]
                0.00    0.00       4/4           std::list<int, std::allocator<int> >::list() [115]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >) [120]
                0.00    0.00       4/64          std::list<int, std::allocator<int> >::~list() [67]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[142]    0.0    0.00    0.00       1         SatProblem::SatProblem(unsigned long, bool) [142]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector() [121]
                0.00    0.00       2/2           std::_List_iterator<int>::_List_iterator() [128]
                0.00    0.00       1/1           Random::Random() [150]
                0.00    0.00       1/1           Random::sgenrand(unsigned long) [149]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[143]    0.0    0.00    0.00       1         SatProblem::~SatProblem() [143]
                0.00    0.00       4/4           std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector() [122]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[144]    0.0    0.00    0.00       1         SliceSampling::printUnitTime() [144]
                0.00    0.00       5/7           Timer::printTime(std::ostream&, double const&) [96]
-----------------------------------------------
                0.00    0.00       1/1           SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [147]
[145]    0.0    0.00    0.00       1         SliceSampling::init() [145]
                0.00    0.00       1/31019       SatProblem::getNumVariables() [42]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[146]    0.0    0.00    0.00       1         SliceSampling::calcFixed(int) [146]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[147]    0.0    0.00    0.00       1         SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [147]
                0.00    0.00       1/2           Timer::Timer() [126]
                0.00    0.00       1/1           SliceSampling::init() [145]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[148]    0.0    0.00    0.00       1         SliceSampling::~SliceSampling() [148]
                0.00    0.00       1/2           Timer::~Timer() [127]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [142]
[149]    0.0    0.00    0.00       1         Random::sgenrand(unsigned long) [149]
-----------------------------------------------
                0.00    0.00       1/1           SatProblem::SatProblem(unsigned long, bool) [142]
[150]    0.0    0.00    0.00       1         Random::Random() [150]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[151]    0.0    0.00    0.00       1         SampleSAT::setWalkMax(int) [151]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[152]    0.0    0.00    0.00       1         SampleSAT::setNumSample(int) [152]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[153]    0.0    0.00    0.00       1         SampleSAT::setTemperature(double) [153]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[154]    0.0    0.00    0.00       1         SampleSAT::setWalkSatProb(double) [154]
-----------------------------------------------
                0.00    0.00       1/1           SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
[155]    0.0    0.00    0.00       1         SampleSAT::setRandomWalkProb(double) [155]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[156]    0.0    0.00    0.00       1         SampleSAT::calcAve() [156]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[157]    0.0    0.00    0.00       1         SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [157]
                0.00    0.00       1/1           SampleSAT::setWalkMax(int) [151]
                0.00    0.00       1/1           SampleSAT::setNumSample(int) [152]
                0.00    0.00       1/1           SampleSAT::setWalkSatProb(double) [154]
                0.00    0.00       1/1           SampleSAT::setRandomWalkProb(double) [155]
                0.00    0.00       1/1           SampleSAT::setTemperature(double) [153]
                0.00    0.00       1/31019       SatProblem::getNumVariables() [42]
                0.00    0.00       1/1           SatProblem::getNumClauses() [139]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[158]    0.0    0.00    0.00       1         SampleSAT::~SampleSAT() [158]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [130] global constructors keyed to SatProblem::SatProblem(unsigned long, bool) [153] SampleSAT::setTemperature(double) [39] std::_List_base<int, std::allocator<int> >::_M_put_node(std::_List_node<int>*)
 [131] global constructors keyed to SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [154] SampleSAT::setWalkSatProb(double) [48] std::_List_base<int, std::allocator<int> >::_M_init()
 [132] global constructors keyed to SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [155] SampleSAT::setRandomWalkProb(double) [49] std::_List_base<int, std::allocator<int> >::_M_clear()
 [133] global constructors keyed to inCnfFile [3] SampleSAT::walk() [76] std::_List_base<int, std::allocator<int> >::_List_base(std::allocator<int> const&)
  [57] printModel(std::ostream&, int*, SatProblem*) [2] SampleSAT::solve(SatProblem*, int*) [108] std::_List_base<int, std::allocator<int> >::_List_base()
 [134] printParameters(samplesatparams*) [156] SampleSAT::calcAve() [66] std::_List_base<int, std::allocator<int> >::~_List_base()
 [135] __static_initialization_and_destruction_0(int, int) [56] SampleSAT::getTemp() [88] void std::_Destroy_aux<false>::__destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
 [136] __static_initialization_and_destruction_0(int, int) [157] SampleSAT::SampleSAT(SatProblem*, samplesatparams*, bool) [109] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_allocate(unsigned int)
 [137] __static_initialization_and_destruction_0(int, int) [158] SampleSAT::~SampleSAT() [110] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::_Vector_impl()
 [138] __static_initialization_and_destruction_0(int, int) [35] __gnu_cxx::new_allocator<std::_List_node<int> >::deallocate(std::_List_node<int>*, unsigned int) [111] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_impl::~_Vector_impl()
  [58] SatProblem::cpClVector() [9] __gnu_cxx::new_allocator<std::_List_node<int> >::allocate(unsigned int, void const*) [89] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_deallocate(std::list<int, std::allocator<int> >*, unsigned int)
  [52] SatProblem::getCnjSize(int) [68] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator(__gnu_cxx::new_allocator<std::_List_node<int> > const&) [82] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator()
   [6] SatProblem::initParams() [63] __gnu_cxx::new_allocator<std::_List_node<int> >::new_allocator() [112] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_Vector_base()
  [40] SatProblem::getClVecSize() [61] __gnu_cxx::new_allocator<std::_List_node<int> >::~new_allocator() [113] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~_Vector_base()
  [59] SatProblem::initSatCheck(int*) [98] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::deallocate(std::list<int, std::allocator<int> >*, unsigned int) [22] std::_List_iterator<int>::_List_iterator(std::_List_node_base*)
  [18] SatProblem::parseCnfFile(char*) [99] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::allocate(unsigned int, void const*) [128] std::_List_iterator<int>::_List_iterator()
 [139] SatProblem::getNumClauses() [100] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::new_allocator() [26] std::_List_iterator<int>::operator++(int)
 [140] SatProblem::parseProbFile(char*, std::basic_ofstream<char, std::char_traits<char> >&) [101] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::~new_allocator() [62] std::_List_const_iterator<int>::_List_const_iterator(std::_List_node_base const*)
  [47] SatProblem::getFixedClausei(int) [36] __gnu_cxx::new_allocator<int>::destroy(int*) [90] std::list<int, std::allocator<int> >* std::__uninitialized_copy<false>::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [42] SatProblem::getNumVariables() [37] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [114] void std::__uninitialized_fill_n<false>::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
  [53] SatProblem::getCnf(int) [28] __gnu_cxx::new_allocator<int>::new_allocator() [11] std::list<int, std::allocator<int> >::_M_create_node(int const&)
  [54] SatProblem::getCnj(int, int) [29] __gnu_cxx::new_allocator<int>::~new_allocator() [77] void std::list<int, std::allocator<int> >::_M_initialize_dispatch<std::_List_const_iterator<int> >(std::_List_const_iterator<int>, std::_List_const_iterator<int>, std::__false_type)
  [41] SatProblem::getVar(int) [85] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::__normal_iterator(std::list<int, std::allocator<int> >* const&) [23] std::list<int, std::allocator<int> >::end()
  [16] SatProblem::getNsc1(int*, int) [102] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::difference_type __gnu_cxx::operator-<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&, __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > > const&) [8] std::list<int, std::allocator<int> >::begin()
   [4] SatProblem::getNsc2(int*, int) [38] __gnu_cxx::new_allocator<std::_List_node<int> >::max_size() const [50] std::list<int, std::allocator<int> >::clear()
 [141] SatProblem::allocate() [84] __gnu_cxx::new_allocator<std::list<int, std::allocator<int> > >::max_size() const [12] std::list<int, std::allocator<int> >::_M_insert(std::_List_iterator<int>, int const&)
  [46] SatProblem::getClVec(int) [83] __gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >::base() const [13] std::list<int, std::allocator<int> >::push_back(int const&)
  [44] SatProblem::getGrand() [33] std::_List_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [78] std::list<int, std::allocator<int> >::list(std::list<int, std::allocator<int> > const&)
  [27] SatProblem::isSatCnj(int*, int) [30] std::_List_base<int, std::allocator<int> >::_M_get_Node_allocator() const [115] std::list<int, std::allocator<int> >::list()
  [55] SatProblem::addNumSat(int) [86] std::_Vector_base<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_get_Tp_allocator() const [67] std::list<int, std::allocator<int> >::~list()
  [15] SatProblem::afterFlip(int*, int) [25] std::_List_iterator<int>::operator*() const [116] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
  [51] SatProblem::getNumSat() [24] std::_List_iterator<int>::operator!=(std::_List_iterator<int> const&) const [117] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::end()
 [142] SatProblem::SatProblem(unsigned long, bool) [69] std::_List_const_iterator<int>::operator!=(std::_List_const_iterator<int> const&) const [118] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::begin()
 [143] SatProblem::~SatProblem() [70] std::list<int, std::allocator<int> >::end() const [119] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::insert(__gnu_cxx::__normal_iterator<std::list<int, std::allocator<int> >*, std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > > >, unsigned int, std::list<int, std::allocator<int> > const&)
 [144] SliceSampling::printUnitTime() [71] std::list<int, std::allocator<int> >::begin() const [120] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::resize(unsigned int, std::list<int, std::allocator<int> >)
 [145] SliceSampling::init()  [43] std::list<int, std::allocator<int> >::empty() const [121] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::vector()
 [146] SliceSampling::calcFixed(int) [103] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::_M_check_len(unsigned int, char const*) const [122] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::~vector()
 [147] SliceSampling::SliceSampling(SampleSAT*, SatProblem*) [81] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::size() const [7] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::operator[](unsigned int)
 [148] SliceSampling::~SliceSampling() [87] std::vector<std::list<int, std::allocator<int> >, std::allocator<std::list<int, std::allocator<int> > > >::max_size() const [79] void std::_Construct<std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > const&)
  [97] Timer::time()          [72] std::allocator<std::_List_node<int> >::allocator<int>(std::allocator<int> const&) [91] std::list<int, std::allocator<int> >* std::uninitialized_copy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
  [96] Timer::printTime(std::ostream&, double const&) [73] std::allocator<std::_List_node<int> >::allocator(std::allocator<std::_List_node<int> > const&) [123] void std::uninitialized_fill_n<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&)
 [126] Timer::Timer()        [104] std::allocator<std::_List_node<int> >::allocator() [92] std::list<int, std::allocator<int> >* std::__uninitialized_copy_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
 [127] Timer::~Timer()        [74] std::allocator<std::_List_node<int> >::~allocator() [93] std::list<int, std::allocator<int> >* std::__uninitialized_move_a<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [45] Random::genrand()      [64] std::allocator<std::_List_node<int> >::~allocator() [124] void std::__uninitialized_fill_n_a<std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> >, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, unsigned int, std::list<int, std::allocator<int> > const&, std::allocator<std::list<int, std::allocator<int> > >&)
 [149] Random::sgenrand(unsigned long) [105] std::allocator<std::list<int, std::allocator<int> > >::allocator() [125] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [150] Random::Random()      [106] std::allocator<std::list<int, std::allocator<int> > >::~allocator() [94] void std::_Destroy<std::list<int, std::allocator<int> >*>(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*)
   [5] SampleSAT::greedyWalk() [31] std::allocator<int>::allocator<std::_List_node<int> >(std::allocator<std::_List_node<int> > const&) [95] void std::_Destroy<std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*, std::list<int, std::allocator<int> >*, std::allocator<std::list<int, std::allocator<int> > >&)
  [60] SampleSAT::init_model() [32] std::allocator<int>::~allocator() [80] void std::_Destroy<std::list<int, std::allocator<int> > >(std::list<int, std::allocator<int> >*)
  [17] SampleSAT::randomWalk() [75] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl(std::allocator<std::_List_node<int> > const&) [129] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
 [151] SampleSAT::setWalkMax(int) [107] std::_List_base<int, std::allocator<int> >::_List_impl::_List_impl() [34] operator new(unsigned int, void*)
 [152] SampleSAT::setNumSample(int) [65] std::_List_base<int, std::allocator<int> >::_List_impl::~_List_impl()
  [14] SampleSAT::simAnnealing() [10] std::_List_base<int, std::allocator<int> >::_M_get_node()
